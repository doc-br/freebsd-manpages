# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:1
#, no-wrap
msgid "TCPD"
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:2
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:4
msgid "tcpd - access control facility for internet services"
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:4
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:10
msgid ""
"The I<tcpd> program can be set up to monitor incoming requests for "
"I<telnet>, I<finger>, I<ftp>, I<exec>, I<rsh>, I<rlogin>, I<tftp>, I<talk>, "
"I<comsat> and other services that have a one-to-one mapping onto executable "
"files."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:14
msgid ""
"The program supports both 4.3BSD-style sockets and System V.4-style TLI.  "
"Functionality may be limited when the protocol underneath TLI is not an "
"internet protocol."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:20
msgid ""
"Operation is as follows: whenever a request for service arrives, the "
"I<inetd> daemon is tricked into running the I<tcpd> program instead of the "
"desired server. I<tcpd> logs the request and does some additional "
"checks. When all is well, I<tcpd> runs the appropriate server program and "
"goes away."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:25
msgid ""
"Optional features are: pattern-based access control, client username lookups "
"with the RFC 931 etc. protocol, protection against hosts that pretend to "
"have someone elses host name, and protection against hosts that pretend to "
"have someone elses network address."
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:25
#, no-wrap
msgid "LOGGING"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:32
msgid ""
"Connections that are monitored by I<tcpd> are reported through the "
"I<syslog>(3) facility. Each record contains a time stamp, the client host "
"name and the name of the requested service.  The information can be useful "
"to detect unwanted activities, especially when logfile information from "
"several hosts is merged."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:35
msgid ""
"In order to find out where your logs are going, examine the syslog "
"configuration file, usually /etc/syslog.conf."
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:35
#, no-wrap
msgid "ACCESS CONTROL"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:42
msgid ""
"Optionally, I<tcpd> supports a simple form of access control that is based "
"on pattern matching.  The access-control software provides hooks for the "
"execution of shell commands when a pattern fires.  For details, see the "
"I<hosts_access>(5) manual page."
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:42
#, no-wrap
msgid "HOST NAME VERIFICATION"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:47
msgid ""
"The authentication scheme of some protocols (I<rlogin, rsh>) relies on host "
"names. Some implementations believe the host name that they get from any "
"random name server; other implementations are more careful but use a flawed "
"algorithm."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:55
msgid ""
"I<tcpd> verifies the client host name that is returned by the "
"address-E<gt>name DNS server by looking at the host name and address that "
"are returned by the name-E<gt>address DNS server.  If any discrepancy is "
"detected, I<tcpd> concludes that it is dealing with a host that pretends to "
"have someone elses host name."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:61
msgid ""
"If the sources are compiled with -DPARANOID, I<tcpd> will drop the "
"connection in case of a host name/address mismatch.  Otherwise, the hostname "
"can be matched with the I<PARANOID> wildcard, after which suitable action "
"can be taken."
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:61
#, no-wrap
msgid "HOST ADDRESS SPOOFING"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:69
msgid ""
"Optionally, I<tcpd> disables source-routing socket options on every "
"connection that it deals with. This will take care of most attacks from "
"hosts that pretend to have an address that belongs to someone elses "
"network. UDP services do not benefit from this protection. This feature must "
"be turned on at compile time."
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:69
#, no-wrap
msgid "RFC 931"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:76
msgid ""
"When RFC 931 etc. lookups are enabled (compile-time option) I<tcpd> will "
"attempt to establish the name of the client user. This will succeed only if "
"the client host runs an RFC 931-compliant daemon.  Client user name lookups "
"will not work for datagram-oriented connections, and may cause noticeable "
"delays in the case of connections from PCs."
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:76
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:79
msgid ""
"The details of using I<tcpd> depend on pathname information that was "
"compiled into the program."
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:79
#, no-wrap
msgid "EXAMPLE 1"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:82
msgid ""
"This example applies when I<tcpd> expects that the original network daemons "
"will be moved to an \"other\" place."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:87
msgid ""
"In order to monitor access to the I<finger> service, move the original "
"finger daemon to the \"other\" place and install tcpd in the place of the "
"original finger daemon. No changes are required to configuration files."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:93
#, no-wrap
msgid ""
"# mkdir /other/place\n"
"# mv /usr/etc/in.fingerd /other/place\n"
"# cp tcpd /usr/etc/in.fingerd\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:98
msgid ""
"The example assumes that the network daemons live in /usr/etc. On some "
"systems, network daemons live in /usr/sbin or in /usr/libexec, or have no "
"`in.\\' prefix to their name."
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:98
#, no-wrap
msgid "EXAMPLE 2"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:101
msgid ""
"This example applies when I<tcpd> expects that the network daemons are left "
"in their original place."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:105
msgid ""
"In order to monitor access to the I<finger> service, perform the following "
"edits on the I<inetd> configuration file (usually I</etc/inetd.conf> or "
"I</etc/inet/inetd.conf>):"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:109
#, no-wrap
msgid "finger  stream  tcp  nowait  nobody  /usr/etc/in.fingerd  in.fingerd\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:111
#, no-wrap
msgid "becomes:\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:114
#, no-wrap
msgid "finger  stream  tcp  nowait  nobody  /some/where/tcpd     in.fingerd\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:121
msgid ""
"The example assumes that the network daemons live in /usr/etc. On some "
"systems, network daemons live in /usr/sbin or in /usr/libexec, the daemons "
"have no `in.\\' prefix to their name, or there is no userid field in the "
"inetd configuration file."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:126
msgid ""
"Similar changes will be needed for the other services that are to be covered "
"by I<tcpd>.  Send a `kill -HUP\\' to the I<inetd>(8)  process to make the "
"changes effective. AIX users may also have to execute the `inetimp\\' "
"command."
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:126
#, no-wrap
msgid "EXAMPLE 3"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:130
msgid ""
"In the case of daemons that do not live in a common directory (\"secret\" or "
"otherwise), edit the I<inetd> configuration file so that it specifies an "
"absolute path name for the process name field. For example:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:133
#, no-wrap
msgid "    ntalk  dgram  udp  wait  root  /some/where/tcpd  /usr/local/lib/ntalkd\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:138
msgid ""
"Only the last component (ntalkd) of the pathname will be used for access "
"control and logging."
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:138
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:143
msgid ""
"Some UDP (and RPC) daemons linger around for a while after they have "
"finished their work, in case another request comes in.  In the inetd "
"configuration file these services are registered with the I<wait> "
"option. Only the request that started such a daemon will be logged."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:150
msgid ""
"The program does not work with RPC services over TCP. These services are "
"registered as I<rpc/tcp> in the inetd configuration file. The only "
"non-trivial service that is affected by this limitation is I<rexd>, which is "
"used by the I<on(1)> command. This is no great loss.  On most systems, "
"I<rexd> is less secure than a wildcard in /etc/hosts.equiv."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:157
msgid ""
"RPC broadcast requests (for example: I<rwall, rup, rusers>) always appear to "
"come from the responding host. What happens is that the client broadcasts "
"the request to all I<portmap> daemons on its network; each I<portmap> daemon "
"forwards the request to a local daemon. As far as the I<rwall> etc.  daemons "
"know, the request comes from the local host."
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:157
#, no-wrap
msgid "FILES"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:160
msgid "The default locations of the host access control tables are:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:162
msgid "/etc/hosts.allow"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:164
msgid "/etc/hosts.deny"
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:164
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:170
#, no-wrap
msgid ""
"hosts_access(5), format of the tcpd access control tables.\n"
"syslog.conf(5), format of the syslogd control file.\n"
"inetd.conf(5), format of the inetd control file.\n"
msgstr ""

#. type: SH
#: /usr/src/contrib/tcp_wrappers/tcpd.8:170
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/tcp_wrappers/tcpd.8:178
#, no-wrap
msgid ""
"Wietse Venema (wietse@wzv.win.tue.nl),\n"
"Department of Mathematics and Computing Science,\n"
"Eindhoven University of Technology\n"
"Den Dolech 2, P.O. Box 513, \n"
"5600 MB Eindhoven, The Netherlands\n"
msgstr ""
