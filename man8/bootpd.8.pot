# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:31-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/libexec/bootpd/bootpd.8:5
#, no-wrap
msgid "February 10, 2004"
msgstr ""

#. type: Dt
#: /usr/src/libexec/bootpd/bootpd.8:6
#, no-wrap
msgid "BOOTPD 8"
msgstr ""

#. type: Sh
#: /usr/src/libexec/bootpd/bootpd.8:8
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:10
msgid "E<.Nm bootpd , bootpgw>"
msgstr ""

#. type: Nd
#: /usr/src/libexec/bootpd/bootpd.8:10
#, no-wrap
msgid "Internet Boot Protocol server/gateway"
msgstr ""

#. type: Sh
#: /usr/src/libexec/bootpd/bootpd.8:11
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:28
msgid ""
"E<.Nm> E<.Op Fl i | s> E<.Op Fl c Ar chdir-path> E<.Op Fl d Ar level> E<.Op "
"Fl h Ar hostname> E<.Op Fl t Ar timeout> E<.Oo> E<.Ar bootptab> E<.Op Ar "
"dumpfile> E<.Oc> E<.Nm bootpgw> E<.Op Fl i | s> E<.Op Fl d Ar level> E<.Op "
"Fl h Ar hostname> E<.Op Fl t Ar timeout> E<.Ar server>"
msgstr ""

#. type: Sh
#: /usr/src/libexec/bootpd/bootpd.8:28
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:48
msgid ""
"The E<.Nm> utility implements an Internet Bootstrap Protocol (BOOTP) server "
"as defined in RFC951, RFC1532, and RFC1533.  The E<.Nm bootpgw> utility "
"implements a simple BOOTP gateway which can be used to forward requests and "
"responses between clients on one subnet and a BOOTP server (i.e.\\& E<.Nm>)  "
"on another subnet.  While either E<.Nm> or E<.Nm bootpgw> will forward "
"BOOTREPLY packets, only E<.Nm bootpgw> will forward BOOTREQUEST packets."
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:57
msgid ""
"One host on each network segment is normally configured to run either E<.Nm> "
"or E<.Nm bootpgw> from E<.Xr inetd 8> by including one of the following "
"lines in the file E<.Pa /etc/inetd.conf>:"
msgstr ""

#. type: Dl
#: /usr/src/libexec/bootpd/bootpd.8:58
#, no-wrap
msgid "bootps dgram udp wait root /usr/libexec/bootpd bootpd /etc/bootptab"
msgstr ""

#. type: Dl
#: /usr/src/libexec/bootpd/bootpd.8:59
#, no-wrap
msgid "bootps dgram udp wait root /usr/libexec/bootpgw bootpgw server"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:72
msgid ""
"This mode of operation is referred to as \"inetd mode\" and causes E<.Nm> "
"(or E<.Nm bootpgw>)  to be started only when a boot request arrives.  If it "
"does not receive another packet within fifteen minutes of the last one it "
"received, it will exit to conserve system resources.  The E<.Fl t> option "
"controls this timeout (see OPTIONS)."
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:94
msgid ""
"It is also possible to run E<.Nm> (or E<.Nm bootpgw>)  in \"standalone "
"mode\" (without E<.Xr inetd 8>)  by simply invoking it from a shell like any "
"other regular command.  Standalone mode is particularly useful when E<.Nm> "
"is used with a large configuration database, where the start up delay might "
"otherwise prevent timely response to client requests.  (Automatic start up "
"in standalone mode can be done by invoking E<.Nm> from within E<.Pa "
"/etc/rc.local>, for example.)  Standalone mode is less useful for E<.Nm "
"bootpgw> which has very little start up delay because it does not read a "
"configuration file."
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:103
msgid ""
"Either program automatically detects whether it was invoked from inetd or "
"from a shell and automatically selects the appropriate mode.  The E<.Fl s> "
"or E<.Fl i> option may be used to force standalone or inetd mode "
"respectively (see OPTIONS)."
msgstr ""

#. type: Sh
#: /usr/src/libexec/bootpd/bootpd.8:103
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:105
msgid "The following options are available:"
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:106
#, no-wrap
msgid "Fl t Ar timeout"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:119
msgid ""
"Specify the E<.Ar timeout> value (in minutes) that a E<.Nm> or E<.Nm "
"bootpgw> process will wait for a BOOTP packet before exiting.  If no packets "
"are received for E<.Ar timeout> minutes, then the program will exit.  A "
"timeout value of zero means \"run forever\".  In standalone mode, this "
"option is forced to zero."
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:119
#, no-wrap
msgid "Fl d Ar debug-level"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:133
msgid ""
"Set the E<.Ar debug-level> variable that controls the amount of debugging "
"messages generated.  For example, E<.Fl d Ns 4> or E<.Fl d> 4 will set the "
"debugging level to 4.  For compatibility with older versions of E<.Nm>, "
"omitting the numeric parameter (i.e., just E<.Fl d>)  will simply increment "
"the debug level by one."
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:133
#, no-wrap
msgid "Fl c Ar chdir-path"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:145
msgid ""
"Set the current directory used by E<.Nm> while checking the existence and "
"size of client boot files.  This is useful when client boot files are "
"specified as relative pathnames, and E<.Nm> needs to use the same current "
"directory as the TFTP server (typically E<.Pa /tftpboot>).  This option is "
"not recognized by E<.Nm bootpgw>."
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:145
#, no-wrap
msgid "Fl h Ar hostname"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:152
msgid ""
"Specify the hostname corresponding to the IP address to listen on.  By "
"default, E<.Nm> listens on the IP address corresponding to the machine's "
"hostname, as returned by E<.Xr gethostname 3>."
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:152
#, no-wrap
msgid "Fl i"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:157
msgid ""
"Force inetd mode.  This option is obsolete, but remains for compatibility "
"with older versions of E<.Nm>."
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:157
#, no-wrap
msgid "Fl s"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:162
msgid ""
"Force standalone mode.  This option is obsolete, but remains for "
"compatibility with older versions of E<.Nm>."
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:162
#, no-wrap
msgid "Ar bootptab"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:168
msgid ""
"Specify the name of the configuration file from which E<.Nm> loads its "
"database of known clients and client options E<.No ( Nm> only)."
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:168
#, no-wrap
msgid "Ar dumpfile"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:178
msgid ""
"Specify the name of the file that E<.Nm> will dump its internal database "
"into when it receives a SIGUSR1 signal E<.No ( Nm> only).  This option is "
"only recognized if E<.Nm> was compiled with the -DDEBUG flag."
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:178
#, no-wrap
msgid "Ar server"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:184
msgid ""
"Specify the name of a BOOTP server to which E<.Nm bootpgw> will forward all "
"BOOTREQUEST packets it receives E<.Pf ( Nm bootpgw> only)."
msgstr ""

#. type: Sh
#: /usr/src/libexec/bootpd/bootpd.8:185
#, no-wrap
msgid "OPERATION"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:194
msgid ""
"Both E<.Nm> and E<.Nm bootpgw> operate similarly in that both listen for any "
"packets sent to the E<.Em bootps> port, and both simply forward any "
"BOOTREPLY packets.  They differ in their handling of BOOTREQUEST packets."
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:206
msgid ""
"When E<.Nm bootpgw> is started, it determines the address of a BOOTP server "
"whose name is provided as a command line parameter.  When E<.Nm bootpgw> "
"receives a BOOTREQUEST packet, it sets the \"gateway address\" and \"hop "
"count\" fields in the packet and forwards the packet to the BOOTP server at "
"the address determined earlier.  Requests are forwarded only if they "
"indicate that the client has been waiting for at least three seconds."
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:218
msgid ""
"When E<.Nm> is started it reads a configuration file, (normally E<.Pa "
"/etc/bootptab>)  that initializes the internal database of known clients and "
"client options.  This internal database is reloaded from the configuration "
"file when E<.Nm> receives a hangup signal (SIGHUP) or when it discovers that "
"the configuration file has changed."
msgstr ""

#.  checks the modification time of the
#.  configuration file and reloads the database if necessary.  Then it
#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:231
msgid ""
"When E<.Nm> receives a BOOTREQUEST packet, it looks for a database entry "
"matching the client request.  If the client is known, E<.Nm> composes a "
"BOOTREPLY packet using the database entry found above, and sends the reply "
"to the client (possibly using a gateway).  If the client is unknown, the "
"request is discarded (with a notice if debug E<gt> 0)."
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:238
msgid ""
"If E<.Nm> is compiled with the -DDEBUG option, receipt of a SIGUSR1 signal "
"causes it to dump its internal database to the file E<.Pa /tmp/bootpd.dump> "
"or the dumpfile specified as a command line parameter."
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:245
msgid ""
"During initialization, both programs determine the UDP port numbers to be "
"used by calling E<.Xr getservbyname 3> (which normally uses E<.Pa "
"/etc/services>).  Two service names (and port numbers) are used:"
msgstr ""

#. type: Dl
#: /usr/src/libexec/bootpd/bootpd.8:246
#, no-wrap
msgid "bootps BOOTP Server listening port"
msgstr ""

#. type: Dl
#: /usr/src/libexec/bootpd/bootpd.8:247
#, no-wrap
msgid "bootpc BOOTP Client destination port"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:252
msgid ""
"If the port numbers cannot be determined using E<.Xr getservbyname 3> then "
"the values default to bootps=67 and bootpc=68."
msgstr ""

#. type: Sh
#: /usr/src/libexec/bootpd/bootpd.8:252
#, no-wrap
msgid "FILES"
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:254
#, no-wrap
msgid "Pa /etc/bootptab"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:257
msgid "Database file read by E<.Nm>."
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:257
#, no-wrap
msgid "Pa /tmp/bootpd.dump"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:260
msgid "Debugging dump file created by E<.Nm>."
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:260
#, no-wrap
msgid "Pa /etc/services"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:262
msgid "Internet service numbers."
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:262
#, no-wrap
msgid "Pa /tftpboot"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:265
msgid "Current directory typically used by the TFTP server and E<.Nm>."
msgstr ""

#. type: Sh
#: /usr/src/libexec/bootpd/bootpd.8:266
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:270
msgid "E<.Xr bootptab 5>, E<.Xr inetd 8>, E<.Xr tftpd 8>"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:272
msgid "DARPA Internet Request For Comments:"
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:273
#, no-wrap
msgid "RFC951"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:275
msgid "Bootstrap Protocol"
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:275
#, no-wrap
msgid "RFC1532"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:277
msgid "Clarifications and Extensions for the Bootstrap Protocol"
msgstr ""

#. type: It
#: /usr/src/libexec/bootpd/bootpd.8:277
#, no-wrap
msgid "RFC1533"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:279
msgid "DHCP Options and BOOTP Vendor Extensions"
msgstr ""

#. type: Sh
#: /usr/src/libexec/bootpd/bootpd.8:280
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:283
msgid ""
"This distribution is currently maintained by E<.An Walter L. Wimer Aq Mt "
"walt+@cmu.edu>."
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:287
msgid ""
"The original BOOTP server was created by E<.An Bill Croft> at Stanford "
"University in January 1986."
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:296
msgid ""
"The current version of E<.Nm> is primarily the work of E<.An David Kovar>, "
"E<.An Drew D. Perkins>, and E<.An Walter L. Wimer>, at Carnegie Mellon "
"University."
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:298
msgid "Enhancements and bug-fixes have been contributed by:"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:300
msgid "(in alphabetical order)"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:309
msgid ""
"E<.An -split> E<.An Danny Backx Aq Mt db@sunbim.be> E<.An John Brezak Aq Mt "
"brezak@ch.hp.com> E<.An Frank da Cruz Aq Mt fdc@cc.columbia.edu> E<.An David "
"R. Linn Aq Mt drl@vuse.vanderbilt.edu> E<.An Jim McKim Aq Mt "
"mckim@lerc.nasa.gov> E<.An Gordon W. Ross Aq Mt gwr@mc.com> E<.An Jason "
"Zions Aq Mt jazz@hal.com>."
msgstr ""

#. type: Sh
#: /usr/src/libexec/bootpd/bootpd.8:309
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/libexec/bootpd/bootpd.8:310
msgid "Individual host entries must not exceed 1024 characters."
msgstr ""
