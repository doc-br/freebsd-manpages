# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:29-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:36
#, no-wrap
msgid "October 3, 2016"
msgstr ""

#. type: Dt
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:37
#, no-wrap
msgid "MOUNT_NULLFS 8"
msgstr ""

#. type: Sh
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:39
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:41
msgid "E<.Nm mount_nullfs>"
msgstr ""

#. type: Nd
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:41
#, no-wrap
msgid ""
"mount a loopback file system sub-tree; demonstrate the use of a null file "
"system layer"
msgstr ""

#. type: Sh
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:42
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:47
msgid "E<.Nm> E<.Op Fl o Ar options> E<.Ar target> E<.Ar mount-point>"
msgstr ""

#. type: Sh
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:47
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:55
msgid ""
"The E<.Nm> utility creates a null layer, duplicating a sub-tree of the file "
"system name space under another part of the global file system namespace.  "
"This allows existing files and directories to be accessed using a different "
"pathname."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:64
msgid ""
"The primary differences between a virtual copy of the file system and a "
"symbolic link are that the E<.Xr getcwd 3> functions work correctly in the "
"virtual copy, and that other file systems may be mounted on the virtual copy "
"without affecting the original.  A different device number for the virtual "
"copy is returned by E<.Xr stat 2>, but in other respects it is "
"indistinguishable from the original."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:73
msgid ""
"The E<.Nm> file system differs from a traditional loopback file system in "
"two respects: it is implemented using a stackable layers techniques, and its "
"E<.Do null-node Dc Ns s> stack above all lower-layer vnodes, not just over "
"directory vnodes."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:75
msgid "The options are as follows:"
msgstr ""

#. type: It
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:76
#, no-wrap
msgid "Fl o"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:83
msgid ""
"Options are specified with a E<.Fl o> flag followed by a comma separated "
"string of options.  See the E<.Xr mount 8> man page for possible options and "
"their meanings."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:94
msgid ""
"The null layer has two purposes.  First, it serves as a demonstration of "
"layering by providing a layer which does nothing.  (It actually does "
"everything the loopback file system does, which is slightly more than "
"nothing.)  Second, the null layer can serve as a prototype layer.  Since it "
"provides all necessary layer framework, new file system layers can be "
"created very easily by starting with a null layer."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:99
msgid ""
"The remainder of this man page examines the null layer as a basis for "
"constructing new layers."
msgstr ""

#. type: Sh
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:99
#, no-wrap
msgid "INSTANTIATING NEW NULL LAYERS"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:112
msgid ""
"New null layers are created with E<.Nm>.  The E<.Nm> utility takes two "
"arguments, the pathname of the lower vfs (target-pn) and the pathname where "
"the null layer will appear in the namespace (mount-point-pn).  After the "
"null layer is put into place, the contents of target-pn subtree will be "
"aliased under mount-point-pn."
msgstr ""

#. type: Sh
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:112
#, no-wrap
msgid "OPERATION OF A NULL LAYER"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:119
msgid ""
"The null layer is the minimum file system layer, simply bypassing all "
"possible operations to the lower layer for processing there.  The majority "
"of its activity centers on the bypass routine, through which nearly all "
"vnode operations pass."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:130
msgid ""
"The bypass routine accepts arbitrary vnode operations for handling by the "
"lower layer.  It begins by examining vnode operation arguments and replacing "
"any null-nodes by their lower-layer equivalents.  It then invokes the "
"operation on the lower layer.  Finally, it replaces the null-nodes in the "
"arguments and, if a vnode is returned by the operation, stacks a null-node "
"on top of the returned vnode."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:150
msgid ""
"Although bypass handles most operations, E<.Em vop_getattr>, E<.Em "
"vop_inactive>, E<.Em vop_reclaim>, and E<.Em vop_print> are not bypassed.  "
"E<.Em Vop_getattr> must change the fsid being returned.  E<.Em Vop_inactive> "
"and E<.Em vop_reclaim> are not bypassed so that they can handle freeing "
"null-layer specific data.  E<.Em Vop_print> is not bypassed to avoid "
"excessive debugging information."
msgstr ""

#. type: Sh
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:150
#, no-wrap
msgid "INSTANTIATING VNODE STACKS"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:155
msgid ""
"Mounting associates the null layer with a lower layer, in effect stacking "
"two VFSes.  Vnode stacks are instead created on demand as files are "
"accessed."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:161
msgid ""
"The initial mount creates a single vnode stack for the root of the new null "
"layer.  All other vnode stacks are created as a result of vnode operations "
"on this or other null vnode stacks."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:166
msgid ""
"New vnode stacks come into existence as a result of an operation which "
"returns a vnode.  The bypass routine stacks a null-node above the new vnode "
"before returning it to the caller."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:168
msgid "For example, imagine mounting a null layer with"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:170
#, no-wrap
msgid "mount_nullfs /usr/include /dev/layer/null\n"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:194
msgid ""
"Changing directory to E<.Pa /dev/layer/null> will assign the root null-node "
"(which was created when the null layer was mounted).  Now consider opening "
"E<.Pa sys>.  A vop_lookup would be done on the root null-node.  This "
"operation would bypass through to the lower layer which would return a vnode "
"representing the UFS E<.Pa sys>.  Null_bypass then builds a null-node "
"aliasing the UFS E<.Pa sys> and returns this to the caller.  Later "
"operations on the null-node E<.Pa sys> will repeat this process when "
"constructing other vnode stacks."
msgstr ""

#. type: Sh
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:194
#, no-wrap
msgid "CREATING OTHER FILE SYSTEM LAYERS"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:202
msgid ""
"One of the easiest ways to construct new file system layers is to make a "
"copy of the null layer, rename all files and variables, and then begin "
"modifying the copy.  The E<.Xr sed 1> utility can be used to easily rename "
"all variables."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:207
msgid "The umap layer is an example of a layer descended from the null layer."
msgstr ""

#. type: Sh
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:207
#, no-wrap
msgid "INVOKING OPERATIONS ON LOWER LAYERS"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:216
msgid ""
"There are two techniques to invoke operations on a lower layer when the "
"operation cannot be completely bypassed.  Each method is appropriate in "
"different situations.  In both cases, it is the responsibility of the "
"aliasing layer to make the operation arguments \"correct\" for the lower "
"layer by mapping a vnode argument to the lower layer."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:225
msgid ""
"The first approach is to call the aliasing layer's bypass routine.  This "
"method is most suitable when you wish to invoke the operation currently "
"being handled on the lower layer.  It has the advantage that the bypass "
"routine already must do argument mapping.  An example of this is E<.Em "
"null_getattrs> in the null layer."
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:236
msgid ""
"A second approach is to directly invoke vnode operations on the lower layer "
"with the E<.Em VOP_OPERATIONNAME> interface.  The advantage of this method "
"is that it is easy to invoke arbitrary operations on the lower layer.  The "
"disadvantage is that vnode arguments must be manually mapped."
msgstr ""

#. type: Sh
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:236
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:238
msgid "E<.Xr mount 8>"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:241
msgid ""
"UCLA Technical Report CSD-910056, E<.Em \"Stackable Layers: an Architecture "
"for File System Development\">."
msgstr ""

#. type: Sh
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:241
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/sbin/mount_nullfs/mount_nullfs.8:249
msgid ""
"The E<.Nm mount_null> utility first appeared in E<.Bx 4.4>.  It was renamed "
"to E<.Nm> in E<.Fx 5.0>."
msgstr ""
