# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/usr.bin/chat/chat.8:2
#, no-wrap
msgid "September 10, 2012"
msgstr ""

#. type: Dt
#: /usr/src/usr.bin/chat/chat.8:3
#, no-wrap
msgid "CHAT 8"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:7
msgid "E<.Nm chat>"
msgstr ""

#. type: Nd
#: /usr/src/usr.bin/chat/chat.8:7
#, no-wrap
msgid "Automated conversational script with a modem"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:8
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:17
msgid ""
"E<.Nm> E<.Op Fl eSsVv> E<.Op Fl f Ar chat-file> E<.Op Fl r Ar report-file> "
"E<.Op Fl T Ar phone-number> E<.Op Fl t Ar timeout> E<.Op Fl U Ar "
"phone-number2> E<.Op Ar script>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:17
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:26
msgid ""
"The E<.Nm> program defines a conversational exchange between the computer "
"and the modem.  Its primary purpose is to establish the connection between "
"the Point-to-Point Protocol Daemon E<.Pq pppd> and the remote's pppd "
"process."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:26
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:28
#, no-wrap
msgid "Fl e"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:36
msgid ""
"Start with the echo option turned on.  Echoing may also be turned on or off "
"at specific points in the chat script by using the ECHO keyword.  When "
"echoing is enabled, all output from the modem is echoed to E<.Em stderr>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:36
#, no-wrap
msgid "Fl f Ar chat-file"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:45
msgid ""
"Read the chat script from the chat file.  The use of this option is mutually "
"exclusive with the chat script parameters.  The user must have read access "
"to the file.  Multiple lines are permitted in the file.  Space or horizontal "
"tab characters should be used to separate the strings."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:45
#, no-wrap
msgid "Fl r Ar report-file"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:56
msgid ""
"Set the file for output of the report strings.  If you use the keyword E<.Dv "
"REPORT>, the resulting strings are written to this file.  If this option is "
"not used and you still use E<.Dv REPORT> keywords, the E<.Pa stderr> file is "
"used for the report strings."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:56
#, no-wrap
msgid "Fl S"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:67
msgid ""
"Do not use E<.Xr syslog 3>.  By default, error messages are sent to E<.Xr "
"syslog 3>.  The use of E<.Fl S> will prevent both log messages from E<.Fl v> "
"and error messages from being sent to E<.Xr syslog 3>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:67
#, no-wrap
msgid "Fl s"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:75
msgid ""
"Use E<.Em stderr>.  All log messages from E<.Fl v> and all error messages "
"will be sent to E<.Em stderr>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:75
#, no-wrap
msgid "Fl T Ar phone-number"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:78
msgid ""
"Pass in an arbitrary string, usually a phone number, that will be "
"substituted for the \\eT substitution metacharacter in a send string."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:78
#, no-wrap
msgid "Fl t Ar timeout"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:88
msgid ""
"Set the timeout for the expected string to be received.  If the string is "
"not received within the time limit then the reply string is not sent.  An "
"alternate reply may be sent or the script will fail if there is no alternate "
"reply string.  A failed script will cause the E<.Nm> program to terminate "
"with a non-zero error code."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:88
#, no-wrap
msgid "Fl U Ar phone-number2"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:93
msgid ""
"Pass in a second string, usually a phone number, that will be substituted "
"for the \\eU substitution metacharacter in a send string.  This is useful "
"when dialing an ISDN terminal adapter that requires two numbers."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:93
#, no-wrap
msgid "Fl V"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:106
msgid ""
"Request that the E<.Nm> script be executed in a E<.Em stderr> verbose mode.  "
"The E<.Nm> program will then log all text received from the modem and the "
"output strings sent to the modem to the stderr device.  This device is "
"usually the local console at the station running the chat or pppd program."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:106
#, no-wrap
msgid "Fl v"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:129
msgid ""
"Request that the E<.Nm> script be executed in a verbose mode.  The E<.Nm> "
"program will then log the execution state of the chat script as well as all "
"text received from the modem and the output strings sent to the modem.  The "
"default is to log through E<.Xr syslog 3>; the logging method may be altered "
"with the E<.Fl S> and E<.Fl s> flags.  Logging is done to the E<.Em local2> "
"facility at level E<.Em info> for verbose tracing and level E<.Em err> for "
"some errors."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:130
#, no-wrap
msgid "CHAT SCRIPT"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:137
msgid ""
"The E<.Nm> script defines the communications.  A script consists of one or "
"more \"expect-send\" pairs of strings, separated by spaces, with an optional "
"\"subexpect-subsend\" string pair, separated by a dash as in the following "
"example:"
msgstr ""

#. type: D1
#: /usr/src/usr.bin/chat/chat.8:138
#, no-wrap
msgid "ogin:-BREAK-ogin: ppp ssword: hello2u2"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:148
msgid ""
"This line indicates that the E<.Nm> program should expect the string "
"\"ogin:\".  If it fails to receive a login prompt within the time interval "
"allotted, it is to send a break sequence to the remote and then expect the "
"string \"ogin:\".  If the first \"ogin:\" is received then the break "
"sequence is not generated."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:155
msgid ""
"Once it received the login prompt the E<.Nm> program will send the string "
"ppp and then expect the prompt \"ssword:\".  When it receives the prompt for "
"the password, it will send the password hello2u2."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:160
msgid ""
"A carriage return is normally sent following the reply string.  It is not "
"expected in the \"expect\" string unless it is specifically requested by "
"using the \\er character sequence."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:168
msgid ""
"The expect sequence should contain only what is needed to identify the "
"string.  Since it is normally stored on a disk file, it should not contain "
"variable information.  It is generally not acceptable to look for time "
"strings, network identification strings, or other variable pieces of data as "
"an expect string."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:177
msgid ""
"To help correct for characters which may be corrupted during the initial "
"sequence, look for the string \"ogin:\" rather than \"login:\".  It is "
"possible that the leading \"l\" character may be received in error and you "
"may never find the string even though it was sent by the system.  For this "
"reason, scripts look for \"ogin:\" rather than \"login:\" and \"ssword:\" "
"rather than \"password:\"."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:179
msgid "A very simple script might look like this:"
msgstr ""

#. type: D1
#: /usr/src/usr.bin/chat/chat.8:180
#, no-wrap
msgid "ogin: ppp ssword: hello2u2"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:183
msgid ""
"In other words, expect ....ogin:, send ppp, expect ...ssword:, send "
"hello2u2."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:189
msgid ""
"In actual practice, simple scripts are rare.  At the vary least, you should "
"include sub-expect sequences should the original string not be received.  "
"For example, consider the following script:"
msgstr ""

#. type: D1
#: /usr/src/usr.bin/chat/chat.8:190
#, no-wrap
msgid "ogin:--ogin: ppp ssword: hello2u2"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:199
msgid ""
"This would be a better script than the simple one used earlier.  This would "
"look for the same login: prompt, however, if one was not received, a single "
"return sequence is sent and then it will look for login: again.  Should line "
"noise obscure the first login prompt then sending the empty line will "
"usually generate a login prompt again."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:199
#, no-wrap
msgid "COMMENTS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:210
msgid ""
"Comments can be embedded in the chat script.  A comment is a line which "
"starts with the # (hash) character in column 1.  Such comment lines are just "
"ignored by the chat program.  If a '#' character is to be expected as the "
"first character of the expect sequence, you should quote the expect string.  "
"If you want to wait for a prompt that starts with a # (hash)  character, you "
"would have to write something like this:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:213
#, no-wrap
msgid ""
"# Now wait for the prompt and send logout string\n"
"\\&'# ' logout\n"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:214
#, no-wrap
msgid "ABORT STRINGS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:230
msgid ""
"Many modems will report the status of the call as a string.  These strings "
"may be E<.Dv CONNECTED> or E<.Dv NO CARRIER> or E<.Dv BUSY>.  It is often "
"desirable to terminate the script should the modem fail to connect to the "
"remote.  The difficulty is that a script would not know exactly which modem "
"string it may receive.  On one attempt, it may receive E<.Dv BUSY> while the "
"next time it may receive E<.Dv NO CARRIER>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:234
msgid ""
"These \"abort\" strings may be specified in the script using the ABORT "
"sequence.  It is written in the script as in the following example:"
msgstr ""

#. type: D1
#: /usr/src/usr.bin/chat/chat.8:235
#, no-wrap
msgid "ABORT BUSY ABORT 'NO CARRIER' '' ATZ OK ATDT5551212 CONNECT"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:265
msgid ""
"This sequence will expect nothing; and then send the string ATZ.  The "
"expected response to this is the string E<.Dv OK>.  When it receives E<.Dv "
"OK>, the string ATDT5551212 to dial the telephone.  The expected string is "
"E<.Dv CONNECT>.  If the string E<.Dv CONNECT> is received the remainder of "
"the script is executed.  However, should the modem find a busy telephone, it "
"will send the string E<.Dv BUSY>.  This will cause the string to match the "
"abort character sequence.  The script will then fail because it found a "
"match to the abort string.  If it received the string E<.Dv NO CARRIER>, it "
"will abort for the same reason.  Either string may be received.  Either "
"string will terminate the E<.Nm> script."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:265
#, no-wrap
msgid "CLR_ABORT STRINGS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:273
msgid ""
"This sequence allows for clearing previously set E<.Dv ABORT> strings.  "
"E<.Dv ABORT> strings are kept in an array of a pre-determined size (at "
"compilation time); CLR_ABORT will reclaim the space for cleared entries so "
"that new strings can use that space."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:273
#, no-wrap
msgid "SAY STRINGS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:284
msgid ""
"The E<.Dv SAY> directive allows the script to send strings to the user at "
"the terminal via standard error.  If E<.Nm> is being run by pppd, and pppd "
"is running as a daemon (detached from its controlling terminal), standard "
"error will normally be redirected to the file E<.Pa "
"/etc/ppp/connect-errors>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:289
msgid ""
"E<.Dv SAY> strings must be enclosed in single or double quotes.  If carriage "
"return and line feed are needed in the string to be output, you must "
"explicitly add them to your string."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:295
msgid ""
"The E<.Dv SAY> strings could be used to give progress messages in sections "
"of the script where you want to have 'ECHO OFF' but still let the user know "
"what is happening.  An example is:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:307
#, no-wrap
msgid ""
"ABORT BUSY\n"
"ECHO OFF\n"
"SAY \"Dialling your ISP...\\en\"\n"
"\\&'' ATDT5551212\n"
"TIMEOUT 120\n"
"SAY \"Waiting up to 2 minutes for connection ... \"\n"
"CONNECT ''\n"
"SAY \"Connected, now logging in ...\\en\"\n"
"ogin: account\n"
"ssword: pass\n"
"$ SAY \"Logged in OK ...\\en\" I<etc ...>\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:315
msgid ""
"This sequence will only present the E<.Dv SAY> strings to the user and all "
"the details of the script will remain hidden.  For example, if the above "
"script works, the user will see:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:319
#, no-wrap
msgid ""
"Dialling your ISP...\n"
"Waiting up to 2 minutes for connection ... Connected, now logging in ...\n"
"Logged in OK ...\n"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:320
#, no-wrap
msgid "REPORT STRINGS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:327
msgid ""
"A report string is similar to the E<.Dv ABORT> string.  The difference is "
"that the strings, and all characters to the next control character such as a "
"carriage return, are written to the report file."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:336
msgid ""
"The report strings may be used to isolate the transmission rate of the "
"modem's connect string and return the value to the chat user.  The analysis "
"of the report string logic occurs in conjunction with the other string "
"processing such as looking for the expect string.  The use of the same "
"string for a report and abort sequence is probably not very useful, however, "
"it is possible."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:338
msgid "The report strings to no change the completion code of the program."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:343
msgid ""
"These \"report\" strings may be specified in the script using the E<.Dv "
"REPORT> sequence.  It is written in the script as in the following example:"
msgstr ""

#. type: D1
#: /usr/src/usr.bin/chat/chat.8:344
#, no-wrap
msgid "REPORT CONNECT ABORT BUSY '' ATDT5551212 CONNECT '' ogin: account"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:357
msgid ""
"This sequence will expect nothing; and then send the string ATDT5551212 to "
"dial the telephone.  The expected string is E<.Dv CONNECT>.  If the string "
"E<.Dv CONNECT> is received the remainder of the script is executed.  In "
"addition the program will write to the expect-file the string \"CONNECT\" "
"plus any characters which follow it such as the connection rate."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:357
#, no-wrap
msgid "CLR_REPORT STRINGS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:365
msgid ""
"This sequence allows for clearing previously set E<.Dv REPORT> strings.  "
"E<.Dv REPORT> strings are kept in an array of a pre-determined size (at "
"compilation time); CLR_REPORT will reclaim the space for cleared entries so "
"that new strings can use that space."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:365
#, no-wrap
msgid "ECHO"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:385
msgid ""
"The echo options controls whether the output from the modem is echoed to "
"E<.Em stderr>.  This option may be set with the E<.Fl e> option, but it can "
"also be controlled by the E<.Dv ECHO> keyword.  The \"expect-send\" pair "
"E<.Dv ECHO ON> enables echoing, and E<.Dv ECHO OFF> disables it.  With this "
"keyword you can select which parts of the conversation should be visible.  "
"For instance, with the following script:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:394
#, no-wrap
msgid ""
"ABORT   'BUSY'\n"
"ABORT   'NO CARRIER'\n"
"\\&''      ATZ\n"
"OK\\er\\en  ATD1234567\n"
"\\er\\en    \\ec\n"
"ECHO    ON\n"
"CONNECT \\ec\n"
"ogin:   account\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:403
msgid ""
"all output resulting from modem configuration and dialing is not visible, "
"but starting with the E<.Dv CONNECT> or E<.Dv BUSY> message, everything will "
"be echoed."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:403
#, no-wrap
msgid "HANGUP"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:416
msgid ""
"The E<.Dv HANGUP> options control whether a modem hangup should be "
"considered as an error or not.  This option is useful in scripts for "
"dialling systems which will hang up and call your system back.  The E<.Dv "
"HANGUP> options can be E<.Dv ON> or E<.Dv OFF>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:433
msgid ""
"When E<.Dv HANGUP> is set E<.Dv OFF> and the modem hangs up (e.g., after the "
"first stage of logging in to a callback system), E<.Nm> will continue "
"running the script (e.g., waiting for the incoming call and second stage "
"login prompt).  As soon as the incoming call is connected, you should use "
"the E<.Dv HANGUP ON> directive to reinstall normal hang up signal behavior.  "
"Here is a (simple) example script:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:449
#, no-wrap
msgid ""
"ABORT   'BUSY'\n"
"\\&''      ATZ\n"
"OK\\er\\en  ATD1234567\n"
"\\er\\en    \\ec\n"
"CONNECT \\ec\n"
"\\&'Callback login:' call_back_ID\n"
"HANGUP OFF\n"
"ABORT \"Bad Login\"\n"
"\\&'Callback Password:' Call_back_password\n"
"TIMEOUT 120\n"
"CONNECT \\ec\n"
"HANGUP ON\n"
"ABORT \"NO CARRIER\"\n"
"ogin:--BREAK--ogin: real_account\n"
"I<etc ...>\n"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:450
#, no-wrap
msgid "TIMEOUT"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:455
msgid ""
"The initial timeout value is 45 seconds.  This may be changed using the "
"E<.Fl t> parameter."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:458
msgid ""
"To change the timeout value for the next expect string, the following "
"example may be used:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:460
#, no-wrap
msgid ""
"ATZ OK ATDT5551212 CONNECT TIMEOUT 10 ogin:--ogin: TIMEOUT 5 assword: "
"hello2u2\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:466
msgid ""
"This will change the timeout to 10 seconds when it expects the login: "
"prompt.  The timeout is then changed to 5 seconds when it looks for the "
"password prompt."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:468
msgid "The timeout, once changed, remains in effect until it is changed again."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:468
#, no-wrap
msgid "SENDING EOT"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:480
msgid ""
"The special reply string of E<.Dv EOT> indicates that the chat program "
"should send an E<.Dv EOT> character to the remote.  This is normally the "
"End-of-file character sequence.  A return character is not sent following "
"the E<.Dv EOT>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:485
msgid ""
"The E<.Dv EOT> sequence may be embedded into the send string using the "
"sequence ^D."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:485
#, no-wrap
msgid "GENERATING BREAK"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:495
msgid ""
"The special reply string of E<.Dv BREAK> will cause a break condition to be "
"sent.  The break is a special signal on the transmitter.  The normal "
"processing on the receiver is to change the transmission rate.  It may be "
"used to cycle through the available transmission rates on the remote until "
"you are able to receive a valid login prompt."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:498
msgid ""
"The break sequence may be embedded into the send string using the I<\\eK> "
"sequence."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:498
#, no-wrap
msgid "ESCAPE SEQUENCES"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:504
msgid ""
"The expect and reply strings may contain escape sequences.  All of the "
"sequences are legal in the reply string.  Many are legal in the expect.  "
"Those which are not valid in the expect sequence are so indicated."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:505
#, no-wrap
msgid "''"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:511
msgid ""
"Expects or sends a null string.  If you send a null string then it will "
"still send the return character.  This sequence may either be a pair of "
"apostrophe or quote characters."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:511
#, no-wrap
msgid "\\eb"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:513
msgid "represents a backspace character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:513
#, no-wrap
msgid "\\ec"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:522
msgid ""
"Suppresses the newline at the end of the reply string.  This is the only "
"method to send a string without a trailing return character.  It must be at "
"the end of the send string.  For example, the sequence hello\\ec will simply "
"send the characters h, e, l, l, o E<.Pq Em not valid in expect>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:522
#, no-wrap
msgid "\\ed"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:527
msgid ""
"Delay for one second.  The program uses sleep(1) which will delay to a "
"maximum of one second E<.Pq Em not valid in expect>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:527
#, no-wrap
msgid "\\eK"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:531
msgid "Insert a E<.Dv BREAK> E<.Pq Em not valid in expect>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:531
#, no-wrap
msgid "\\en"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:533
msgid "Send a newline or linefeed character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:533
#, no-wrap
msgid "\\eN"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:537
msgid ""
"Send a null character.  The same sequence may be represented by \\e0 E<.Pq "
"Em not valid in expect>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:537
#, no-wrap
msgid "\\ep"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:541
msgid ""
"Pause for a fraction of a second.  The delay is 1/10th of a second E<.Pq Em "
"not valid in expect>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:541
#, no-wrap
msgid "\\eq"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:547
msgid ""
"Suppress writing the string to E<.Xr syslogd 8>.  The string ?????? is "
"written to the log in its place E<.Pq Em not valid in expect>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:547
#, no-wrap
msgid "\\er"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:549
msgid "Send or expect a carriage return."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:549
#, no-wrap
msgid "\\es"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:555
msgid ""
"Represents a space character in the string.  This may be used when it is not "
"desirable to quote the strings which contains spaces.  The sequence 'HI TIM' "
"and HI\\esTIM are the same."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:555
#, no-wrap
msgid "\\et"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:557
msgid "Send or expect a tab character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:557
#, no-wrap
msgid "\\e"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:559
msgid "Send or expect a backslash character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:559
#, no-wrap
msgid "\\eddd"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:563
msgid ""
"Collapse the octal digits (ddd) into a single ASCII character and send that "
"character E<.Pq Em some characters are not valid in expect>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:563
#, no-wrap
msgid "\\^^C"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:567
msgid ""
"Substitute the sequence with the control character represented by C.  For "
"example, the character DC1 (17) is shown as \\^^Q E<.Pq Em some characters "
"are not valid in expect>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:568
#, no-wrap
msgid "TERMINATION CODES"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:573
msgid "The E<.Nm> program will terminate with the following completion codes."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:574
#, no-wrap
msgid "0"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:578
msgid ""
"The normal termination of the program.  This indicates that the script was "
"executed without error to the normal conclusion."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:578
#, no-wrap
msgid "1"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:583
msgid ""
"One or more of the parameters are invalid or an expect string was too large "
"for the internal buffers.  This indicates that the program as not properly "
"executed."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:583
#, no-wrap
msgid "2"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:589
msgid ""
"An error occurred during the execution of the program.  This may be due to a "
"read or write operation failing for some reason or chat receiving a signal "
"such as E<.Dv SIGINT>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:589
#, no-wrap
msgid "3"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:597
msgid ""
"A timeout event occurred when there was an E<.Em expect> string without "
"having a \"-subsend\" string.  This may mean that you did not program the "
"script correctly for the condition or that some unexpected event has "
"occurred and the expected string could not be found."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:597
#, no-wrap
msgid "4"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:601
msgid "The first string marked as an E<.Dv ABORT> condition occurred."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:601
#, no-wrap
msgid "5"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:605
msgid "The second string marked as an E<.Dv ABORT> condition occurred."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:605
#, no-wrap
msgid "6"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:609
msgid "The third string marked as an E<.Dv ABORT> condition occurred."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:609
#, no-wrap
msgid "7"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:613
msgid "The fourth string marked as an E<.Dv ABORT> condition occurred."
msgstr ""

#. type: It
#: /usr/src/usr.bin/chat/chat.8:613
#, no-wrap
msgid "..."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:617
msgid ""
"The other termination codes are also strings marked as an E<.Dv ABORT> "
"condition."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:626
msgid ""
"Using the termination code, it is possible to determine which event "
"terminated the script.  It is possible to decide if the string \"BUSY\" was "
"received from the modem as opposed to \"NO DIAL TONE\".  While the first "
"event may be retried, the second will probably have little chance of "
"succeeding during a retry."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:626
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:635
msgid ""
"Additional information about E<.Nm> scripts may be found with UUCP "
"documentation.  The E<.Nm> script was taken from the ideas proposed by the "
"scripts used by the uucico program."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:638
msgid "E<.Xr syslog 3>, E<.Xr syslogd 8>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/chat/chat.8:638
#, no-wrap
msgid "COPYRIGHT"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/chat/chat.8:644
msgid ""
"The E<.Nm> program is in public domain.  This is not the GNU public "
"license.  If it breaks then you get to keep both pieces."
msgstr ""
