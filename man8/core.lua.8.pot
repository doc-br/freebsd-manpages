# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/stand/lua/core.lua.8:29
#, no-wrap
msgid "March 21, 2018"
msgstr ""

#. type: Dt
#: /usr/src/stand/lua/core.lua.8:30
#, no-wrap
msgid "CORE.LUA 8"
msgstr ""

#. type: Sh
#: /usr/src/stand/lua/core.lua.8:32
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:34
msgid "E<.Nm core.lua>"
msgstr ""

#. type: Nd
#: /usr/src/stand/lua/core.lua.8:34
#, no-wrap
msgid "FreeBSD core module"
msgstr ""

#. type: Sh
#: /usr/src/stand/lua/core.lua.8:35
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:38
msgid "E<.Nm> contains core functionality that does not have a more fitting module."
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:42
msgid ""
"Before hooking into or using the functionality provided by E<.Nm>, it must "
"be included with a statement such as the following:"
msgstr ""

#. type: Dl
#: /usr/src/stand/lua/core.lua.8:43
#, no-wrap
msgid "local core = require(\"core\")"
msgstr ""

#. type: Ss
#: /usr/src/stand/lua/core.lua.8:44
#, no-wrap
msgid "CONSTANTS"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:47
msgid "The following raw key code constants are defined in E<.Nm>:"
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:48
#, no-wrap
msgid "Ic KEY_BACKSPACE"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:53
msgid ""
"The backspace code.  Should generally be checked along with E<.Ic "
"KEY_DELETE> for backspace functionality."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:53
#, no-wrap
msgid "Ic KEY_ENTER"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:55
msgid "The enter key, or hard return."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:55
#, no-wrap
msgid "Ic KEY_DELETE"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:60
msgid ""
"The delete code.  Should generally be checked along with E<.Ic "
"KEY_BACKSPACE> for backspace functionality."
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:64
msgid "The following key-string constants are defined in E<.Nm>:"
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:65
#, no-wrap
msgid "Ic KEYSTR_ESCAPE"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:67
msgid "The escape key."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:67
#, no-wrap
msgid "Ic KEYSTR_CSI"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:69
msgid "The ANSI CSI sequence."
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:73
msgid "The following menu entry type constants are defined in E<.Nm>:"
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:74
#, no-wrap
msgid "Ic MENU_RETURN"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:76
msgid "Return to the parent menu."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:76
#, no-wrap
msgid "Ic MENU_ENTRY"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:78
msgid "A normal menu entry."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:78
#, no-wrap
msgid "Ic MENU_SEPARATOR"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:80
msgid "A menu entry that serves as a separator."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:80
#, no-wrap
msgid "Ic MENU_SUBMENU"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:82
msgid "A menu entry that opens a submenu when selected."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:82
#, no-wrap
msgid "Ic MENU_CAROUSEL_ENTRY"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:85
msgid ""
"A menu entry that rotates through items like a carousel upon selection of "
"the menu entry."
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:92
msgid ""
"Please see E<.Xr menu.lua 8> for extended descriptions and usage of the "
"E<.Ic MENU_*> constants."
msgstr ""

#. type: Ss
#: /usr/src/stand/lua/core.lua.8:92
#, no-wrap
msgid "Exported functions"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:95
msgid "The following functions are exported from E<.Nm>:"
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:96
#, no-wrap
msgid "Fn core.setVerbose verbose"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:102
msgid ""
"Sets or unsets E<.Ev boot_verbose>.  If E<.Fa verbose> is omitted, toggle "
"the current verbose setting."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:102
#, no-wrap
msgid "Fn core.setSingleUser singleUser"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:108
msgid ""
"Sets or unsets E<.Ev boot_single>.  If E<.Fa singleUser> is omitted, toggle "
"the current single user setting."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:108
#, no-wrap
msgid "Fn core.getACPIPresent checkingSystemDefaults"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:117
msgid ""
"Check whether ACPI is present.  This will only be accurate for "
"i386-compatible loaders, including non-UEFI loaders on amd64 systems.  If "
"E<.Fa checkingSystemDefaults> is true, ignore the current value of E<.Ev "
"hint.acpi.0.disabled>.  Otherwise, return true only if ACPI is both present "
"and not disabled."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:117
#, no-wrap
msgid "Fn core.setACPI acpi"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:126
msgid ""
"Sets or unsets E<.Ev acpi_load>, E<.Ev hint.acpi.0.disabled>, and E<.Ev "
"loader.acpi_disabled_by_user>.  If E<.Fa acpi> is omitted, toggle the "
"current ACPI setting."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:126
#, no-wrap
msgid "Fn core.setSafeMode safeMode"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:140
msgid ""
"Set the safe mode setting.  Sets or unsets E<.Ev kern.smp.disabled>, E<.Ev "
"hw.ata.ata_dma>, E<.Ev hw.ata.atapi_dma>, E<.Ev hw.ata.wc>, E<.Ev "
"hw.eisa_slots>, E<.Ev kern.eventtimer.periodic>, and E<.Ev "
"kern.geom.part.check_integrity>.  If E<.Fa safeMode> is omitted, toggle the "
"current safe mode setting."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:140
#, no-wrap
msgid "Fn core.clearCachedKernels"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:150
msgid ""
"Clears out the cache of kernels to be displayed on the boot menu.  This "
"function is registered as a E<.Ev config.reloaded> hook.  It is used to "
"invalidate the kernel list whenever it may have changed, either due to a "
"boot environment change or a potential change in either E<.Ic kernel> or "
"E<.Ic kernels>."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:150
#, no-wrap
msgid "Fn core.kernelList"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:163
msgid ""
"Returns a table of kernels to display on the boot menu.  This will combine "
"E<.Ic kernel> and E<.Ic kernels> from E<.Xr loader.conf 5>.  If E<.Ic "
"kernels_autodetect> is set in E<.Xr loader.conf 5>, kernels will be "
"autodetected from the current system."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:163
#, no-wrap
msgid "Fn core.bootenvDefault"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:165
msgid "Returns the default boot environment, nil if unset."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:165
#, no-wrap
msgid "Fn core.bootenvList"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:173
msgid ""
"Returns a table of boot environments, or an empty table.  These will be "
"picked up using the E<.Ev bootenvs> and E<.Ev bootenvs_count> variables set "
"by E<.Xr loader 8>."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:173
#, no-wrap
msgid "Fn core.setDefaults"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:176
msgid ""
"Resets ACPI, safe mode, single user, and verbose settings to their system "
"defauilts."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:176
#, no-wrap
msgid "Fn core.autoboot argstr"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:183
msgid ""
"Loads the kernel and specified modules, then invokes the E<.Ic autoboot> "
"E<.Xr loader 8> command with E<.Fa argstr> as-is."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:183
#, no-wrap
msgid "Fn core.boot argstr"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:190
msgid ""
"Loads the kernel and specified modules, then invokes the E<.Ic boot> E<.Xr "
"loader 8> command with E<.Fa argstr> as-is."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:190
#, no-wrap
msgid "Fn core.isSingleUserBoot"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:194
msgid "Returns true if E<.Ev boot_single> is set to yes."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:194
#, no-wrap
msgid "Fn core.isZFSBoot"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:200
msgid "Returns true if E<.Ev currdev> is set to a E<.Xr zfs 8> dataset."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:200
#, no-wrap
msgid "Fn core.isSerialBoot"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:207
msgid ""
"Returns true if we are booting over serial.  This checks E<.Ev console>, "
"E<.Ev boot_serial>, and E<.Ev boot_multicons>."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:207
#, no-wrap
msgid "Fn core.isSystem386"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:210
msgid ""
"Returns true if this bootloader was compiled as an i386 binary.  This "
"generally applies to i386 loaders as well as non-UEFI loaders on amd64."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:210
#, no-wrap
msgid "Fn core.deepCopyTable tbl"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:214
msgid "Recursively deep copies E<.Fa tbl> and returns the result."
msgstr ""

#. type: It
#: /usr/src/stand/lua/core.lua.8:214
#, no-wrap
msgid "Fn core.popFrontTable tbl"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:222
msgid ""
"Pops the front element off of E<.Fa tbl>, and returns two return values: the "
"front element, and the rest of the table.  If there are no elements, this "
"returns nil and nil.  If there is one element, this returns the front "
"element and an empty table.  This will not operate on truly associative "
"tables; numeric indices are required."
msgstr ""

#. type: Sh
#: /usr/src/stand/lua/core.lua.8:223
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:227
msgid "E<.Xr loader.conf 5>, E<.Xr loader 8>, E<.Xr menu.lua 8>"
msgstr ""

#. type: Sh
#: /usr/src/stand/lua/core.lua.8:227
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/stand/lua/core.lua.8:233
msgid ""
"The E<.Nm> file was originally written by E<.An Pedro Souza Aq Mt "
"pedrosouza@FreeBSD.org>.  Later work and this manual page was done by E<.An "
"Kyle Evans Aq Mt kevans@FreeBSD.org>."
msgstr ""
