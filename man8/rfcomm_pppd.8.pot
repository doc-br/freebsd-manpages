# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:31-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:28
#, no-wrap
msgid "February 4, 2003"
msgstr ""

#. type: Dt
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:29
#, no-wrap
msgid "RFCOMM_PPPD 8"
msgstr ""

#. type: Sh
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:31
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:33
msgid "E<.Nm rfcomm_pppd>"
msgstr ""

#. type: Nd
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:33
#, no-wrap
msgid "RFCOMM PPP daemon"
msgstr ""

#. type: Sh
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:34
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:48
msgid ""
"E<.Nm> E<.Fl c> E<.Op Fl dh> E<.Fl a Ar address> E<.Fl C Ar channel> E<.Fl l "
"Ar label> E<.Fl u Ar N> E<.Nm> E<.Fl s> E<.Op Fl dDhS> E<.Op Fl a Ar "
"address> E<.Fl C Ar channel> E<.Fl l Ar label>"
msgstr ""

#. type: Sh
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:48
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:55
msgid ""
"The E<.Nm> daemon is a simple wrapper daemon that allows the use of E<.Xr "
"ppp 8> via an RFCOMM connection.  It can operate in two modes: client and "
"server."
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:76
msgid ""
"In client mode, E<.Nm> opens an RFCOMM connection to the specified server's "
"E<.Ar BD_ADRR> and E<.Ar channel>.  Once the RFCOMM connection is "
"established, E<.Nm> executes E<.Xr ppp 8> in E<.Fl direct> mode with the "
"specified E<.Ar label>.  Likewise, E<.Xr ppp 8> operates over the RFCOMM "
"connection just like it would over a standard serial port, thus allowing a "
"user to E<.Dq \"dial out\"> and connect to the Internet."
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:92
msgid ""
"In server mode, E<.Nm> opens an RFCOMM socket and listens for incoming "
"connections from remote clients.  Once the new incoming connection is "
"accepted, E<.Nm> forks and executes E<.Xr ppp 8> in E<.Fl direct> mode with "
"the specified E<.Ar label>.  Likewise, E<.Xr ppp 8> operates over the RFCOMM "
"connection just like it would over a standard serial port, thus providing "
"network connectivity to remote clients."
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:94
msgid "The options are as follows:"
msgstr ""

#. type: It
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:95
#, no-wrap
msgid "Fl a Ar address"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:108
msgid ""
"In client mode, this required option specifies the address of the remote "
"RFCOMM server.  In server mode, this option can be used to specify the local "
"address to listen on.  By default, in server mode, the daemon will listen on "
"E<.Dv ANY> address.  The address can be specified as BD_ADDR or name.  If a "
"name was specified, the E<.Nm> utility will attempt to resolve the name via "
"E<.Xr bt_gethostbyname 3>."
msgstr ""

#. type: It
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:108
#, no-wrap
msgid "Fl C Ar channel"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:123
msgid ""
"In both client and server mode, this required option specifies the RFCOMM "
"channel to connect to or listen on.  In server mode, the channel should be a "
"number between 1 and 30.  In client mode, the channel could either be a "
"number between 1 and 30 or a service name.  Supported service names are: "
"E<.Cm DUN> (Dial-Up Networking) and E<.Cm LAN> (LAN Access Using PPP).  If a "
"service name is used instead of a numeric channel number, then E<.Nm> will "
"try to obtain an RFCOMM channel number via SDP (Service Discovery Protocol)."
msgstr ""

#. type: It
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:123
#, no-wrap
msgid "Fl c"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:126
msgid "Act as an RFCOMM client.  This is the default mode."
msgstr ""

#. type: It
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:126
#, no-wrap
msgid "Fl d"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:128
msgid "Do not detach from the controlling terminal, i.e., run in foreground."
msgstr ""

#. type: It
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:128
#, no-wrap
msgid "Fl D"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:137
msgid ""
"In server mode, register the E<.Cm DUN> (Dial-Up Networking) service in "
"addition to the E<.Cm LAN> (LAN Access Using PPP) service.  AT-command "
"exchange can be faked with E<.Xr ppp 8> chat script."
msgstr ""

#. type: It
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:137
#, no-wrap
msgid "Fl h"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:139
msgid "Display usage message and exit."
msgstr ""

#. type: It
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:139
#, no-wrap
msgid "Fl l Ar label"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:143
msgid ""
"In both client and server mode, this required option specifies which E<.Xr "
"ppp 8> label will be used."
msgstr ""

#. type: It
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:143
#, no-wrap
msgid "Fl S"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:149
msgid ""
"In server mode, register the E<.Cm SP> (Serial Port) service in addition to "
"the E<.Cm LAN> (LAN Access Using PPP) service."
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:172
msgid ""
"It appears that some cell phones are using the so-called E<.Dq \"callback "
"mechanism\">.  In this scenario, the user is trying to connect his cell "
"phone to the Internet, while the user's host computer is acting as the "
"gateway server.  It seems that it is not possible to tell the phone to just "
"connect and start using the E<.Cm LAN> service.  Instead, the user's host "
"computer must E<.Dq \"jump start\"> the phone by connecting to the phone's "
"E<.Cm SP> service.  What happens next is the phone kills the existing "
"connection and opens another connection back to the user's host computer.  "
"The phone really wants to use the E<.Cm LAN> service, but for whatever "
"reason it looks for the E<.Cm SP> service on the user's host computer.  This "
"brain-damaged behavior was reported for the Nokia 6600 and the Sony/Ericsson "
"P900."
msgstr ""

#. type: It
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:172
#, no-wrap
msgid "Fl s"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:174
msgid "Act as an RFCOMM server."
msgstr ""

#. type: It
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:174
#, no-wrap
msgid "Fl u Ar N"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:185
msgid ""
"This option maps directly to the E<.Fl unit> E<.Xr ppp 8> command-line "
"option and tells E<.Nm> to instruct E<.Xr ppp 8> to only attempt to open "
"E<.Pa /dev/tun Ns Ar N>.  This option only works in client mode."
msgstr ""

#. type: Sh
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:186
#, no-wrap
msgid "PPP CONFIGURATION"
msgstr ""

#. type: Ss
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:187
#, no-wrap
msgid "Important Notes on PPP Configuration"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:209
msgid ""
"Special attention is required when adding new RFCOMM configurations to the "
"existing PPP configuration.  Please keep in mind that PPP will E<.Em always> "
"execute commands in the E<.Dq Li default> label of your E<.Pa "
"/etc/ppp/ppp.conf> file.  Please make sure that the E<.Dq Li default> label "
"E<.Em only> contains commands that apply to E<.Em every> other label.  If "
"you need to use PPP for both dialing out and accepting incoming RFCOMM "
"connections, please make sure you have moved all commands related to dialing "
"out from the E<.Dq Li default> section into an appropriate outgoing label."
msgstr ""

#. type: Ss
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:209
#, no-wrap
msgid "RFCOMM Server"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:215
msgid ""
"One of the typical examples is the LAN access.  In this example, an RFCOMM "
"connection is used as a null-modem connection between a client and a "
"server.  Both client and server will start talking PPP right after the "
"RFCOMM connection has been established."
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:229
#, no-wrap
msgid ""
"rfcomm-server:\n"
" set timeout 0\n"
" set lqrperiod 10\n"
" set ifaddr 10.0.0.1 10.0.0.2 255.255.255.0\n"
" enable lqr\n"
" accept lqr\n"
" accept dns\n"
" # Do not use PPP authentication. Assume that\n"
" # Bluetooth connection was authenticated already\n"
" disable pap\n"
" deny pap\n"
" disable chap\n"
" deny chap\n"
msgstr ""

#. type: Ss
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:230
#, no-wrap
msgid "RFCOMM Client"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:241
msgid ""
"The E<.Nm> utility supports both E<.Cm LAN> (LAN Access Using PPP) and E<.Cm "
"DUN> (Dial-Up Networking) access.  The client's configuration for E<.Cm LAN> "
"access is very similar to the server's and might look like this:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:255
#, no-wrap
msgid ""
"rfcomm-client:\n"
" enable lqr\n"
" accept lqr\n"
" set dial\n"
" set timeout 0\n"
" disable iface-alias\n"
" set ifaddr 10.0.0.1/0 10.0.0.2/0 255.255.255.0 0.0.0.0\n"
" # Do not use PPP authentication. Assume that\n"
" # Bluetooth connection was authenticated already\n"
" deny pap\n"
" disable pap\n"
" deny chap\n"
" disable chap\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:270
msgid ""
"The client's configuration for E<.Cm DUN> access is different.  In this "
"scenario, the client gets connected to the virtual serial port on the "
"server.  To open a PPP session, the client must dial a number.  Note that by "
"default E<.Xr ppp 8> will not execute any configured chat scripts.  The "
"E<.Ic force-scripts> option can be used to override this behavior.  An "
"example configuration is shown below:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:274
#, no-wrap
msgid ""
"rfcomm-dialup:\n"
" # This is IMPORTANT option\n"
" enable force-scripts\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:279
#, no-wrap
msgid ""
" # You might want to change these\n"
" set authname\n"
" set authkey\n"
" set phone \"*99***1#\"\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:287
#, no-wrap
msgid ""
" # You might want to adjust dial string as well\n"
" set dial \"ABORT BUSY ABORT NO\\e\\esCARRIER TIMEOUT 5 \\e\n"
"           \\e\"\\e\" AT OK-AT-OK ATE1Q0 OK \\e\\edATDT\\e\\eT TIMEOUT 40 "
"CONNECT\"\n"
" set login\n"
" set timeout 30\n"
" enable dns\n"
" resolv rewrite\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:290
#, no-wrap
msgid ""
" set ifaddr 10.0.0.1/0 10.0.0.2/0 255.255.255.0 0.0.0.0\n"
" add default HISADDR\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:297
msgid ""
"Note that by adjusting the initialization string, one can make a CSD "
"(Circuit Switched Data), HSCSD (High Speed Circuit Switched Data) or GPRS "
"(General Packet Radio Service) connection.  The availability of the "
"particular connection type depends on the phone model and service plan "
"activated on the phone."
msgstr ""

#. type: Sh
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:297
#, no-wrap
msgid "EXIT STATUS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:299
msgid "E<.Ex -std>"
msgstr ""

#. type: Sh
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:299
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Dl
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:300
#, no-wrap
msgid "rfcomm_pppd -s -a 00:01:02:03:04:05 -C 1 -l rfcomm-server"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:318
msgid ""
"This command will start E<.Nm> in the server mode.  The RFCOMM server will "
"listen on local address E<.Li 00:01:02:03:04:05> and channel E<.Li 1>.  Once "
"the incoming connection has been accepted, E<.Nm> will execute E<.Xr ppp 8> "
"in E<.Fl direct> mode with the E<.Dq Li rfcomm-server> label."
msgstr ""

#. type: Dl
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:319
#, no-wrap
msgid "rfcomm_pppd -c -a 00:01:02:03:04:05 -C 1 -l rfcomm-client"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:338
msgid ""
"This command will start E<.Nm> in the client mode.  E<.Nm> will try to "
"connect to the RFCOMM server at E<.Li 00:01:02:03:04:05> address and channel "
"E<.Li 1>.  Once connected, E<.Nm> will execute E<.Xr ppp 8> in E<.Fl direct> "
"mode with the E<.Dq Li rfcomm-client> label."
msgstr ""

#. type: Sh
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:338
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:345
msgid ""
"E<.Xr rfcomm_sppd 1>, E<.Xr bluetooth 3>, E<.Xr ng_btsocket 4>, E<.Xr ppp "
"8>, E<.Xr sdpcontrol 8>, E<.Xr sdpd 8>"
msgstr ""

#. type: Sh
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:345
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:347
msgid "E<.An Maksim Yevmenkin Aq Mt m_evmenkin@yahoo.com>"
msgstr ""

#. type: Sh
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:347
#, no-wrap
msgid "CAVEATS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.sbin/bluetooth/rfcomm_pppd/rfcomm_pppd.8:354
msgid ""
"The E<.Nm> utility in server mode will try to register the Bluetooth LAN "
"Access Over PPP service with the local SDP daemon.  If the local SDP daemon "
"is not running, E<.Nm> will exit with an error."
msgstr ""
