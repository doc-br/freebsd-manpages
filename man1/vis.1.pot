# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/contrib/vis/vis.1:32
#, no-wrap
msgid "February 19, 2013"
msgstr ""

#. type: Dt
#: /usr/src/contrib/vis/vis.1:33
#, no-wrap
msgid "VIS 1"
msgstr ""

#. type: Sh
#: /usr/src/contrib/vis/vis.1:35
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:37
msgid "E<.Nm vis>"
msgstr ""

#. type: Nd
#: /usr/src/contrib/vis/vis.1:37
#, no-wrap
msgid "display non-printable characters in a visual format"
msgstr ""

#. type: Sh
#: /usr/src/contrib/vis/vis.1:38
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:44
msgid ""
"E<.Nm> E<.Op Fl bcfhlmnostw> E<.Op Fl e Ar extra> E<.Op Fl F Ar foldwidth> "
"E<.Op Ar file ...>"
msgstr ""

#. type: Sh
#: /usr/src/contrib/vis/vis.1:44
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:57
msgid ""
"E<.Nm> is a filter for converting non-printable characters into a visual "
"representation.  It differs from E<.Ql cat -v> in that the form is unique "
"and invertible.  By default, all non-graphic characters except space, tab, "
"and newline are encoded.  A detailed description of the various visual "
"formats is given in E<.Xr vis 3>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:59
msgid "The options are as follows:"
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:60
#, no-wrap
msgid "Fl b"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:69
msgid ""
"Turns off prepending of backslash before up-arrow control sequences and meta "
"characters, and disables the doubling of backslashes.  This produces output "
"which is neither invertible or precise, but does represent a minimum of "
"change to the input.  It is similar to E<.Dq Li cat -v>.  E<.Pq Dv "
"VIS_NOSLASH>"
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:69
#, no-wrap
msgid "Fl c"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:73
msgid ""
"Request a format which displays a small subset of the non-printable "
"characters using C-style backslash sequences.  E<.Pq Dv VIS_CSTYLE>"
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:73
#, no-wrap
msgid "Fl e Ar extra"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:78
msgid "Also encode characters in E<.Ar extra>, per E<.Xr svis 3>."
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:78
#, no-wrap
msgid "Fl F Ar foldwidth"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:92
msgid ""
"Causes E<.Nm> to fold output lines to foldwidth columns (default 80), like "
"E<.Xr fold 1>, except that a hidden newline sequence is used, (which is "
"removed when inverting the file back to its original form with E<.Xr unvis "
"1>).  If the last character in the encoded file does not end in a newline, a "
"hidden newline sequence is appended to the output.  This makes the output "
"usable with various editors and other utilities which typically don't work "
"with partial lines."
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:92
#, no-wrap
msgid "Fl f"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:95
msgid "Same as E<.Fl F>."
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:95
#, no-wrap
msgid "Fl h"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:98
msgid "Encode using the URI encoding from RFC 1808.  E<.Pq Dv VIS_HTTPSTYLE>"
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:98
#, no-wrap
msgid "Fl l"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:102
msgid ""
"Mark newlines with the visible sequence E<.Ql \\e$>, followed by the "
"newline."
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:102
#, no-wrap
msgid "Fl m"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:105
msgid ""
"Encode using the MIME Quoted-Printable encoding from RFC 2045.  E<.Pq Dv "
"VIS_MIMESTYLE>"
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:105
#, no-wrap
msgid "Fl n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:122
msgid ""
"Turns off any encoding, except for the fact that backslashes are still "
"doubled and hidden newline sequences inserted if E<.Fl f> or E<.Fl F> is "
"selected.  When combined with the E<.Fl f> flag, E<.Nm> becomes like an "
"invertible version of the E<.Xr fold 1> utility.  That is, the output can be "
"unfolded by running the output through E<.Xr unvis 1>."
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:122
#, no-wrap
msgid "Fl o"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:126
msgid ""
"Request a format which displays non-printable characters as an octal number, "
"\\eddd.  E<.Pq Dv VIS_OCTAL>"
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:126
#, no-wrap
msgid "Fl s"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:131
msgid ""
"Only characters considered unsafe to send to a terminal are encoded.  This "
"flag allows backspace, bell, and carriage return in addition to the default "
"space, tab and newline.  E<.Pq Dv VIS_SAFE>"
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:131
#, no-wrap
msgid "Fl t"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:134
msgid "Tabs are also encoded.  E<.Pq Dv VIS_TAB>"
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:134
#, no-wrap
msgid "Fl w"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:137
msgid "White space (space-tab-newline) is also encoded.  E<.Pq Dv VIS_WHITE>"
msgstr ""

#. type: Sh
#: /usr/src/contrib/vis/vis.1:138
#, no-wrap
msgid "MULTIBYTE CHARACTER SUPPORT"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:145
msgid ""
"E<.Nm> supports multibyte character input.  The encoding conversion is "
"influenced by the setting of the E<.Ev LC_CTYPE> environment variable which "
"defines the set of characters that can be copied without encoding."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:152
msgid ""
"When 8-bit data is present in the input, E<.Ev LC_CTYPE> must be set to the "
"correct locale or to the C locale.  If the locales of the data and the "
"conversion are mismatched, multibyte character recognition may fail and "
"encoding will be performed byte-by-byte instead."
msgstr ""

#. type: Sh
#: /usr/src/contrib/vis/vis.1:152
#, no-wrap
msgid "ENVIRONMENT"
msgstr ""

#. type: It
#: /usr/src/contrib/vis/vis.1:154
#, no-wrap
msgid "Ev LC_CTYPE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:157
msgid ""
"Specify the locale of the input data.  Set to C if the input data locale is "
"unknown."
msgstr ""

#. type: Sh
#: /usr/src/contrib/vis/vis.1:158
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:162
msgid "E<.Xr unvis 1>, E<.Xr svis 3>, E<.Xr vis 3>"
msgstr ""

#. type: Sh
#: /usr/src/contrib/vis/vis.1:162
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/vis/vis.1:170
msgid ""
"The E<.Nm> command appears in E<.Bx 4.4>.  Myltibyte character support was "
"added in E<.Nx 7.0> and E<.Fx 9.2>."
msgstr ""
