# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/usr.bin/tset/tset.1:31
#, no-wrap
msgid "June 6, 2015"
msgstr ""

#. type: Dt
#: /usr/src/usr.bin/tset/tset.1:32
#, no-wrap
msgid "TSET 1"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tset/tset.1:34
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:37
msgid "E<.Nm tset>, E<.Nm reset>"
msgstr ""

#. type: Nd
#: /usr/src/usr.bin/tset/tset.1:37
#, no-wrap
msgid "terminal initialization"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tset/tset.1:38
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:55
msgid ""
"E<.Nm> E<.Op Fl IQrSs> E<.Op Fl> E<.Op Fl e Ar ch> E<.Op Fl i Ar ch> E<.Op "
"Fl k Ar ch> E<.Op Fl m Ar mapping> E<.Op Ar terminal> E<.Nm reset> E<.Op Fl "
"IQrSs> E<.Op Fl> E<.Op Fl e Ar ch> E<.Op Fl i Ar ch> E<.Op Fl k Ar ch> E<.Op "
"Fl m Ar mapping> E<.Op Ar terminal>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tset/tset.1:55
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:61
msgid ""
"The E<.Nm> utility initializes terminals.  It first determines the type of "
"terminal that you are using.  This determination is done as follows, using "
"the first terminal type found."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:67
msgid "The E<.Ar terminal> argument specified on the command line."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:71
msgid "The value of the E<.Ev TERM> environment variable."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:75
msgid ""
"The terminal type associated with the standard error output device in the "
"E<.Pa /etc/ttys> file."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:77
msgid "The default terminal type, ``unknown''."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:90
msgid ""
"If the terminal type was not specified on the command-line, the E<.Fl m> "
"option mappings are then applied (see below for more information).  Then, if "
"the terminal type begins with a question mark (``?''), the user is prompted "
"for confirmation of the terminal type.  An empty response confirms the type, "
"or, another type can be entered to specify a new type.  Once the terminal "
"type has been determined, the termcap entry for the terminal is retrieved.  "
"If no termcap entry is found for the type, the user is prompted for another "
"terminal type."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:97
msgid ""
"Once the termcap entry is retrieved, the window size, backspace, interrupt "
"and line kill characters (among many other things) are set and the terminal "
"and tab initialization strings are sent to the standard error output.  "
"Finally, if the erase, interrupt and line kill characters have changed, or "
"are not set to their default values, their values are displayed to the "
"standard error output."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:110
msgid ""
"When invoked as E<.Nm reset>, E<.Nm> sets cooked and echo modes, turns off "
"cbreak and raw modes, turns on newline translation and resets any unset "
"special characters to their default values before doing the terminal "
"initialization described above.  This is useful after a program dies leaving "
"a terminal in an abnormal state.  Note, you may have to type E<.Dq Li "
"E<lt>LFE<gt>resetE<lt>LFE<gt>> (the line-feed character is normally "
"control-J) to get the terminal to work, as carriage-return may no longer "
"work in the abnormal state.  Also, the terminal will often not echo the "
"command."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:112
msgid "The options are as follows:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tset/tset.1:113
#, no-wrap
msgid "Fl"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:116
msgid ""
"The terminal type is displayed to the standard output, and the terminal is "
"not initialized in any way."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tset/tset.1:116
#, no-wrap
msgid "Fl e"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:119
msgid "Set the erase character to E<.Ar ch>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tset/tset.1:119
#, no-wrap
msgid "Fl I"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:121
msgid "Do not send the terminal or tab initialization strings to the terminal."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tset/tset.1:121
#, no-wrap
msgid "Fl i"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:124
msgid "Set the interrupt character to E<.Ar ch>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tset/tset.1:124
#, no-wrap
msgid "Fl k"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:127
msgid "Set the line kill character to E<.Ar ch>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tset/tset.1:127
#, no-wrap
msgid "Fl m"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:130
msgid ""
"Specify a mapping from a port type to a terminal.  See below for more "
"information."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tset/tset.1:130
#, no-wrap
msgid "Fl Q"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:132
msgid "Do not display any values for the erase, interrupt and line kill characters."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tset/tset.1:132
#, no-wrap
msgid "Fl r"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:134
msgid "Print the terminal type to the standard error output."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tset/tset.1:134
#, no-wrap
msgid "Fl S"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:137
msgid ""
"Print the terminal type and the termcap entry to the standard output.  See "
"the section below on setting the environment for details."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tset/tset.1:137
#, no-wrap
msgid "Fl s"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:144
msgid ""
"Print the sequence of shell commands to initialize the environment variables "
"E<.Ev TERM> and E<.Ev TERMCAP> to the standard output.  See the section "
"below on setting the environment for details."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:157
msgid ""
"The arguments for the E<.Fl e>, E<.Fl i> and E<.Fl k> options may either be "
"entered as actual characters or by using the E<.Dq hat> notation, i.e., "
"control-h may be specified as E<.Dq Li ^H> or E<.Dq Li ^h>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tset/tset.1:157
#, no-wrap
msgid "SETTING THE ENVIRONMENT"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:165
msgid ""
"It is often desirable to enter the terminal type and information about the "
"terminal's capabilities into the shell's environment.  This is done using "
"the E<.Fl S> and E<.Fl s> options."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:176
msgid ""
"When the E<.Fl S> option is specified, the terminal type and the termcap "
"entry are written to the standard output, separated by a space and without a "
"terminating newline.  This can be assigned to an array by E<.Nm csh> and "
"E<.Nm ksh> users and then used like any other shell array."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:197
msgid ""
"When the E<.Fl s> option is specified, the commands to enter the information "
"into the shell's environment are written to the standard output.  If the "
"E<.Ev SHELL> environment variable ends in ``csh'', the commands are for the "
"E<.Nm csh>, otherwise, they are for E<.Xr sh 1>.  Note, the E<.Nm csh> "
"commands set and unset the shell variable E<.Dq noglob>, leaving it unset.  "
"The following line in the E<.Pa .login> or E<.Pa .profile> files will "
"initialize the environment correctly:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:199
#, no-wrap
msgid "eval \\`tset -s options ... \\`\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:206
msgid ""
"To demonstrate a simple use of the E<.Fl S> option, the following lines in "
"the E<.Pa .login> file have an equivalent effect:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:213
#, no-wrap
msgid ""
"set noglob\n"
"set term=(`tset -S options ...`)\n"
"setenv TERM $term[1]\n"
"setenv TERMCAP \"$term[2]\"\n"
"unset term\n"
"unset noglob\n"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tset/tset.1:214
#, no-wrap
msgid "TERMINAL TYPE MAPPING"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:246
msgid ""
"When the terminal is not hardwired into the system (or the current system "
"information is incorrect) the terminal type derived from the E<.Pa "
"/etc/ttys> file or the E<.Ev TERM> environment variable is often something "
"generic like E<.Dq network>, E<.Dq dialup>, or E<.Dq unknown>.  When E<.Nm> "
"is used in a startup script E<.Pf ( Pa .profile> for E<.Xr sh 1> users or "
"E<.Pa .login> for E<.Xr csh 1> users) it is often desirable to provide "
"information about the type of terminal used on such ports.  The purpose of "
"the E<.Fl m> option is to E<.Dq map> from some set of conditions to a "
"terminal type, that is, to tell E<.Nm> ``If I'm on this port at a particular "
"speed, guess that I'm on that kind of terminal''."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:272
msgid ""
"The argument to the E<.Fl m> option consists of an optional port type, an "
"optional operator, an optional baud rate specification, an optional colon "
"(``:'') character and a terminal type.  The port type is a string (delimited "
"by either the operator or the colon character).  The operator may be any "
"combination of: E<.Dq Li \\&E<gt>>, E<.Dq Li \\&E<lt>>, E<.Dq Li \\&@>, and "
"E<.Dq Li \\&!>; E<.Dq Li \\&E<gt>> means greater than, E<.Dq Li \\&E<lt>> "
"means less than, E<.Dq Li \\&@> means equal to and E<.Dq Li !\\&> inverts "
"the sense of the test.  The baud rate is specified as a number and is "
"compared with the speed of the standard error output (which should be the "
"control terminal).  The terminal type is a string."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:279
msgid ""
"If the terminal type is not specified on the command line, the E<.Fl m> "
"mappings are applied to the terminal type.  If the port type and baud rate "
"match the mapping, the terminal type specified in the mapping replaces the "
"current type.  If more than one mapping is specified, the first applicable "
"mapping is used."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:295
msgid ""
"For example, consider the following mapping: E<.Dq Li "
"dialupE<gt>9600:vt100>.  The port type is E<.Dq Li dialup>, the operator is "
"E<.Dq Li E<gt>>, the baud rate specification is E<.Dq Li 9600>, and the "
"terminal type is E<.Dq Li vt100>.  The result of this mapping is to specify "
"that if the terminal type is E<.Dq Li dialup>, and the baud rate is greater "
"than 9600 baud, a terminal type of E<.Dq Li vt100> will be used."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:308
msgid ""
"If no port type is specified, the terminal type will match any port type, "
"for example, E<.Dq Li -m dialup:vt100 -m :?xterm> will cause any dialup "
"port, regardless of baud rate, to match the terminal type E<.Dq Li vt100>, "
"and any non-dialup port type to match the terminal type E<.Dq Li ?xterm>.  "
"Note, because of the leading question mark, the user will be queried on a "
"default port as to whether they are actually using an E<.Ar xterm> terminal."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:318
msgid ""
"No whitespace characters are permitted in the E<.Fl m> option argument.  "
"Also, to avoid problems with metacharacters, it is suggested that the entire "
"E<.Fl m> option argument be placed within single quote characters, and that "
"E<.Nm csh> users insert a backslash character (``\\e'') before any "
"exclamation marks (``!'')."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tset/tset.1:318
#, no-wrap
msgid "ENVIRONMENT"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:326
msgid ""
"The E<.Nm> command utilizes the E<.Ev SHELL> and E<.Ev TERM> environment "
"variables."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tset/tset.1:326
#, no-wrap
msgid "FILES"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tset/tset.1:328
#, no-wrap
msgid "Pa /etc/ttys"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:330
msgid "system port name to terminal type mapping database"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tset/tset.1:330
#, no-wrap
msgid "Pa /usr/share/misc/termcap"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:332
msgid "terminal capability database"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tset/tset.1:333
#, no-wrap
msgid "COMPATIBILITY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:369
msgid ""
"The E<.Fl A>, E<.Fl E>, E<.Fl h>, E<.Fl u> and E<.Fl v> options have been "
"deleted from the E<.Nm> utility.  None of them were documented in E<.Bx 4.3> "
"and all are of limited utility at best.  The E<.Fl a>, E<.Fl d> and E<.Fl p> "
"options are similarly not documented or useful, but were retained as they "
"appear to be in widespread use.  It is strongly recommended that any usage "
"of these three options be changed to use the E<.Fl m> option instead.  The "
"E<.Fl n> option remains, but has no effect.  It is still permissible to "
"specify the E<.Fl e>, E<.Fl i> and E<.Fl k> options without arguments, "
"although it is strongly recommended that such usage be fixed to explicitly "
"specify the character."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:384
msgid ""
"Executing E<.Nm> as E<.Nm reset> no longer implies the E<.Fl Q> option.  "
"Also, the interaction between the E<.Fl> option and the E<.Ar terminal> "
"argument in some historic implementations of E<.Nm> has been removed."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:392
msgid ""
"Finally, the E<.Nm> implementation has been completely redone (as part of "
"the addition to the system of a E<.St -p1003.1-88> compliant terminal "
"interface) and will no longer compile on systems with older terminal "
"interfaces."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tset/tset.1:392
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:400
msgid ""
"E<.Xr csh 1>, E<.Xr sh 1>, E<.Xr stty 1>, E<.Xr tty 4>, E<.Xr termcap 5>, "
"E<.Xr ttys 5>, E<.Xr environ 7>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tset/tset.1:400
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:407
msgid "The E<.Nm> and E<.Nm reset> utilities first appeared in E<.Bx 1>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tset/tset.1:407
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tset/tset.1:421
msgid ""
"E<.An -nosplit> The original version of E<.Nm tset> was written by E<.An "
"Eric P. Allman> in October 1977, and E<.Nm reset> was originally written by "
"E<.An Kurt Shoens>.  The current version also contains code by E<.An Zeyd "
"M. Ben-Halim>, E<.An Eric S. Raymond>, and E<.An Thomas E. Dickey>."
msgstr ""
