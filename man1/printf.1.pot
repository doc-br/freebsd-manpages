# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/usr.bin/printf/printf.1:34
#, no-wrap
msgid "April 21, 2014"
msgstr ""

#. type: Dt
#: /usr/src/usr.bin/printf/printf.1:35
#, no-wrap
msgid "PRINTF 1"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/printf/printf.1:37
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:39
msgid "E<.Nm printf>"
msgstr ""

#. type: Nd
#: /usr/src/usr.bin/printf/printf.1:39
#, no-wrap
msgid "formatted output"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/printf/printf.1:40
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:43
msgid "E<.Nm> E<.Ar format Op Ar arguments ...>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/printf/printf.1:43
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:56
msgid ""
"The E<.Nm> utility formats and prints its arguments, after the first, under "
"control of the E<.Ar format>.  The E<.Ar format> is a character string which "
"contains three types of objects: plain characters, which are simply copied "
"to standard output, character escape sequences which are converted and "
"copied to the standard output, and format specifications, each of which "
"causes printing of the next successive E<.Ar argument>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:65
msgid ""
"The E<.Ar arguments> after the first are treated as strings if the "
"corresponding format is either E<.Cm c , b> or E<.Cm s>; otherwise it is "
"evaluated as a C constant, with the following extensions:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:69
msgid "A leading plus or minus sign is allowed."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:72
msgid ""
"If the leading character is a single or double quote, the value is the "
"character code of the next character."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:78
msgid ""
"The format string is reused as often as necessary to satisfy the E<.Ar "
"arguments>.  Any extra format specifications are evaluated with zero or the "
"null string."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:84
msgid ""
"Character escape sequences are in backslash notation as defined in the E<.St "
"-ansiC>, with extensions.  The characters and their meanings are as follows:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:86
#, no-wrap
msgid "Cm \\ea"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:88
msgid "Write a E<lt>bellE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:88
#, no-wrap
msgid "Cm \\eb"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:90
msgid "Write a E<lt>backspaceE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:90
#, no-wrap
msgid "Cm \\ec"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:92
msgid "Ignore remaining characters in this string."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:92
#, no-wrap
msgid "Cm \\ef"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:94
msgid "Write a E<lt>form-feedE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:94
#, no-wrap
msgid "Cm \\en"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:96
msgid "Write a E<lt>new-lineE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:96
#, no-wrap
msgid "Cm \\er"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:98
msgid "Write a E<lt>carriage returnE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:98
#, no-wrap
msgid "Cm \\et"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:100
msgid "Write a E<lt>tabE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:100
#, no-wrap
msgid "Cm \\ev"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:102
msgid "Write a E<lt>vertical tabE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:102
#, no-wrap
msgid "Cm \\e\\'"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:104
msgid "Write a E<lt>single quoteE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:104
#, no-wrap
msgid "Cm \\e\\e"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:106
msgid "Write a backslash character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:106
#, no-wrap
msgid "Cm \\e Ns Ar num"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:114
msgid ""
"Write a byte whose value is the 1-, 2-, or 3-digit octal number E<.Ar num>.  "
"Multibyte characters can be constructed using multiple E<.Cm \\e Ns Ar num> "
"sequences."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:120
msgid ""
"Each format specification is introduced by the percent character (``%'').  "
"The remainder of the format specification includes, in the following order:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:121
#, no-wrap
msgid "Zero or more of the following flags:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:123
#, no-wrap
msgid "Cm #"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:155
msgid ""
"A `#' character specifying that the value should be printed in an "
"``alternate form''.  For E<.Cm b , c , d , s> and E<.Cm u> formats, this "
"option has no effect.  For the E<.Cm o> formats the precision of the number "
"is increased to force the first character of the output string to a zero.  "
"For the E<.Cm x> E<.Pq Cm X> format, a non-zero result has the string E<.Li "
"0x> E<.Pq Li 0X> prepended to it.  For E<.Cm a , A , e , E , f , F , g> and "
"E<.Cm G> formats, the result will always contain a decimal point, even if no "
"digits follow the point (normally, a decimal point only appears in the "
"results of those formats if a digit follows the decimal point).  For E<.Cm "
"g> and E<.Cm G> formats, trailing zeros are not removed from the result as "
"they would otherwise be;"
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:155
#, no-wrap
msgid "Cm \\&\\-"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:159
msgid ""
"A minus sign `\\-' which specifies E<.Em left adjustment> of the output in "
"the indicated field;"
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:159
#, no-wrap
msgid "Cm \\&+"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:162
msgid ""
"A `+' character specifying that there should always be a sign placed before "
"the number when using signed formats."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:162
#, no-wrap
msgid "Sq \\&\\ \\&"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:166
msgid ""
"A space specifying that a blank should be left before a positive number for "
"a signed format.  A `+' overrides a space if both are used;"
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:166
#, no-wrap
msgid "Cm \\&0"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:170
msgid ""
"A zero `0' character indicating that zero-padding should be used rather than "
"blank-padding.  A `\\-' overrides a `0' if both are used;"
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:171
#, no-wrap
msgid "Field Width:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:178
msgid ""
"An optional digit string specifying a E<.Em field width>; if the output "
"string has fewer bytes than the field width it will be blank-padded on the "
"left (or right, if the left-adjustment indicator has been given) to make up "
"the field width (note that a leading zero is a flag, but an embedded zero is "
"part of a field width);"
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:178
#, no-wrap
msgid "Precision:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:191
msgid ""
"An optional period, E<.Sq Cm \\&.\\&>, followed by an optional digit string "
"giving a E<.Em precision> which specifies the number of digits to appear "
"after the decimal point, for E<.Cm e> and E<.Cm f> formats, or the maximum "
"number of bytes to be printed from a string; if the digit string is missing, "
"the precision is treated as zero;"
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:191
#, no-wrap
msgid "Format:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:201
msgid ""
"A character which indicates the type of format to use (one of E<.Cm "
"diouxXfFeEgGaAcsb>).  The uppercase formats differ from their lowercase "
"counterparts only in that the output of the former is entirely in "
"uppercase.  The floating-point format specifiers E<.Pq Cm fFeEgGaA> may be "
"prefixed by an E<.Cm L> to request that additional precision be used, if "
"available."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:209
msgid ""
"A field width or precision may be E<.Sq Cm \\&*> instead of a digit string.  "
"In this case an E<.Ar argument> supplies the field width or precision."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:211
msgid "The format characters and their meanings are:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:212
#, no-wrap
msgid "Cm diouXx"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:217
msgid ""
"The E<.Ar argument> is printed as a signed decimal (d or i), unsigned octal, "
"unsigned decimal, or unsigned hexadecimal (X or x), respectively."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:217
#, no-wrap
msgid "Cm fF"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:230
msgid ""
"The E<.Ar argument> is printed in the style `[\\-]ddd.ddd' where the number "
"of d's after the decimal point is equal to the precision specification for "
"the argument.  If the precision is missing, 6 digits are given; if the "
"precision is explicitly 0, no digits and no decimal point are printed.  The "
"values \\*[If] and \\*[Na] are printed as E<.Ql inf> and E<.Ql nan>, "
"respectively."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:230
#, no-wrap
msgid "Cm eE"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:247
msgid ""
"The E<.Ar argument> is printed in the style E<.Cm e> E<.Sm off> E<.Sq Op - "
"Ar d.ddd No \\(+- Ar dd> E<.Sm on> where there is one digit before the "
"decimal point and the number after is equal to the precision specification "
"for the argument; when the precision is missing, 6 digits are produced.  The "
"values \\*[If] and \\*[Na] are printed as E<.Ql inf> and E<.Ql nan>, "
"respectively."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:247
#, no-wrap
msgid "Cm gG"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:257
msgid ""
"The E<.Ar argument> is printed in style E<.Cm f> E<.Pq Cm F> or in style "
"E<.Cm e> E<.Pq Cm E> whichever gives full precision in minimum space."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:257
#, no-wrap
msgid "Cm aA"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:273
msgid ""
"The E<.Ar argument> is printed in style E<.Sm off> E<.Sq Op - Ar h.hhh No "
"\\(+- Li p Ar d> E<.Sm on> where there is one digit before the hexadecimal "
"point and the number after is equal to the precision specification for the "
"argument; when the precision is missing, enough digits are produced to "
"convey the argument's exact double-precision floating-point representation.  "
"The values \\*[If] and \\*[Na] are printed as E<.Ql inf> and E<.Ql nan>, "
"respectively."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:273
#, no-wrap
msgid "Cm c"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:277
msgid "The first byte of E<.Ar argument> is printed."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:277
#, no-wrap
msgid "Cm s"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:283
msgid ""
"Bytes from the string E<.Ar argument> are printed until the end is reached "
"or until the number of bytes indicated by the precision specification is "
"reached; however if the precision is 0 or missing, the string is printed "
"entirely."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:283
#, no-wrap
msgid "Cm b"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:293
msgid ""
"As for E<.Cm s>, but interpret character escapes in backslash notation in "
"the string E<.Ar argument>.  The permitted escape sequences are slightly "
"different in that octal escapes are E<.Cm \\e0 Ns Ar num> instead of E<.Cm "
"\\e Ns Ar num>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:293
#, no-wrap
msgid "Cm n$"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:296
msgid "Allows reordering of the output according to E<.Ar argument>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/printf/printf.1:296
#, no-wrap
msgid "Cm \\&%"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:298
msgid "Print a `%'; no argument is used."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:303
msgid ""
"The decimal point character is defined in the program's locale (category "
"E<.Dv LC_NUMERIC>)."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:307
msgid ""
"In no case does a non-existent or small field width cause truncation of a "
"field; padding takes place only if the specified field width exceeds the "
"actual width."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:314
msgid ""
"Some shells may provide a builtin E<.Nm> command which is similar or "
"identical to this utility.  Consult the E<.Xr builtin 1> manual page."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/printf/printf.1:314
#, no-wrap
msgid "EXIT STATUS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:316
msgid "E<.Ex -std>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/printf/printf.1:316
#, no-wrap
msgid "COMPATIBILITY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:323
msgid ""
"The traditional E<.Bx> behavior of converting arguments of numeric formats "
"not beginning with a digit to the E<.Tn ASCII> code of the first character "
"is not supported."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/printf/printf.1:323
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:328
msgid "E<.Xr builtin 1>, E<.Xr echo 1>, E<.Xr sh 1>, E<.Xr printf 3>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/printf/printf.1:328
#, no-wrap
msgid "STANDARDS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:334
msgid ""
"The E<.Nm> command is expected to be compatible with the E<.St -p1003.2> "
"specification."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/printf/printf.1:334
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:342
msgid ""
"The E<.Nm> command appeared in E<.Bx 4.3 Reno>.  It is modeled after the "
"standard library function, E<.Xr printf 3>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/printf/printf.1:342
#, no-wrap
msgid "CAVEATS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:345
msgid "E<.Tn ANSI> hexadecimal character constants were deliberately not provided."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:352
msgid ""
"Trying to print a dash (\"-\") as the first character causes E<.Nm> to "
"interpret the dash as a program argument.  E<.Nm --> must be used before "
"E<.Ar format>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:363
msgid ""
"If the locale contains multibyte characters (such as UTF-8), the E<.Cm c> "
"format and E<.Cm b> and E<.Cm s> formats with a precision may not operate as "
"expected."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/printf/printf.1:363
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:373
msgid ""
"Since the floating point numbers are translated from E<.Tn ASCII> to "
"floating-point and then back again, floating-point precision may be lost.  "
"(By default, the number is translated to an IEEE-754 double-precision value "
"before being printed.  The E<.Cm L> modifier may produce additional "
"precision, depending on the hardware platform.)"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:378
msgid ""
"The escape sequence \\e000 is the string terminator.  When present in the "
"argument for the E<.Cm b> format, the argument will be truncated at the "
"\\e000 character."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/printf/printf.1:382
msgid ""
"Multibyte characters are not recognized in format strings (this is only a "
"problem if E<.Ql %> can appear inside a multibyte character)."
msgstr ""
