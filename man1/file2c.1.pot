# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/usr.bin/file2c/file2c.1:10
#, no-wrap
msgid "March 22, 2007"
msgstr ""

#. type: Dt
#: /usr/src/usr.bin/file2c/file2c.1:11
#, no-wrap
msgid "FILE2C 1"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/file2c/file2c.1:13
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/file2c/file2c.1:15
msgid "E<.Nm file2c>"
msgstr ""

#. type: Nd
#: /usr/src/usr.bin/file2c/file2c.1:15
#, no-wrap
msgid "convert file to c-source"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/file2c/file2c.1:16
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/file2c/file2c.1:21
msgid "E<.Nm> E<.Op Fl sx> E<.Op Fl n Ar count> E<.Op Ar prefix Op Ar suffix>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/file2c/file2c.1:21
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/file2c/file2c.1:35
msgid ""
"The E<.Nm> utility reads a file from stdin and writes it to stdout, "
"converting each byte to its decimal or hexadecimal representation on the "
"fly.  The byte values are separated by a comma.  This also means that the "
"last byte value is not followed by a comma.  By default the byte values are "
"printed in decimal, but when the E<.Fl x> option is given, the values will "
"be printed in hexadecimal.  When E<.Fl s> option is given, each line is "
"printed with a leading tab and each comma is followed by a space except for "
"the last one on the line."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/file2c/file2c.1:46
msgid ""
"If more than 70 characters are printed on the same line, that line is ended "
"and the output continues on the next line.  With the E<.Fl n> option this "
"can be made to happen after the specified number of byte values have been "
"printed.  The length of the line will not be considered anymore.  To have "
"all the byte values printed on the same line, give the E<.Fl n> option a "
"negative number."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/file2c/file2c.1:52
msgid ""
"A prefix and suffix strings can be printed before and after the byte values "
"(resp.)  If a suffix is to be printed, a prefix must also be specified.  The "
"first non-option word is the prefix, which may optionally be followed by a "
"word that is to be used as the suffix."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/file2c/file2c.1:63
msgid ""
"This program is typically used to embed binary files into C source files.  "
"The prefix is used to define an array type and the suffix is used to end the "
"C statement.  The E<.Fl n , s> and E<.Fl x> options are useful when the "
"binary data represents a bitmap and the output needs to remain readable "
"and/or editable.  Fonts, for example, are a good example of this."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/file2c/file2c.1:63
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/file2c/file2c.1:65
msgid "The command:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/file2c/file2c.1:67
#, no-wrap
msgid "date | file2c 'const char date[] = {' ',0};'\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/file2c/file2c.1:70
msgid "will produce:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/file2c/file2c.1:75
#, no-wrap
msgid ""
"const char date[] = {\n"
"83,97,116,32,74,97,110,32,50,56,32,49,54,58,50,56,58,48,53,\n"
"32,80,83,84,32,49,57,57,53,10\n"
",0};\n"
msgstr ""
