# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/usr.bin/dtc/dtc.1:33
#, no-wrap
msgid "March 27, 2019"
msgstr ""

#. type: Dt
#: /usr/src/usr.bin/dtc/dtc.1:34
#, no-wrap
msgid "DTC 1"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:36
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:38
msgid "E<.Nm dtc>"
msgstr ""

#. type: Nd
#: /usr/src/usr.bin/dtc/dtc.1:38
#, no-wrap
msgid "device tree compiler"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:39
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:56
msgid ""
"E<.Nm> E<.Op Fl @fhsv> E<.Op Fl b Ar boot_cpu_id> E<.Op Fl d Ar "
"dependency_file> E<.Op Fl E Ar [no-]checker_name> E<.Op Fl H Ar "
"phandle_format> E<.Op Fl I Ar input_format> E<.Op Fl O Ar output_format> "
"E<.Op Fl o Ar output_file> E<.Op Fl R Ar entries> E<.Op Fl S Ar bytes> E<.Op "
"Fl p Ar bytes> E<.Op Fl V Ar blob_version> E<.Op Fl W Ar [no-]checker_name> "
"E<.Op Fl P Ar predefined_properties> E<.Ar input_file>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:56
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:63
msgid ""
"The E<.Nm> utility converts between flattened device tree (FDT) "
"representations.  It is most commonly used to generate device tree blobs "
"(DTB), the binary representation of an FDT, from device tree sources (DTS), "
"the ASCII text source representation."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:73
msgid ""
"The binary can be written in two formats, binary and assembly.  The binary "
"is identical to the in-memory representation and can be used directly by "
"firmware, loaders, and so on.  The assembly format, documented in E<.Sx "
"\"ASM FORMAT\">, will produce the same binary format when assembled, but "
"also includes some global variables that refer to parts of the table.  This "
"format is most commonly used to produce a kernel specific to a device, with "
"the device tree blob compiled in."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:75
msgid "The options are as follows:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:76
#, no-wrap
msgid "Fl d Ar dependency_file"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:82
msgid ""
"Writes a dependency file understandable by make to the specified file.  This "
"file can be included in a Makefile and will ensure that the output file "
"depends on the input file and any files that it includes.  This argument is "
"only useful when the input is DTS, as only the source format has a notion of "
"inclusions."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:82
#, no-wrap
msgid "Fl E Ar [no-]checker_name"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:87
msgid ""
"Enable or disable a specified checker.  The argument is the name of the "
"checker.  The full list of checkers is given in E<.Sx CHECKERS>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:87
#, no-wrap
msgid "Fl @"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:89
msgid "Emit a __symbols__ node to allow plugins to be loaded."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:89
#, no-wrap
msgid "Fl f"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:91
msgid ""
"Force the tool to attempt to generate the output, even if the input had "
"errors."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:91
#, no-wrap
msgid "Fl h"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:93
msgid "Display the help text and exit."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:93
#, no-wrap
msgid "Fl H Ar phandle_format"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:96
msgid ""
"Specifies the type of phandle nodes to generate in the output.  Valid values "
"are:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:98
#, no-wrap
msgid "Ar linux"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:100
msgid "Generate the legacy linux,phandle nodes expected by older systems."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:100
#, no-wrap
msgid "Ar epapr"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:104
msgid ""
"Generate the phandle nodes, as described in the ePAPR specification.  This "
"is the most sensible option for device trees being used with E<.Fx>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:104
#, no-wrap
msgid "Ar both"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:106
msgid "Generate both, for maximum compatibility."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:107
#, no-wrap
msgid "Fl I Ar input_format"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:110
msgid "Specifies the input format.  Valid values are:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:112 /usr/src/usr.bin/dtc/dtc.1:128
#, no-wrap
msgid "Ar dtb"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:115
msgid "Device tree blob.  The binary representation of the FDT."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:115 /usr/src/usr.bin/dtc/dtc.1:132
#, no-wrap
msgid "Ar dts"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:119
msgid ""
"Device tree source.  The ASCII representation of the FDT.  This is the "
"default if the input format is not explicitly stated."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:120
#, no-wrap
msgid "Fl O Ar output_format"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:123
msgid "Specifies the output format.  Valid values are:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:125
#, no-wrap
msgid "Ar asm"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:128
msgid ""
"Assembler source for generating a device tree blob, as described in E<.Sx "
"\"ASM FORMAT\">."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:132
msgid ""
"Device tree blob.  The binary representation of the FDT.  This is the "
"default if the output format is not explicitly stated."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:135
msgid "Device tree source.  The ASCII representation of the FDT."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:136
#, no-wrap
msgid "Fl o Ar output_file"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:138
msgid "The file to which to write the output."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:138
#, no-wrap
msgid "Fl P Ar predefined_macro"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:154
msgid ""
"Defines a macro, in the form E<.Ar name=value> or E<.Ar name> to be used for "
"device tree source files that contain conditional components.  This tool "
"supports two extensions to the standard to support conditional compilation "
"of device trees.  The first is an E<.Ar /include/if [property]/ "
"\"file.dts\"> directive that is allowed at the start of a file and which "
"will only include the specified file if it the specified property is passed "
"with this flag.  The second is the E<.Ar $NAME> format for property values.  "
"These allow property value to be specified on the command line."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:154
#, no-wrap
msgid "Fl R Ar entries"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:159
msgid ""
"The number of empty reservation table entries to pad the table with.  This "
"is useful if you are generating a device tree blob for bootloader or similar "
"that needs to reserve some memory before passing control to the operating "
"system."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:159
#, no-wrap
msgid "Fl S Ar bytes"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:165
msgid ""
"The minimum size in bytes of the blob.  The blob will be padded after the "
"strings table to ensure that it is the correct size.  This is useful for "
"environments where the device tree blob must be modified in place."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:165
#, no-wrap
msgid "Fl p Ar bytes"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:171
msgid ""
"The number of bytes of padding to add to the blob.  The blob will be padded "
"after the strings table to ensure that it is the correct size.  This is "
"useful for environments where the device tree blob must be modified in "
"place."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:171
#, no-wrap
msgid "Fl W Ar [no-]checker_name"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:175
msgid "Enable or disable a specified checker.  This is an alias for E<.Fl E>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:175
#, no-wrap
msgid "Fl s"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:180
msgid ""
"Sorts the properties and nodes in the tree.  This is mainly useful when "
"using tools like E<.Xr diff 1> to compare two device tree sources."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:180
#, no-wrap
msgid "Fl V Ar output_version"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:184
msgid ""
"The version of the format to output.  This is only relevant for binary "
"outputs, and only a value of 17 is currently supported."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:184
#, no-wrap
msgid "Fl v"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:186
msgid "Display the tool version and exit."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:186
#, no-wrap
msgid "Ar input_file"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:188
msgid "The source file."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:189
#, no-wrap
msgid "ASM FORMAT"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:193
msgid ""
"The assembly format defines several globals that can be referred to from "
"other compilation units, in addition to any labels specified in the source.  "
"These are:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:195
#, no-wrap
msgid "dt_blob_start"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:197
msgid "start of the device tree blob."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:197
#, no-wrap
msgid "dt_header"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:199
msgid "start of the header, usually identical to the start of the blob."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:199
#, no-wrap
msgid "dt_reserve_map"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:201
msgid "start of the reservation map."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:201
#, no-wrap
msgid "dt_struct_start"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:203
msgid "start of the structure table."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:203
#, no-wrap
msgid "dt_struct_end"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:205
msgid "end of the structure table."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:205
#, no-wrap
msgid "dt_strings_start"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:207
msgid "start of the strings table."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:207
#, no-wrap
msgid "dt_strings_end"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:209
msgid "end of the strings table."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:209
#, no-wrap
msgid "dt_blob_end"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:211
msgid "end of the device tree blob."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:212
#, no-wrap
msgid "CHECKERS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:222
msgid ""
"The utility provides a number of semantic checks on the correctness of the "
"tree.  These can be disabled with the E<.Fl W> flag.  For example, E<.Fl W "
"Ar no-type-phandle> will disable the phandle type check.  The supported "
"checks are:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:224 /usr/src/usr.bin/dtc/dtc.1:232
#, no-wrap
msgid "type-compatible"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:228 /usr/src/usr.bin/dtc/dtc.1:236
msgid "Checks the type of the E<.Va compatible> property."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:228
#, no-wrap
msgid "type-model"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:232
msgid "Checks the type of the E<.Va model> property."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:236
#, no-wrap
msgid "cells-attributes"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:242
msgid ""
"Checks that all nodes with children have both E<.Va #address-cells> and "
"E<.Va #size-cells> properties."
msgstr ""

#. type: It
#: /usr/src/usr.bin/dtc/dtc.1:242
#, no-wrap
msgid "deleted-nodes"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:246
msgid ""
"Checks that all E<.Va /delete-node/> statements refer to nodes that are "
"merged."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:247
#, no-wrap
msgid "OVERLAYS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:256
msgid ""
"The utility provides support for generating overlays, also known as "
"plugins.  Overlays are a method of patching a base device tree that has been "
"compiled with the E<.Fl @> flag, with some limited support for patching "
"device trees that were not compiled with the E<.Fl @> flag."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:262
msgid ""
"To denote that a DTS is intended to be used as an overlay, E<.Va /plugin/;> "
"should be included in the header, following any applicable E<.Va /dts-v1/;> "
"tag."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:275
msgid ""
"Conventional overlays are crafted by creating E<.Va fragment> nodes in a "
"root.  Each fragment node must have either a E<.Va target> property set to a "
"label reference, or a E<.Va target-path> string property set to a path.  It "
"must then have an E<.Va __overlay__> child node, whose properties and child "
"nodes are merged into the base device tree when the overlay is applied."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:286
msgid ""
"Much simpler syntactic sugar was later invented to simplify generating "
"overlays.  Instead of creating targetted fragments manually, one can instead "
"create a root node that targets a label in the base FDT using the E<.Va "
"&label> syntax supported in conventional DTS.  This will indicate that a "
"fragment should be generated for the node, with the given E<.Va label> being "
"the target, and the properties and child nodes will be used as the "
"__overlay__."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:299
msgid ""
"Additionally, a path-based version of this syntactic sugar is supported.  A "
"root node may target a path in the base FDT using a name of the form E<.Va "
"&{/path}>.  A fragment will be generated for the node as it is in the E<.Va "
"&label> case, except the E<.Va target-path> property will be set to E<.Va "
"/path> and no E<.Va target> will be set."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:301
msgid ""
"Both conventional overlays and the later-added syntactic sugar are "
"supported."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:307
msgid ""
"Overlay blobs can be applied at boot time by setting E<.Va fdt_overlays> in "
"E<.Xr loader.conf 5>.  Multiple overlays may be specified, and they will be "
"applied in the order given."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:307
#, no-wrap
msgid "NODE OMISSION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:314
msgid ""
"This utility supports the E<.Va /omit-if-no-ref/> statement to mark nodes "
"for omission if they are ultimately not referenced elsewhere in the device "
"tree.  This may be used in more space-constrained environments to remove "
"nodes that may not be applicable to the specific device the tree is being "
"compiled for."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:319
msgid ""
"When the E<.Fl @> flag is used to write symbols, nodes with labels will be "
"considered referenced and will not be removed from the tree."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:319
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:321 /usr/src/usr.bin/dtc/dtc.1:332 /usr/src/usr.bin/dtc/dtc.1:341 /usr/src/usr.bin/dtc/dtc.1:351
msgid "The command:"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/dtc/dtc.1:322
#, no-wrap
msgid "dtc -o blob.S -O asm device.dts"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:330
msgid ""
"will generate a E<.Pa blob.S> file from the device tree source E<.Pa "
"device.dts> and print errors if any occur during parsing or property "
"checking.  The resulting file can be assembled and linked into a binary."
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/dtc/dtc.1:333
#, no-wrap
msgid "dtc -o - -O dts -I dtb device.dtb"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:339
msgid ""
"will write the device tree source for the device tree blob E<.Pa device.dtb> "
"to the standard output.  This is useful when debugging device trees."
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/dtc/dtc.1:342
#, no-wrap
msgid "dtc -@ -O dtb -I dts -o device.dtb device.dts"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:349
msgid ""
"will generate a E<.Pa device.dtb> file from the device tree source E<.Pa "
"device.dts> with a __symbols__ node included so that overlays may be applied "
"to it."
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/dtc/dtc.1:352
#, no-wrap
msgid "dtc -@ -O dtb -I dts -o device_overlay.dtbo device_overlay.dts"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:366
msgid ""
"will generate a E<.Pa device_overlay.dtbo> file, using the standard "
"extension for a device tree overlay, from the device tree source E<.Pa "
"device_overlay.dts>.  A __symbols__ node will be included so that overlays "
"may be applied to it.  The presence of a E<.Va /plugin/;> directive in E<.Pa "
"device_overlay.dts> will indicate to the utility that it should also "
"generate the underlying metadata required in overlays."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:366
#, no-wrap
msgid "COMPATIBILITY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:372
msgid ""
"This utility is intended to be compatible with the device tree compiler "
"provided by elinux.org.  Currently, it implements the subset of features "
"required to build FreeBSD and others that have been requested by FreeBSD "
"developers."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:380
msgid ""
"The E<.Ar fs> input format is not supported.  This builds a tree from a "
"Linux E<.Pa /proc/device-tree>, a file system hierarchy not found in "
"FreeBSD, which instead exposes the DTB directly via a sysctl."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:385
msgid ""
"The warnings and errors supported by the elinux.org tool are not "
"documented.  This tool supports the warnings described in the E<.Sx "
"CHECKERS> section."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:385
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:387
msgid "E<.Xr fdt 4>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:387
#, no-wrap
msgid "STANDARDS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:395
msgid ""
"The device tree formats understood by this tool conform to the Power.org "
"Standard for Embedded Power Architecture Platform Requirements E<.Pq Vt "
"ePAPR>, except as noted in the E<.Sx BUGS> section and with the following "
"exceptions for compatibility with the elinux.org tool:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:400
msgid ""
"The target of cross references is defined to be a node name in the "
"specification, but is in fact a label."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:411
msgid ""
"The /include/ directive is not part of the standard, however it is "
"implemented with the semantics compatible with the elinux.org tool.  It must "
"appear in the top level of a file, and imports a new root definition.  If a "
"file, plus all of its inclusions, contains multiple roots then they are "
"merged.  All nodes that are present in the second but not the first are "
"imported.  Any that appear in both are recursively merged, with properties "
"from the second replacing those from the first and properties child nodes "
"being recursively merged."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:411
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:416
msgid ""
"A dtc tool first appeared in E<.Fx 9.0>.  This version of the tool first "
"appeared in E<.Fx 10.0>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:416
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:422
msgid ""
"E<.Nm> was written by E<.An David T. Chisnall>.  Some features were added "
"later by E<.An Kyle Evans>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:425
msgid ""
"Note: The fact that the tool and the author share the same initials is "
"entirely coincidental."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/dtc/dtc.1:425
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:427
msgid "The device tree compiler does not yet support the following features:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:433
msgid ""
"Labels in the middle of property values.  This is only useful in the "
"assembly output, and only vaguely useful there, so is unlikely to be added "
"soon."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:437
msgid ""
"Full paths, rather than labels, as the targets for phandles.  This is not "
"very hard to add, but will probably not be added until something actually "
"needs it."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/dtc/dtc.1:440
msgid ""
"The current version performs a very limited set of semantic checks on the "
"tree.  This will be improved in future versions."
msgstr ""
