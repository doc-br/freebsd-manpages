# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/usr.bin/indent/indent.1:33
#, no-wrap
msgid "June 11, 2018"
msgstr ""

#. type: Dt
#: /usr/src/usr.bin/indent/indent.1:34
#, no-wrap
msgid "INDENT 1"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/indent/indent.1:36
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:38
msgid "E<.Nm indent>"
msgstr ""

#. type: Nd
#: /usr/src/usr.bin/indent/indent.1:38
#, no-wrap
msgid "indent and format C program source"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/indent/indent.1:39
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:94
msgid ""
"E<.Nm> E<.Op Ar input-file Op Ar output-file> E<.Op Fl bacc | Fl nbacc> "
"E<.Op Fl bad | Fl nbad> E<.Op Fl badp | Fl nbadp> E<.Op Fl bap | Fl nbap> "
"E<.Op Fl bbb | Fl nbbb> E<.Op Fl \\&bc | Fl nbc> E<.Op Fl \\&bl | Fl \\&br> "
"E<.Op Fl bs | Fl nbs> E<.Op Fl c Ns Ar n> E<.Op Fl \\&cd Ns Ar n> E<.Bk "
"-words> E<.Op Fl cdb | Fl ncdb> E<.Ek> E<.Op Fl \\&ce | Fl nce> E<.Op Fl "
"\\&ci Ns Ar n> E<.Op Fl cli Ns Ar n> E<.Op Fl cs | Fl ncs> E<.Op Fl d Ns Ar "
"n> E<.Op Fl \\&di Ns Ar n> E<.Op Fl dj | Fl ndj> E<.Bk -words> E<.Op Fl ei | "
"Fl nei> E<.Op Fl eei | Fl neei> E<.Ek> E<.Bk -words> E<.Op Fl fbs | Fl nfbs> "
"E<.Op Fl fc1 | Fl nfc1> E<.Op Fl fcb | Fl nfcb> E<.Ek> E<.Op Fl i Ns Ar n> "
"E<.Op Fl \\&ip | Fl nip> E<.Op Fl l Ns Ar n> E<.Op Fl \\&lc Ns Ar n> E<.Op "
"Fl \\&ldi Ns Ar n> E<.Op Fl \\&lp | Fl nlp> E<.Op Fl \\&lpl | Fl nlpl> E<.Op "
"Fl npro> E<.Op Fl P Ns Ar file> E<.Op Fl pcs | Fl npcs> E<.Op Fl psl | Fl "
"npsl> E<.Op Fl \\&sc | Fl nsc> E<.Bk -words> E<.Op Fl sob | Fl nsob> E<.Ek> "
"E<.Op Fl \\&st> E<.Op Fl \\&ta> E<.Op Fl T Ns Ar typename> E<.Op Fl ts Ns Ar "
"n> E<.Op Fl U Ns Ar file> E<.Op Fl ut | Fl nut> E<.Op Fl v | Fl \\&nv> E<.Op "
"Fl -version>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/indent/indent.1:94
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:109
msgid ""
"The E<.Nm> utility is a E<.Em C> program formatter.  It reformats the E<.Em "
"C> program in the E<.Ar input-file> according to the switches.  The switches "
"which can be specified are described below.  They may appear before or after "
"the file names."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:128
msgid ""
"E<.Sy NOTE>: If you only specify an E<.Ar input-file>, the formatting is "
"done `in-place', that is, the formatted file is written back into E<.Ar "
"input-file> and a backup copy of E<.Ar input-file> is written in the current "
"directory.  If E<.Ar input-file> is named E<.Sq Pa /blah/blah/file>, the "
"backup file is named E<.Sq Pa file.BAK> by default. The extension used for "
"the backup file may be overridden using the E<.Ev SIMPLE_BACKUP_SUFFIX> "
"environment variable."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:135
msgid ""
"If E<.Ar output-file> is specified, E<.Nm> checks to make sure that it is "
"different from E<.Ar input-file>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:138
msgid "The options listed below control the formatting style imposed by E<.Nm>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:139
#, no-wrap
msgid "Fl bacc , nbacc"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:148
msgid ""
"If E<.Fl bacc> is specified, a blank line is forced around every conditional "
"compilation block.  For example, in front of every #ifdef and after every "
"#endif.  Other blank lines surrounding such blocks will be swallowed.  "
"Default: E<.Fl nbacc>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:148
#, no-wrap
msgid "Fl bad , nbad"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:155
msgid ""
"If E<.Fl bad> is specified, a blank line is forced after every block of "
"declarations.  Default: E<.Fl nbad>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:155
#, no-wrap
msgid "Fl badp , nbadp"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:163
msgid ""
"This is vaguely similar to E<.Fl bad> except that it only applies to the "
"first set of declarations in a procedure (just after the first `{') and it "
"causes a blank line to be generated even if there are no declarations.  The "
"default is E<.Fl nbadp.>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:163
#, no-wrap
msgid "Fl bap , nbap"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:169
msgid ""
"If E<.Fl bap> is specified, a blank line is forced after every procedure "
"body.  Default: E<.Fl nbap>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:169
#, no-wrap
msgid "Fl bbb , nbbb"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:175
msgid ""
"If E<.Fl bbb> is specified, a blank line is forced before every block "
"comment.  Default: E<.Fl nbbb>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:175
#, no-wrap
msgid "Fl \\&bc , nbc"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:183
msgid ""
"If E<.Fl \\&bc> is specified, then a newline is forced after each comma in a "
"declaration.  E<.Fl nbc> turns off this option.  Default: E<.Fl \\&nbc>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:183
#, no-wrap
msgid "Fl \\&bl , \\&br"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:187
msgid "Specifying E<.Fl \\&bl> lines up compound statements like this:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:192
#, no-wrap
msgid ""
"if (...)\n"
"{\n"
"  code\n"
"}\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:197
msgid "Specifying E<.Fl \\&br> (the default) makes them look like this:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:201
#, no-wrap
msgid ""
"if (...) {\n"
"  code\n"
"}\n"
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:202
#, no-wrap
msgid "Fl bs , nbs"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:206
msgid ""
"Whether a blank should always be inserted after sizeof.  The default is "
"E<.Fl nbs.>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:206
#, no-wrap
msgid "Fl c Ns Ar n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:209
msgid "The column in which comments on code start.  The default is 33."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:209
#, no-wrap
msgid "Fl cd Ns Ar n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:213
msgid ""
"The column in which comments on declarations start.  The default is for "
"these comments to start in the same column as those on code."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:213
#, no-wrap
msgid "Fl cdb , ncdb"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:217
msgid ""
"Enables (disables) the placement of comment delimiters on blank lines.  With "
"this option enabled, comments look like this:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:221
#, no-wrap
msgid ""
"\t/*\n"
"\t * this is a comment\n"
"\t */\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:224
msgid "Rather than like this:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:226
#, no-wrap
msgid "\t/* this is a comment */\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:232
msgid ""
"This only affects block comments, not comments to the right of code.  The "
"default is E<.Fl cdb>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:232
#, no-wrap
msgid "Fl ce , nce"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:237
msgid ""
"Enables (disables) forcing of `else's to cuddle up to the immediately "
"preceding `}'.  The default is E<.Fl \\&ce>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:237
#, no-wrap
msgid "Fl \\&ci Ns Ar n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:251
msgid ""
"Sets the continuation indent to be E<.Ar n>.  Continuation lines will be "
"indented that far from the beginning of the first line of the statement.  "
"Parenthesized expressions have extra indentation added to indicate the "
"nesting, unless E<.Fl \\&lp> is in effect or the continuation indent is "
"exactly half of the main indent.  E<.Fl \\&ci> defaults to the same value as "
"E<.Fl i>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:251
#, no-wrap
msgid "Fl cli Ns Ar n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:262
msgid ""
"Causes case labels to be indented E<.Ar n> tab stops to the right of the "
"containing E<.Ic switch> statement.  E<.Fl cli0.5> causes case labels to be "
"indented half a tab stop.  The default is E<.Fl cli0>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:262
#, no-wrap
msgid "Fl cs , ncs"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:267
msgid ""
"Control whether parenthesized type names in casts are followed by a space or "
"not.  The default is E<.Fl ncs>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:267
#, no-wrap
msgid "Fl d Ns Ar n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:279
msgid ""
"Controls the placement of comments which are not to the right of code.  For "
"example, E<.Fl \\&d\\&1> means that such comments are placed one indentation "
"level to the left of code.  Specifying the default E<.Fl \\&d\\&0> lines up "
"these comments with the code.  See the section on comment indentation below."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:279
#, no-wrap
msgid "Fl \\&di Ns Ar n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:285
msgid ""
"Specifies the indentation, in character positions, of global variable names "
"and all struct/union member names relative to the beginning of their type "
"declaration.  The default is E<.Fl di16>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:285
#, no-wrap
msgid "Fl dj , ndj"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:292
msgid ""
"E<.Fl \\&dj> left justifies declarations.  E<.Fl ndj> indents declarations "
"the same as code.  The default is E<.Fl ndj>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:292
#, no-wrap
msgid "Fl \\&ei , nei"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:305
msgid ""
"Enables (disables) special E<.Ic else-if> processing.  If it is enabled, an "
"E<.Ic if> following an E<.Ic else> will have the same indentation as the "
"preceding E<.Ic \\&if> statement.  The default is E<.Fl ei>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:305
#, no-wrap
msgid "Fl eei , neei"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:315
msgid ""
"Enables (disables) extra indentation on continuation lines of the expression "
"part of E<.Ic if> and E<.Ic while> statements.  These continuation lines "
"will be indented one extra level.  The default is E<.Fl neei>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:315
#, no-wrap
msgid "Fl fbs , nfbs"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:320
msgid ""
"Enables (disables) splitting the function declaration and opening brace "
"across two lines.  The default is E<.Fl fbs>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:320
#, no-wrap
msgid "Fl fc1 , nfc1"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:330
msgid ""
"Enables (disables) the formatting of comments that start in column 1.  "
"Often, comments whose leading `/' is in column 1 have been carefully hand "
"formatted by the programmer.  In such cases, E<.Fl nfc1> should be used.  "
"The default is E<.Fl fc1>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:330
#, no-wrap
msgid "Fl fcb , nfcb"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:342
msgid ""
"Enables (disables) the formatting of block comments (ones that begin with "
"`/*\\en').  Often, block comments have been not so carefully hand formatted "
"by the programmer, but reformatting that would just change the line breaks "
"is not wanted.  In such cases, E<.Fl nfcb> should be used.  Block comments "
"are then handled like box comments.  The default is E<.Fl fcb>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:342
#, no-wrap
msgid "Fl i Ns Ar n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:345
msgid "The number of columns for one indentation level.  The default is 8."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:345
#, no-wrap
msgid "Fl \\&ip , nip"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:350
msgid ""
"Enables (disables) the indentation of parameter declarations from the left "
"margin.  The default is E<.Fl \\&ip>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:350
#, no-wrap
msgid "Fl l Ns Ar n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:353
msgid "Maximum length of an output line.  The default is 78."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:353
#, no-wrap
msgid "Fl lc Ns Ar n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:357
msgid ""
"Maximum length of an output line in a block comment.  The default is 0, "
"which means to limit block comment lines in accordance with E<.Fl l.>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:357
#, no-wrap
msgid "Fl \\&ldi Ns Ar n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:363
msgid ""
"Specifies the indentation, in character positions, of local variable names "
"relative to the beginning of their type declaration.  The default is for "
"local variable names to be indented by the same amount as global ones."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:363
#, no-wrap
msgid "Fl \\&lp , nlp"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:374
msgid ""
"Lines up code surrounded by parentheses in continuation lines.  With E<.Fl "
"\\&lp>, if a line has a left paren which is not closed on that line, then "
"continuation lines will be lined up to start at the character position just "
"after the left paren.  For example, here is how a piece of continued code "
"looks with E<.Fl nlp> in effect:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:377
#, no-wrap
msgid ""
"p1 = first_procedure(second_procedure(p2, p3),\n"
"\\ \\ third_procedure(p4, p5));\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:382
msgid "With E<.Fl lp> in effect (the default) the code looks somewhat clearer:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:385
#, no-wrap
msgid ""
"p1\\ =\\ first_procedure(second_procedure(p2,\\ p3),\n"
"\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ "
"third_procedure(p4,\\ p5));\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:388
msgid "Inserting two more newlines we get:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:393
#, no-wrap
msgid ""
"p1\\ =\\ first_procedure(second_procedure(p2,\n"
"\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ "
"\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ p3),\n"
"\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ "
"third_procedure(p4,\n"
"\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ "
"\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ p5));\n"
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:394
#, no-wrap
msgid "Fl \\&lpl , nlpl"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:407
msgid ""
"With E<.Fl \\&lpl>, code surrounded by parentheses in continuation lines is "
"lined up even if it would extend past the right margin.  With E<.Fl \\&nlpl> "
"(the default), such a line that would extend past the right margin is moved "
"left to keep it within the margin, if that does not require placing it to "
"the left of the prevailing indentation level.  These switches have no effect "
"if E<.Fl nlp> is selected."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:407
#, no-wrap
msgid "Fl npro"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:413
msgid ""
"Causes the profile files, E<.Sq Pa ./.indent.pro> and E<.Sq Pa "
"~/.indent.pro>, to be ignored."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:413
#, no-wrap
msgid "Fl P Ns Ar file"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:416
msgid "Read profile from E<.Ar file>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:416
#, no-wrap
msgid "Fl pcs , npcs"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:423
msgid ""
"If true E<.Pq Fl pcs> all procedure calls will have a space inserted between "
"the name and the `('.  The default is E<.Fl npcs>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:423
#, no-wrap
msgid "Fl psl , npsl"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:431
msgid ""
"If true E<.Pq Fl psl> the names of procedures being defined are placed in "
"column 1 \\- their types, if any, will be left on the previous lines.  The "
"default is E<.Fl psl>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:431
#, no-wrap
msgid "Fl \\&sc , nsc"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:436
msgid ""
"Enables (disables) the placement of asterisks (`*'s) at the left edge of all "
"comments.  The default is E<.Fl sc>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:436
#, no-wrap
msgid "Fl sob , nsob"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:444
msgid ""
"If E<.Fl sob> is specified, indent will swallow optional blank lines.  You "
"can use this to get rid of blank lines after declarations.  Default: E<.Fl "
"nsob>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:444
#, no-wrap
msgid "Fl \\&st"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:448
msgid "Causes E<.Nm> to take its input from stdin and put its output to stdout."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:448
#, no-wrap
msgid "Fl ta"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:451
msgid ""
"Automatically add all identifiers ending in \"_t\" to the list of type "
"keywords."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:451
#, no-wrap
msgid "Fl T Ns Ar typename"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:473
msgid ""
"Adds E<.Ar typename> to the list of type keywords.  Names accumulate: E<.Fl "
"T> can be specified more than once.  You need to specify all the typenames "
"that appear in your program that are defined by E<.Ic typedef> \\- nothing "
"will be harmed if you miss a few, but the program will not be formatted as "
"nicely as it should.  This sounds like a painful thing to have to do, but it "
"is really a symptom of a problem in C: E<.Ic typedef> causes a syntactic "
"change in the language and E<.Nm> cannot find all instances of E<.Ic "
"typedef>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:473
#, no-wrap
msgid "Fl ts Ns Ar n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:476
msgid "Assumed distance between tab stops.  The default is 8."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:476
#, no-wrap
msgid "Fl U Ns Ar file"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:480
msgid "Adds type names from E<.Ar file> to the list of type keywords."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:480
#, no-wrap
msgid "Fl ut , nut"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:484
msgid ""
"Enables (disables) the use of tab characters in the output.  The default is "
"E<.Fl ut>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:484
#, no-wrap
msgid "Fl v , \\&nv"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:495
msgid ""
"E<.Fl v> turns on `verbose' mode; E<.Fl \\&nv> turns it off.  When in "
"verbose mode, E<.Nm> reports when it splits one line of input into two or "
"more lines of output, and gives some size statistics at completion.  The "
"default is E<.Fl \\&nv>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:495
#, no-wrap
msgid "Fl -version"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:499
msgid "Causes E<.Nm> to print its version number and exit."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:516
msgid ""
"You may set up your own `profile' of defaults to E<.Nm> by creating a file "
"called E<.Pa .indent.pro> in your login directory and/or the current "
"directory and including whatever switches you like.  A `.indent.pro' in the "
"current directory takes precedence over the one in your login directory.  If "
"E<.Nm> is run and a profile file exists, then it is read to set up the "
"program's defaults.  Switches on the command line, though, always override "
"profile switches.  The switches should be separated by spaces, tabs or "
"newlines."
msgstr ""

#. type: Ss
#: /usr/src/usr.bin/indent/indent.1:517
#, no-wrap
msgid "Comments"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:528
msgid ""
"E<.Sq Em Box> E<.Em comments>.  The E<.Nm> utility assumes that any comment "
"with a dash or star immediately after the start of comment (that is, `/*\\-' "
"or `/**') is a comment surrounded by a box of stars.  Each line of such a "
"comment is left unchanged, except that its indentation may be adjusted to "
"account for the change in indentation of the first line of the comment."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:536
msgid ""
"E<.Em Straight text>.  All other comments are treated as straight text.  The "
"E<.Nm> utility fits as many words (separated by blanks, tabs, or newlines) "
"on a line as possible.  Blank lines break paragraphs."
msgstr ""

#. type: Ss
#: /usr/src/usr.bin/indent/indent.1:536
#, no-wrap
msgid "Comment indentation"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:551
msgid ""
"If a comment is on a line with code it is started in the `comment column', "
"which is set by the E<.Fl c Ns Ns Ar n> command line parameter.  Otherwise, "
"the comment is started at E<.Ar n> indentation levels less than where code "
"is currently being placed, where E<.Ar n> is specified by the E<.Fl d Ns Ns "
"Ar n> command line parameter.  If the code on a line extends past the "
"comment column, the comment starts further to the right, and the right "
"margin may be automatically extended in extreme cases."
msgstr ""

#. type: Ss
#: /usr/src/usr.bin/indent/indent.1:551
#, no-wrap
msgid "Preprocessor lines"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:565
msgid ""
"In general, E<.Nm> leaves preprocessor lines alone.  The only reformatting "
"that it will do is to straighten up trailing comments.  It leaves embedded "
"comments alone.  Conditional compilation E<.Pq Ic #ifdef...#endif> is "
"recognized and E<.Nm> attempts to correctly compensate for the syntactic "
"peculiarities introduced."
msgstr ""

#. type: Ss
#: /usr/src/usr.bin/indent/indent.1:565
#, no-wrap
msgid "C syntax"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:573
msgid ""
"The E<.Nm> utility understands a substantial amount about the syntax of C, "
"but it has a `forgiving' parser.  It attempts to cope with the usual sorts "
"of incomplete and malformed syntax.  In particular, the use of macros like:"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/indent/indent.1:574
#, no-wrap
msgid "#define forever for(;;)"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:577
msgid "is handled properly."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/indent/indent.1:577
#, no-wrap
msgid "ENVIRONMENT"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:583
msgid "The E<.Nm> utility uses the E<.Ev HOME> environment variable."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/indent/indent.1:583
#, no-wrap
msgid "FILES"
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:585
#, no-wrap
msgid "Pa ./.indent.pro"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:587 /usr/src/usr.bin/indent/indent.1:589
msgid "profile file"
msgstr ""

#. type: It
#: /usr/src/usr.bin/indent/indent.1:587
#, no-wrap
msgid "Pa ~/.indent.pro"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/indent/indent.1:590
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:595
msgid "The E<.Nm> command appeared in E<.Bx 4.2>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/indent/indent.1:595
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:600
msgid "The E<.Nm> utility has even more switches than E<.Xr ls 1>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:604
msgid ""
"A common mistake is to try to indent all the E<.Em C> programs in a "
"directory by typing:"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/indent/indent.1:605
#, no-wrap
msgid "indent *.c"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/indent/indent.1:607
msgid "This is probably a bug, not a feature."
msgstr ""
