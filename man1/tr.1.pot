# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/usr.bin/tr/tr.1:34
#, no-wrap
msgid "October 13, 2006"
msgstr ""

#. type: Dt
#: /usr/src/usr.bin/tr/tr.1:35
#, no-wrap
msgid "TR 1"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tr/tr.1:37
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:39
msgid "E<.Nm tr>"
msgstr ""

#. type: Nd
#: /usr/src/usr.bin/tr/tr.1:39
#, no-wrap
msgid "translate characters"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tr/tr.1:40
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:56
msgid ""
"E<.Nm> E<.Op Fl Ccsu> E<.Ar string1 string2> E<.Nm> E<.Op Fl Ccu> E<.Fl d> "
"E<.Ar string1> E<.Nm> E<.Op Fl Ccu> E<.Fl s> E<.Ar string1> E<.Nm> E<.Op Fl "
"Ccu> E<.Fl ds> E<.Ar string1 string2>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tr/tr.1:56
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:61
msgid ""
"The E<.Nm> utility copies the standard input to the standard output with "
"substitution or deletion of selected characters."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:63
msgid "The following options are available:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:64
#, no-wrap
msgid "Fl C"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:73
msgid ""
"Complement the set of characters in E<.Ar string1>, that is E<.Dq Fl C Li "
"ab> includes every character except for E<.Ql a> and E<.Ql b>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:73
#, no-wrap
msgid "Fl c"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:78
msgid "Same as E<.Fl C> but complement the set of values in E<.Ar string1>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:78
#, no-wrap
msgid "Fl d"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:82
msgid "Delete characters in E<.Ar string1> from the input."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:82
#, no-wrap
msgid "Fl s"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:90
msgid ""
"Squeeze multiple occurrences of the characters listed in the last operand "
"(either E<.Ar string1> or E<.Ar string2>)  in the input into a single "
"instance of the character.  This occurs after all deletion and translation "
"is completed."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:90
#, no-wrap
msgid "Fl u"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:92
msgid "Guarantee that any output is unbuffered."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:112
msgid ""
"In the first synopsis form, the characters in E<.Ar string1> are translated "
"into the characters in E<.Ar string2> where the first character in E<.Ar "
"string1> is translated into the first character in E<.Ar string2> and so "
"on.  If E<.Ar string1> is longer than E<.Ar string2>, the last character "
"found in E<.Ar string2> is duplicated until E<.Ar string1> is exhausted."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:116
msgid ""
"In the second synopsis form, the characters in E<.Ar string1> are deleted "
"from the input."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:122
msgid ""
"In the third synopsis form, the characters in E<.Ar string1> are compressed "
"as described for the E<.Fl s> option."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:130
msgid ""
"In the fourth synopsis form, the characters in E<.Ar string1> are deleted "
"from the input, and the characters in E<.Ar string2> are compressed as "
"described for the E<.Fl s> option."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:136
msgid ""
"The following conventions can be used in E<.Ar string1> and E<.Ar string2> "
"to specify sets of characters:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:137
#, no-wrap
msgid "character"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:140
msgid ""
"Any character not described by one of the following conventions represents "
"itself."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:140
#, no-wrap
msgid "\\eoctal"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:145
msgid ""
"A backslash followed by 1, 2 or 3 octal digits represents a character with "
"that encoded value.  To follow an octal sequence with a digit as a "
"character, left zero-pad the octal sequence to the full 3 octal digits."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:145
#, no-wrap
msgid "\\echaracter"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:148
msgid "A backslash followed by certain special characters maps to special values."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:149
#, no-wrap
msgid "\\ea\tE<lt>alert characterE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:150
#, no-wrap
msgid "\\eb\tE<lt>backspaceE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:151
#, no-wrap
msgid "\\ef\tE<lt>form-feedE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:152
#, no-wrap
msgid "\\en\tE<lt>newlineE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:153
#, no-wrap
msgid "\\er\tE<lt>carriage returnE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:154
#, no-wrap
msgid "\\et\tE<lt>tabE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:155
#, no-wrap
msgid "\\ev\tE<lt>vertical tabE<gt>"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:159
msgid "A backslash followed by any other character maps to that character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:159
#, no-wrap
msgid "c-c"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:167
msgid ""
"For non-octal range endpoints represents the range of characters between the "
"range endpoints, inclusive, in ascending order, as defined by the collation "
"sequence.  If either or both of the range endpoints are octal sequences, it "
"represents the range of specific coded values between the range endpoints, "
"inclusive."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:176
msgid ""
"E<.Bf Em> See the E<.Sx COMPATIBILITY> section below for an important note "
"regarding differences in the way the current implementation interprets range "
"expressions differently from previous implementations.  E<.Ef>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:176
#, no-wrap
msgid "[:class:]"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:179
msgid ""
"Represents all characters belonging to the defined character class.  Class "
"names are:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:180
#, no-wrap
msgid "alnum\tE<lt>alphanumeric charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:181
#, no-wrap
msgid "alpha\tE<lt>alphabetic charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:182
#, no-wrap
msgid "blank\tE<lt>whitespace charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:183
#, no-wrap
msgid "cntrl\tE<lt>control charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:184
#, no-wrap
msgid "digit\tE<lt>numeric charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:185
#, no-wrap
msgid "graph\tE<lt>graphic charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:186
#, no-wrap
msgid "ideogram\tE<lt>ideographic charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:187
#, no-wrap
msgid "lower\tE<lt>lower-case alphabetic charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:188
#, no-wrap
msgid "phonogram\tE<lt>phonographic charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:189
#, no-wrap
msgid "print\tE<lt>printable charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:190
#, no-wrap
msgid "punct\tE<lt>punctuation charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:191
#, no-wrap
msgid "rune\tE<lt>valid charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:192
#, no-wrap
msgid "space\tE<lt>space charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:193
#, no-wrap
msgid "special\tE<lt>special charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:194
#, no-wrap
msgid "upper\tE<lt>upper-case charactersE<gt>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:195
#, no-wrap
msgid "xdigit\tE<lt>hexadecimal charactersE<gt>"
msgstr ""

#.  All classes may be used in
#.  .Ar string1 ,
#.  and in
#.  .Ar string2
#.  when both the
#.  .Fl d
#.  and
#.  .Fl s
#.  options are specified.
#.  Otherwise, only the classes ``upper'' and ``lower'' may be used in
#.  .Ar string2
#.  and then only when the corresponding class (``upper'' for ``lower''
#.  and vice-versa) is specified in the same relative position in
#.  .Ar string1 .
#.  .Pp
#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:239
msgid ""
"When E<.Dq Li [:lower:]> appears in E<.Ar string1> and E<.Dq Li [:upper:]> "
"appears in the same relative position in E<.Ar string2>, it represents the "
"characters pairs from the E<.Dv toupper> mapping in the E<.Ev LC_CTYPE> "
"category of the current locale.  When E<.Dq Li [:upper:]> appears in E<.Ar "
"string1> and E<.Dq Li [:lower:]> appears in the same relative position in "
"E<.Ar string2>, it represents the characters pairs from the E<.Dv tolower> "
"mapping in the E<.Ev LC_CTYPE> category of the current locale."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:242
msgid ""
"With the exception of case conversion, characters in the classes are in "
"unspecified order."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:249
msgid ""
"For specific information as to which E<.Tn ASCII> characters are included in "
"these classes, see E<.Xr ctype 3> and related manual pages."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:249
#, no-wrap
msgid "[=equiv=]"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:253
msgid ""
"Represents all characters belonging to the same equivalence class as E<.Ar "
"equiv>, ordered by their encoded values."
msgstr ""

#. type: It
#: /usr/src/usr.bin/tr/tr.1:253
#, no-wrap
msgid "[#*n]"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:271
msgid ""
"Represents E<.Ar n> repeated occurrences of the character represented by "
"E<.Ar #>.  This expression is only valid when it occurs in E<.Ar string2>.  "
"If E<.Ar n> is omitted or is zero, it is be interpreted as large enough to "
"extend E<.Ar string2> sequence to the length of E<.Ar string1>.  If E<.Ar n> "
"has a leading zero, it is interpreted as an octal value, otherwise, it is "
"interpreted as a decimal value."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tr/tr.1:272
#, no-wrap
msgid "ENVIRONMENT"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:281
msgid ""
"The E<.Ev LANG , LC_ALL , LC_CTYPE> and E<.Ev LC_COLLATE> environment "
"variables affect the execution of E<.Nm> as described in E<.Xr environ 7>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tr/tr.1:281
#, no-wrap
msgid "EXIT STATUS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:283
msgid "E<.Ex -std>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tr/tr.1:283
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:285
msgid "The following examples are shown as given to the shell:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:288
msgid ""
"Create a list of the words in file1, one per line, where a word is taken to "
"be a maximal string of letters."
msgstr ""

#. type: D1
#: /usr/src/usr.bin/tr/tr.1:289
#, no-wrap
msgid "Li \"tr -cs \\*q[:alpha:]\\*q \\*q\\en\\*q E<lt> file1\""
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:292
msgid "Translate the contents of file1 to upper-case."
msgstr ""

#. type: D1
#: /usr/src/usr.bin/tr/tr.1:293
#, no-wrap
msgid "Li \"tr \\*q[:lower:]\\*q \\*q[:upper:]\\*q E<lt> file1\""
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:300
msgid ""
"(This should be preferred over the traditional E<.Ux> idiom of E<.Dq Li \"tr "
"a-z A-Z\">, since it works correctly in all locales.)"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:302
msgid "Strip out non-printable characters from file1."
msgstr ""

#. type: D1
#: /usr/src/usr.bin/tr/tr.1:303
#, no-wrap
msgid "Li \"tr -cd \\*q[:print:]\\*q E<lt> file1\""
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:307
msgid "Remove diacritical marks from all accented variants of the letter E<.Ql e>:"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/tr/tr.1:308
#, no-wrap
msgid "tr \\*q[=e=]\\*q \\*qe\\*q"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tr/tr.1:309
#, no-wrap
msgid "COMPATIBILITY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:336
msgid ""
"Previous E<.Fx> implementations of E<.Nm> did not order characters in range "
"expressions according to the current locale's collation order, making it "
"possible to convert unaccented Latin characters (esp.\\& as found in English "
"text) from upper to lower case using the traditional E<.Ux> idiom of E<.Dq "
"Li \"tr A-Z a-z\">.  Since E<.Nm> now obeys the locale's collation order, "
"this idiom may not produce correct results when there is not a 1:1 mapping "
"between lower and upper case, or when the order of characters within the two "
"cases differs.  As noted in the E<.Sx EXAMPLES> section above, the character "
"class expressions E<.Dq Li [:lower:]> and E<.Dq Li [:upper:]> should be used "
"instead of explicit character ranges like E<.Dq Li a-z> and E<.Dq Li A-Z>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:340
msgid ""
"E<.Dq Li [=equiv=]> expression and collation for ranges are implemented for "
"single byte locales only."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:381
msgid ""
"System V has historically implemented character ranges using the syntax "
"E<.Dq Li [c-c]> instead of the E<.Dq Li c-c> used by historic E<.Bx> "
"implementations and standardized by POSIX.  System V shell scripts should "
"work under this implementation as long as the range is intended to map in "
"another range, i.e., the command E<.Dq Li \"tr [a-z] [A-Z]\"> will work as "
"it will map the E<.Ql \\&[> character in E<.Ar string1> to the E<.Ql \\&[> "
"character in E<.Ar string2>.  However, if the shell script is deleting or "
"squeezing characters as in the command E<.Dq Li \"tr -d [a-z]\">, the "
"characters E<.Ql \\&[> and E<.Ql \\&]> will be included in the deletion or "
"compression list which would not have happened under a historic System V "
"implementation.  Additionally, any scripts that depended on the sequence "
"E<.Dq Li a-z> to represent the three characters E<.Ql a>, E<.Ql \\-> and "
"E<.Ql z> will have to be rewritten as E<.Dq Li a\\e-z>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:387
msgid ""
"The E<.Nm> utility has historically not permitted the manipulation of NUL "
"bytes in its input and, additionally, stripped NUL's from its input stream.  "
"This implementation has removed this behavior as a bug."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:397
msgid ""
"The E<.Nm> utility has historically been extremely forgiving of syntax "
"errors, for example, the E<.Fl c> and E<.Fl s> options were ignored unless "
"two strings were specified.  This implementation will not permit illegal "
"syntax."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/tr/tr.1:397
#, no-wrap
msgid "STANDARDS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:409
msgid ""
"The E<.Nm> utility conforms to E<.St -p1003.1-2001>.  The E<.Dq ideogram>, "
"E<.Dq phonogram>, E<.Dq rune>, and E<.Dq special> character classes are "
"extensions."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/tr/tr.1:425
msgid ""
"It should be noted that the feature wherein the last character of E<.Ar "
"string2> is duplicated if E<.Ar string2> has less characters than E<.Ar "
"string1> is permitted by POSIX but is not required.  Shell scripts "
"attempting to be portable to other POSIX systems should use the E<.Dq Li "
"[#*]> convention instead of relying on this behavior.  The E<.Fl u> option "
"is an extension to the E<.St -p1003.1-2001> standard."
msgstr ""
