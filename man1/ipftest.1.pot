# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:32-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: /usr/src/contrib/ipfilter/man/ipftest.1:2
#, no-wrap
msgid "ipftest"
msgstr ""

#. type: SH
#: /usr/src/contrib/ipfilter/man/ipftest.1:3
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:5
msgid "ipftest - test packet filter rules with arbitrary input."
msgstr ""

#. type: SH
#: /usr/src/contrib/ipfilter/man/ipftest.1:5
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:37
msgid ""
"B<ipftest> [ B<-6bCdDoRvx> ] [ B<-F> input-format ] [ B<-i> "
"E<lt>filenameE<gt> ] [ B<-I> interface ] [ B<-l> E<lt>filenameE<gt> ] [ "
"B<-N> E<lt>filenameE<gt> ] [ B<-P> E<lt>filenameE<gt> ] [ B<-r> "
"E<lt>filenameE<gt> ] [ B<-S> E<lt>ip_addressE<gt> ] [ B<-T> "
"E<lt>optionlistE<gt> ]"
msgstr ""

#. type: SH
#: /usr/src/contrib/ipfilter/man/ipftest.1:37
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:43
msgid ""
"B<ipftest> is provided for the purpose of being able to test a set of filter "
"rules without having to put them in place, in operation and proceed to test "
"their effectiveness.  The hope is that this minimises disruptions in "
"providing a secure IP environment."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:51
msgid ""
"B<ipftest> will parse any standard ruleset for use with B<ipf>, B<ipnat> "
"and/or B<ippool> and apply input, returning output as to the result.  "
"However, B<ipftest> will return one of three values for packets passed "
"through the filter: pass, block or nomatch.  This is intended to give the "
"operator a better idea of what is happening with packets passing through "
"their filter ruleset."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:53
msgid "At least one of B<-N>, B<-P> or B<-r> must be specified."
msgstr ""

#. type: SH
#: /usr/src/contrib/ipfilter/man/ipftest.1:53
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:54
#, no-wrap
msgid "B<-6>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:57
msgid "Use IPv6."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:57
#, no-wrap
msgid "B<-b>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:62
msgid ""
"Cause the output to be a brief summary (one-word) of the result of passing "
"the packet through the filter; either \"pass\", \"block\" or \"nomatch\".  "
"This is used in the regression testing."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:62
#, no-wrap
msgid "B<-C>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:67
msgid ""
"Force the checksums to be (re)calculated for all packets being input into "
"B<ipftest>.  This may be necessary if pcap files from tcpdump are being fed "
"in where there are partial checksums present due to hardware offloading."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:67
#, no-wrap
msgid "B<-d>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:71
msgid ""
"Turn on filter rule debugging.  Currently, this only shows you what caused "
"the rule to not match in the IP header checking (addresses/netmasks, etc)."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:71
#, no-wrap
msgid "B<-D>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:75
msgid "Dump internal tables before exiting.  This excludes log messages."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:75
#, no-wrap
msgid "B<-F>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:79
msgid ""
"This option is used to select which input format the input file is in.  The "
"following formats are available: etherfind, hex, pcap, snoop, tcpdump,text."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:80
#, no-wrap
msgid "B<etherfind>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:85
msgid ""
"The input file is to be text output from etherfind.  The text formats which "
"are currently supported are those which result from the following etherfind "
"option combinations:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:89
#, no-wrap
msgid ""
"\t\tetherfind -n\n"
"\t\tetherfind -n -t\n"
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:90
#, no-wrap
msgid "B<hex>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:100
msgid ""
"The input file is to be hex digits, representing the binary makeup of the "
"packet.  No length correction is made, if an incorrect length is put in the "
"IP header.  A packet may be broken up over several lines of hex digits, a "
"blank line indicating the end of the packet.  It is possible to specify both "
"the interface name and direction of the packet (for filtering purposes)  at "
"the start of the line using this format: [direction,interface] To define a "
"packet going in on le0, we would use B<[in,le0]> - the []'s are required and "
"part of the input syntax."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:105
msgid ""
"B<pcap> The input file specified by B<-i> is a binary file produced using "
"libpcap (i.e., tcpdump version 3).  Packets are read from this file as being "
"input (for rule purposes).  An interface maybe specified using B<-I>."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:105
#, no-wrap
msgid "B<snoop>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:110
msgid ""
"The input file is to be in \"snoop\" format (see RFC 1761).  Packets are "
"read from this file and used as input from any interface.  This is perhaps "
"the most useful input type, currently."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:110
#, no-wrap
msgid "B<tcpdump>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:115
msgid ""
"The input file is to be text output from tcpdump.  The text formats which "
"are currently supported are those which result from the following tcpdump "
"option combinations:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:122
#, no-wrap
msgid ""
"\t\ttcpdump -n\n"
"\t\ttcpdump -nq\n"
"\t\ttcpdump -nqt\n"
"\t\ttcpdump -nqtt\n"
"\t\ttcpdump -nqte\n"
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:123
#, no-wrap
msgid "B<text>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:128
msgid ""
"The input file is in B<ipftest> text input format.  This is the default if "
"no B<-F> argument is specified.  The format used is as follows:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:131
#, no-wrap
msgid ""
"\t\"in\"|\"out\" \"on\" if [\"tcp\"|\"udp\"|\"icmp\"]\n"
"\t\tsrchost[,srcport] dsthost[,destport] [FSRPAU]\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:138
msgid ""
"This allows for a packet going \"in\" or \"out\" of an interface (if) to be "
"generated, being one of the three main protocols (optionally), and if either "
"TCP or UDP, a port parameter is also expected.  If TCP is selected, it is "
"possible to (optionally) supply TCP flags at the end.  Some examples are:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:145
#, no-wrap
msgid ""
"\t# a UDP packet coming in on le0\n"
"\tin on le0 udp 10.1.1.1,2210 10.2.1.5,23\n"
"\t# an IP packet coming in on le0 from localhost - hmm :)\n"
"\tin on le0 localhost 10.4.12.1\n"
"\t# a TCP packet going out of le0 with the SYN flag set.\n"
"\tout on le0 tcp 10.4.12.1,2245 10.1.1.1,23 S\n"
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:148
#, no-wrap
msgid "B<-i>\\0E<lt>filenameE<gt>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:151
msgid "Specify the filename from which to take input.  Default is stdin."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:151
#, no-wrap
msgid "B<-I>\\0E<lt>interfaceE<gt>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:157
msgid ""
"Set the interface name (used in rule matching) to be the name supplied.  "
"This is useful where it is not otherwise possible to associate a packet with "
"an interface.  Normal \"text packets\" can override this setting."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:157
#, no-wrap
msgid "B<-l>\\0E<lt>filenameE<gt>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:160
msgid "Dump log messages generated during testing to the specified file."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:160
#, no-wrap
msgid "B<-N>\\0E<lt>filenameE<gt>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:163
msgid "Specify the filename from which to read NAT rules in B<ipnat>(5) format."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:163
#, no-wrap
msgid "B<-o>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:167
msgid ""
"Save output packets that would have been written to each interface in a file "
"/tmp/I<interface_name> in raw format."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:167
#, no-wrap
msgid "B<-P>\\0E<lt>filenameE<gt>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:171
msgid ""
"Read IP pool configuration information in B<ippool>(5) format from the "
"specified file."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:171
#, no-wrap
msgid "B<-r>\\0E<lt>filenameE<gt>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:174
msgid "Specify the filename from which to read filter rules in B<ipf>(5) format."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:174
#, no-wrap
msgid "B<-R>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:177
msgid "Don't attempt to convert IP addresses to hostnames."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:177
#, no-wrap
msgid "B<-S>\\0E<lt>ip_addressE<gt>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:185
msgid ""
"The IP address specifived with this option is used by ipftest to determine "
"whether a packet should be treated as \"input\" or \"output\".  If the "
"source address in an IP packet matches then it is considered to be inbound.  "
"If it does not match then it is considered to be outbound.  This is "
"primarily for use with tcpdump (pcap) files where there is no in/out "
"information saved with each packet."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:185
#, no-wrap
msgid "B<-T>\\0E<lt>optionlistE<gt>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:194
msgid ""
"This option simulates the run-time changing of IPFilter kernel variables "
"available with the B<-T> option of B<ipf>.  The optionlist parameter is a "
"comma separated list of tuning commands.  A tuning command is either "
"\"list\" (retrieve a list of all variables in the kernel, their maximum, "
"minimum and current value), a single variable name (retrieve its current "
"value) and a variable name with a following assignment to set a new value.  "
"See B<ipf>(8) for examples."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:194
#, no-wrap
msgid "B<-v>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:198
msgid ""
"Verbose mode.  This provides more information about which parts of rule "
"matching the input packet passes and fails."
msgstr ""

#. type: TP
#: /usr/src/contrib/ipfilter/man/ipftest.1:198
#, no-wrap
msgid "B<-x>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:201
msgid "Print a hex dump of each packet before printing the decoded contents."
msgstr ""

#. type: SH
#: /usr/src/contrib/ipfilter/man/ipftest.1:201
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:203
msgid "ipf(5), ipf(8), snoop(1m), tcpdump(8), etherfind(8c)"
msgstr ""

#. type: SH
#: /usr/src/contrib/ipfilter/man/ipftest.1:203
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipftest.1:205
msgid ""
"Not all of the input formats are sufficiently capable of introducing a wide "
"enough variety of packets for them to be all useful in testing."
msgstr ""
