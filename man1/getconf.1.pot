# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/usr.bin/getconf/getconf.1:31
#, no-wrap
msgid "September 15, 2017"
msgstr ""

#. type: Dt
#: /usr/src/usr.bin/getconf/getconf.1:32
#, no-wrap
msgid "GETCONF 1"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/getconf/getconf.1:34
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:36
msgid "E<.Nm getconf>"
msgstr ""

#. type: Nd
#: /usr/src/usr.bin/getconf/getconf.1:36
#, no-wrap
msgid "retrieve standard configuration variables"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/getconf/getconf.1:37
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:48
msgid ""
"E<.Nm> E<.Fl a> E<.Op Ar file> E<.Nm> E<.Op Fl v Ar environment> E<.Ar "
"path_var> E<.Ar file> E<.Nm> E<.Op Fl v Ar environment> E<.Ar system_var>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/getconf/getconf.1:48
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:59
msgid ""
"The E<.Nm> utility prints the values of E<.Tn POSIX> or E<.Tn X/Open> path "
"or system configuration variables to the standard output.  If a variable is "
"undefined, the string E<.Dq Li undefined> is output."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:74
msgid ""
"The first form of the command displays all of the path or system "
"configuration variables to standard output.  If E<.Ar file> is provided, all "
"path configuration variables are reported for E<.Ar file> using E<.Xr "
"pathconf 2>.  Otherwise, all system configuration variables are reported "
"using E<.Xr confstr 3> and E<.Xr sysconf 3>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:86
msgid ""
"The second form of the command, with two mandatory arguments, retrieves "
"file- and file system-specific configuration variables using E<.Xr pathconf "
"2>.  The third form, with a single argument, retrieves system configuration "
"variables using E<.Xr confstr 3> and E<.Xr sysconf 3>, depending on the type "
"of variable.  As an extension, the second form can also be used to query "
"static limits from"
msgstr ""

#. type: In
#: /usr/src/usr.bin/getconf/getconf.1:86
#, no-wrap
msgid "limits.h ."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:117
msgid ""
"All E<.Xr sysconf 3> and E<.Xr pathconf 2> variables use the same name as "
"the manifest constants defined in the relevant standard C-language bindings, "
"including any leading underscore or prefix.  That is to say, E<.Ar "
"system_var> might be E<.Dv ARG_MAX> or E<.Dv _POSIX_VERSION>, as opposed to "
"the E<.Xr sysconf 3> names E<.Dv _SC_ARG_MAX> or E<.Dv _SC_POSIX_VERSION>.  "
"Variables retrieved from E<.Xr confstr 3> have the leading E<.Ql _CS_> "
"stripped off; thus, E<.Dv _CS_PATH> is queried by a E<.Ar system_var> of "
"E<.Dq Li PATH>."
msgstr ""

#. type: Ss
#: /usr/src/usr.bin/getconf/getconf.1:117
#, no-wrap
msgid "Programming Environments"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:128
msgid ""
"The E<.Fl v Ar environment> option specifies a E<.St -p1003.1-2001> "
"programming environment under which the values are to be queried.  This "
"option currently does nothing, but may in the future be used to select "
"between 32-bit and 64-bit execution environments on platforms which support "
"both.  Specifying an environment which is not supported on the current "
"execution platform gives undefined results."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:130
msgid "The standard programming environments are as follows:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/getconf/getconf.1:131
#, no-wrap
msgid "Li POSIX_V6_ILP32_OFF32"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:135
msgid ""
"Exactly 32-bit integer, long, pointer, and file offset.  E<.Sy Supported "
"platforms>: None."
msgstr ""

#. type: It
#: /usr/src/usr.bin/getconf/getconf.1:135
#, no-wrap
msgid "Li POSIX_V6_ILP32_OFFBIG"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:140
msgid ""
"Exactly 32-bit integer, long, and pointer; at least 64-bit file offset.  "
"E<.Sy Supported platforms>: E<.Tn IA32>, E<.Tn PowerPC>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/getconf/getconf.1:140
#, no-wrap
msgid "Li POSIX_V6_LP64_OFF64"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:145
msgid ""
"Exactly 32-bit integer; exactly 64-bit long, pointer, and file offset.  "
"E<.Sy Supported platforms>: E<.Tn AMD64>, E<.Tn SPARC64>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/getconf/getconf.1:145
#, no-wrap
msgid "Li POSIX_V6_LPBIG_OFFBIG"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:149
msgid ""
"At least 32-bit integer; at least 64-bit long, pointer, and file offset.  "
"E<.Sy Supported platforms>: None."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:152 /usr/src/usr.bin/getconf/getconf.1:170 /usr/src/usr.bin/getconf/getconf.1:178 /usr/src/usr.bin/getconf/getconf.1:186
msgid "The command:"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/getconf/getconf.1:153
#, no-wrap
msgid "getconf POSIX_V6_WIDTH_RESTRICTED_ENVS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:166
msgid ""
"returns a newline-separated list of environments in which the width of "
"certain fundamental types is no greater than the width of the native C type "
"E<.Vt long>.  At present, all programming environments supported by E<.Fx> "
"have this property.  Several of the E<.Xr confstr 3> variables provide "
"information on the necessary compiler and linker flags to use the standard "
"programming environments described above."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/getconf/getconf.1:166
#, no-wrap
msgid "EXIT STATUS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:168
msgid "E<.Ex -std>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/getconf/getconf.1:168
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/getconf/getconf.1:171
#, no-wrap
msgid "getconf PATH"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:176
msgid ""
"will display the system default setting for the E<.Ev PATH> environment "
"variable."
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/getconf/getconf.1:179
#, no-wrap
msgid "getconf NAME_MAX /tmp"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:184
msgid "will display the maximum length of a filename in the E<.Pa /tmp> directory."
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/getconf/getconf.1:187
#, no-wrap
msgid "getconf -v POSIX_V6_LPBIG_OFFBIG LONG_MAX"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:195
msgid ""
"will display the maximum value of the C type E<.Vt long> in the E<.Li "
"POSIX_V6_LPBIG_OFFBIG> programming environment, if the system supports that "
"environment."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/getconf/getconf.1:195
#, no-wrap
msgid "DIAGNOSTICS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:210
msgid ""
"Use of a E<.Ar system_var> or E<.Ar path_var> which is completely "
"unrecognized is considered an error, causing a diagnostic message to be "
"written to standard error.  One which is known but merely undefined does not "
"result in an error indication.  The E<.Nm> utility recognizes all of the "
"variables defined for E<.St -p1003.1-2001>, including those which are not "
"currently implemented."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/getconf/getconf.1:210
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:214
msgid "E<.Xr pathconf 2>, E<.Xr confstr 3>, E<.Xr sysconf 3>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/getconf/getconf.1:214
#, no-wrap
msgid "STANDARDS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:219
msgid "The E<.Nm> utility is expected to be compliant with E<.St -p1003.1-2001>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/getconf/getconf.1:219
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:224
msgid "The E<.Nm> utility first appeared in E<.Fx 5.0>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/getconf/getconf.1:224
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/getconf/getconf.1:225
msgid "E<.An Garrett A. Wollman Aq Mt wollman@lcs.mit.edu>"
msgstr ""
