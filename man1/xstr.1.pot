# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/usr.bin/xstr/xstr.1:31
#, no-wrap
msgid "December 30, 1993"
msgstr ""

#. type: Dt
#: /usr/src/usr.bin/xstr/xstr.1:32
#, no-wrap
msgid "XSTR 1"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/xstr/xstr.1:34
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:36
msgid "E<.Nm xstr>"
msgstr ""

#. type: Nd
#: /usr/src/usr.bin/xstr/xstr.1:36
#, no-wrap
msgid "extract strings from C programs to implement shared strings"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/xstr/xstr.1:37
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:42
msgid "E<.Nm> E<.Op Fl cv> E<.Op Fl> E<.Op Ar>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/xstr/xstr.1:42
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:51
msgid ""
"The E<.Nm> utility maintains a file E<.Pa strings> into which strings in "
"component parts of a large program are hashed.  These strings are replaced "
"with references to this common area.  This serves to implement shared "
"constant strings, most useful if they are also read-only."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:53
msgid "The following options are available:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/xstr/xstr.1:54
#, no-wrap
msgid "Fl"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:56
msgid "Read from the standard input."
msgstr ""

#. type: It
#: /usr/src/usr.bin/xstr/xstr.1:56
#, no-wrap
msgid "Fl c"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:77
msgid ""
"Extract the strings from the C source E<.Ar file> or the standard input "
"E<.Pq Fl>, replacing string references by expressions of the form E<.Li "
"(&xstr[number])> for some E<.Ar number>.  An appropriate declaration of "
"E<.Va xstr> is prepended to the file.  The resulting C text is placed in the "
"file E<.Pa x.c>, to then be compiled.  The strings from this file are placed "
"in the E<.Pa strings> data base if they are not there already.  Repeated "
"strings and strings which are suffixes of existing strings do not cause "
"changes to the data base."
msgstr ""

#. type: It
#: /usr/src/usr.bin/xstr/xstr.1:77
#, no-wrap
msgid "Fl v"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:79
msgid "Verbose mode."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:86
msgid ""
"After all components of a large program have been compiled a file E<.Pa "
"xs.c> declaring the common E<.Va xstr> space can be created by a command of "
"the form"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/xstr/xstr.1:87
#, no-wrap
msgid "xstr"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:95
msgid ""
"The file E<.Pa xs.c> should then be compiled and loaded with the rest of the "
"program.  If possible, the array can be made read-only (shared) saving space "
"and swap overhead."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:100
msgid "The E<.Nm> utility can also be used on a single file.  A command"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:102
#, no-wrap
msgid "xstr name\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:111
msgid ""
"creates files E<.Pa x.c> and E<.Pa xs.c> as before, without using or "
"affecting any E<.Pa strings> file in the same directory."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:120
msgid ""
"It may be useful to run E<.Nm> after the C preprocessor if any macro "
"definitions yield strings or if there is conditional code which contains "
"strings which may not, in fact, be needed.  An appropriate command sequence "
"for running E<.Nm> after the C preprocessor is:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:125
#, no-wrap
msgid ""
"cc -E name.c | xstr -c -\n"
"cc -c x.c\n"
"mv x.o name.o\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:136
msgid ""
"The E<.Nm> utility does not touch the file E<.Pa strings> unless new items "
"are added, thus E<.Xr make 1> can avoid remaking E<.Pa xs.o> unless truly "
"necessary."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/xstr/xstr.1:136
#, no-wrap
msgid "FILES"
msgstr ""

#. type: It
#: /usr/src/usr.bin/xstr/xstr.1:138
#, no-wrap
msgid "Pa strings"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:140
msgid "data base of strings"
msgstr ""

#. type: It
#: /usr/src/usr.bin/xstr/xstr.1:140
#, no-wrap
msgid "Pa x.c"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:142
msgid "massaged C source"
msgstr ""

#. type: It
#: /usr/src/usr.bin/xstr/xstr.1:142
#, no-wrap
msgid "Pa xs.c"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:145
msgid "C source for definition of array E<.Va xstr>"
msgstr ""

#. type: It
#: /usr/src/usr.bin/xstr/xstr.1:145
#, no-wrap
msgid "Pa /tmp/xs*"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:150
msgid "temporary file when E<.Dq Li \"xstr name\"> does not touch E<.Pa strings>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/xstr/xstr.1:151
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:153
msgid "E<.Xr mkstr 1>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/xstr/xstr.1:153
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:158
msgid "The E<.Nm> command appeared in E<.Bx 3.0>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/xstr/xstr.1:158
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/xstr/xstr.1:163
msgid ""
"If a string is a suffix of another string in the data base, but the shorter "
"string is seen first by E<.Nm> both strings will be placed in the data base, "
"when just placing the longer one there will do."
msgstr ""
