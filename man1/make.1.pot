# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/contrib/bmake/make.1:32
#, no-wrap
msgid "December 5, 2018"
msgstr ""

#. type: Dt
#: /usr/src/contrib/bmake/make.1:33
#, no-wrap
msgid "MAKE 1"
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:35
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:37
msgid "E<.Nm make>"
msgstr ""

#. type: Nd
#: /usr/src/contrib/bmake/make.1:37
#, no-wrap
msgid "maintain program dependencies"
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:38
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:54
msgid ""
"E<.Nm> E<.Op Fl BeikNnqrstWwX> E<.Op Fl C Ar directory> E<.Op Fl D Ar "
"variable> E<.Op Fl d Ar flags> E<.Op Fl f Ar makefile> E<.Op Fl I Ar "
"directory> E<.Op Fl J Ar private> E<.Op Fl j Ar max_jobs> E<.Op Fl m Ar "
"directory> E<.Op Fl T Ar file> E<.Op Fl V Ar variable> E<.Op Fl v Ar "
"variable> E<.Op Ar variable=value> E<.Op Ar target ...>"
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:54
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:72
msgid ""
"E<.Nm> is a program designed to simplify the maintenance of other programs.  "
"Its input is a list of specifications as to the files upon which programs "
"and other files depend.  If no E<.Fl f Ar makefile> makefile option is "
"given, E<.Nm> will try to open E<.Ql Pa makefile> then E<.Ql Pa Makefile> in "
"order to find the specifications.  If the file E<.Ql Pa .depend> exists, it "
"is read (see E<.Xr mkdep 1>)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:78
msgid ""
"This manual page is intended as a reference document only.  For a more "
"thorough description of E<.Nm> and makefiles, please refer to E<.%T \"PMake "
"\\- A Tutorial\">."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:83
msgid ""
"E<.Nm> will prepend the contents of the E<.Va MAKEFLAGS> environment "
"variable to the command line arguments before parsing them."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:85
msgid "The options are as follows:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:86
#, no-wrap
msgid "Fl B"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:89
msgid ""
"Try to be backwards compatible by executing a single shell per command and "
"by executing the commands to make the sources of a dependency line in "
"sequence."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:89
#, no-wrap
msgid "Fl C Ar directory"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:99
msgid ""
"Change to E<.Ar directory> before reading the makefiles or doing anything "
"else.  If multiple E<.Fl C> options are specified, each is interpreted "
"relative to the previous one: E<.Fl C Pa / Fl C Pa etc> is equivalent to "
"E<.Fl C Pa /etc>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:99
#, no-wrap
msgid "Fl D Ar variable"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:103
msgid "Define E<.Ar variable> to be 1, in the global context."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:103
#, no-wrap
msgid "Fl d Ar [-]flags"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:121
msgid ""
"Turn on debugging, and specify which portions of E<.Nm> are to print "
"debugging information.  Unless the flags are preceded by E<.Ql \\-> they are "
"added to the E<.Va MAKEFLAGS> environment variable and will be processed by "
"any child make processes.  By default, debugging information is printed to "
"standard error, but this can be changed using the E<.Ar F> debugging flag.  "
"The debugging output is always unbuffered; in addition, if debugging is "
"enabled but debugging output is not directed to standard output, then the "
"standard output is line buffered.  E<.Ar Flags> is one or more of the "
"following:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:122
#, no-wrap
msgid "Ar A"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:125
msgid ""
"Print all possible debugging information; equivalent to specifying all of "
"the debugging flags."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:125
#, no-wrap
msgid "Ar a"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:127
msgid "Print debugging information about archive searching and caching."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:127
#, no-wrap
msgid "Ar C"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:129
msgid "Print debugging information about current working directory."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:129
#, no-wrap
msgid "Ar c"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:131
msgid "Print debugging information about conditional evaluation."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:131
#, no-wrap
msgid "Ar d"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:133
msgid "Print debugging information about directory searching and caching."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:133
#, no-wrap
msgid "Ar e"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:135
msgid "Print debugging information about failed commands and targets."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:135
#, no-wrap
msgid "Ar F Ns Oo Sy \\&+ Oc Ns Ar filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:160
msgid ""
"Specify where debugging output is written.  This must be the last flag, "
"because it consumes the remainder of the argument.  If the character "
"immediately after the E<.Ql F> flag is E<.Ql \\&+>, then the file will be "
"opened in append mode; otherwise the file will be overwritten.  If the file "
"name is E<.Ql stdout> or E<.Ql stderr> then debugging output will be written "
"to the standard output or standard error output file descriptors "
"respectively (and the E<.Ql \\&+> option has no effect).  Otherwise, the "
"output will be written to the named file.  If the file name ends E<.Ql .%d> "
"then the E<.Ql %d> is replaced by the pid."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:160
#, no-wrap
msgid "Ar f"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:162
msgid "Print debugging information about loop evaluation."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:162
#, no-wrap
msgid "Ar g1"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:164
msgid "Print the input graph before making anything."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:164
#, no-wrap
msgid "Ar g2"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:167
msgid "Print the input graph after making everything, or before exiting on error."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:167
#, no-wrap
msgid "Ar g3"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:169
msgid "Print the input graph before exiting on error."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:169
#, no-wrap
msgid "Ar j"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:171
msgid "Print debugging information about running multiple shells."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:171
#, no-wrap
msgid "Ar l"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:176
msgid ""
"Print commands in Makefiles regardless of whether or not they are prefixed "
"by E<.Ql @> or other \"quiet\" flags.  Also known as \"loud\" behavior."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:176
#, no-wrap
msgid "Ar M"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:178
msgid "Print debugging information about \"meta\" mode decisions about targets."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:178
#, no-wrap
msgid "Ar m"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:181
msgid ""
"Print debugging information about making targets, including modification "
"dates."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:181
#, no-wrap
msgid "Ar n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:201
msgid ""
"Don't delete the temporary command scripts created when running commands.  "
"These temporary scripts are created in the directory referred to by the "
"E<.Ev TMPDIR> environment variable, or in E<.Pa /tmp> if E<.Ev TMPDIR> is "
"unset or set to the empty string.  The temporary scripts are created by "
"E<.Xr mkstemp 3>, and have names of the form E<.Pa makeXXXXXX>.  E<.Em "
"NOTE>: This can create many files in E<.Ev TMPDIR> or E<.Pa /tmp>, so use "
"with care."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:201
#, no-wrap
msgid "Ar p"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:203
msgid "Print debugging information about makefile parsing."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:203
#, no-wrap
msgid "Ar s"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:205
msgid "Print debugging information about suffix-transformation rules."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:205
#, no-wrap
msgid "Ar t"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:207
msgid "Print debugging information about target list maintenance."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:207
#, no-wrap
msgid "Ar V"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:213
msgid ""
"Force the E<.Fl V> option to print raw values of variables, overriding the "
"default behavior set via E<.Va .MAKE.EXPAND_VARIABLES>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:213
#, no-wrap
msgid "Ar v"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:215
msgid "Print debugging information about variable assignment."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:215
#, no-wrap
msgid "Ar x"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:219
msgid ""
"Run shell commands with E<.Fl x> so the actual commands are printed as they "
"are executed."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:220
#, no-wrap
msgid "Fl e"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:223
msgid ""
"Specify that environment variables override macro assignments within "
"makefiles."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:223
#, no-wrap
msgid "Fl f Ar makefile"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:232
msgid ""
"Specify a makefile to read instead of the default E<.Ql Pa makefile>.  If "
"E<.Ar makefile> is E<.Ql Fl>, standard input is read.  Multiple makefiles "
"may be specified, and are read in the order specified."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:232
#, no-wrap
msgid "Fl I Ar directory"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:237
msgid ""
"Specify a directory in which to search for makefiles and included "
"makefiles.  The system makefile directory (or directories, see the E<.Fl m> "
"option) is automatically included as part of this list."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:237
#, no-wrap
msgid "Fl i"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:242
msgid ""
"Ignore non-zero exit of shell commands in the makefile.  Equivalent to "
"specifying E<.Ql Fl> before each command line in the makefile."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:242
#, no-wrap
msgid "Fl J Ar private"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:246
msgid "This option should E<.Em not> be specified by the user."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:252
msgid ""
"When the E<.Ar j> option is in use in a recursive build, this option is "
"passed by a make to child makes to allow all the make processes in the build "
"to cooperate to avoid overloading the system."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:252
#, no-wrap
msgid "Fl j Ar max_jobs"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:269
msgid ""
"Specify the maximum number of jobs that E<.Nm> may have running at any one "
"time.  The value is saved in E<.Va .MAKE.JOBS>.  Turns compatibility mode "
"off, unless the E<.Ar B> flag is also specified.  When compatibility mode is "
"off, all commands associated with a target are executed in a single shell "
"invocation as opposed to the traditional one shell invocation per line.  "
"This can break traditional scripts which change directories on each command "
"invocation and then expect to start with a fresh environment on the next "
"line.  It is more efficient to correct the scripts rather than turn "
"backwards compatibility on."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:269
#, no-wrap
msgid "Fl k"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:272
msgid ""
"Continue processing after errors are encountered, but only on those targets "
"that do not depend on the target whose creation caused the error."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:272
#, no-wrap
msgid "Fl m Ar directory"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:287
msgid ""
"Specify a directory in which to search for sys.mk and makefiles included via "
"the E<.Ao Ar file Ac Ns -style> include statement.  The E<.Fl m> option can "
"be used multiple times to form a search path.  This path will override the "
"default system include path: /usr/share/mk.  Furthermore the system include "
"path will be appended to the search path used for E<.Qo Ar file Qc Ns "
"-style> include statements (see the E<.Fl I> option)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:311
msgid ""
"If a file or directory name in the E<.Fl m> argument (or the E<.Ev "
"MAKESYSPATH> environment variable) starts with the string E<.Qq \\&.../> "
"then E<.Nm> will search for the specified file or directory named in the "
"remaining part of the argument string.  The search starts with the current "
"directory of the Makefile and then works upward towards the root of the file "
"system.  If the search is successful, then the resulting directory replaces "
"the E<.Qq \\&.../> specification in the E<.Fl m> argument.  If used, this "
"feature allows E<.Nm> to easily search in the current source tree for "
"customized sys.mk files (e.g., by using E<.Qq \\&.../mk/sys.mk> as an "
"argument)."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:311
#, no-wrap
msgid "Fl n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:315
msgid ""
"Display the commands that would have been executed, but do not actually "
"execute them unless the target depends on the .MAKE special source (see "
"below)."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:315
#, no-wrap
msgid "Fl N"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:319
msgid ""
"Display the commands which would have been executed, but do not actually "
"execute any of them; useful for debugging top-level makefiles without "
"descending into subdirectories."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:319
#, no-wrap
msgid "Fl q"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:322
msgid ""
"Do not execute any commands, but exit 0 if the specified targets are "
"up-to-date and 1, otherwise."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:322
#, no-wrap
msgid "Fl r"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:324
msgid "Do not use the built-in rules specified in the system makefile."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:324
#, no-wrap
msgid "Fl s"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:329
msgid ""
"Do not echo any commands as they are executed.  Equivalent to specifying "
"E<.Ql Ic @> before each command line in the makefile."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:329
#, no-wrap
msgid "Fl T Ar tracefile"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:336
msgid ""
"When used with the E<.Fl j> flag, append a trace record to E<.Ar tracefile> "
"for each job started and completed."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:336
#, no-wrap
msgid "Fl t"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:339
msgid ""
"Rather than re-building a target as specified in the makefile, create it or "
"update its modification time to make it appear up-to-date."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:339
#, no-wrap
msgid "Fl V Ar variable"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:369
msgid ""
"Print the value of E<.Ar variable>.  Do not build any targets.  Multiple "
"instances of this option may be specified; the variables will be printed one "
"per line, with a blank line for each null or undefined variable.  The value "
"printed is extracted from the global context after all makefiles have been "
"read.  By default, the raw variable contents (which may include additional "
"unexpanded variable references) are shown.  If E<.Ar variable> contains a "
"E<.Ql \\&$> then the value will be recursively expanded to its complete "
"resultant text before printing.  The expanded value will also be printed if "
"E<.Va .MAKE.EXPAND_VARIABLES> is set to true and the E<.Fl dV> option has "
"not been used to override it.  Note that loop-local and target-local "
"variables, as well as values taken temporarily by global variables during "
"makefile processing, are not accessible via this option.  The E<.Fl dv> "
"debug mode can be used to see these at the cost of generating substantial "
"extraneous output."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:369
#, no-wrap
msgid "Fl v Ar variable"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:373
msgid "Like E<.Fl V> but the variable is always expanded to its complete value."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:373
#, no-wrap
msgid "Fl W"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:375
msgid "Treat any warnings during makefile parsing as errors."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:375
#, no-wrap
msgid "Fl w"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:377
msgid "Print entering and leaving directory messages, pre and post processing."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:377
#, no-wrap
msgid "Fl X"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:386
msgid ""
"Don't export variables passed on the command line to the environment "
"individually.  Variables passed on the command line are still exported via "
"the E<.Va MAKEFLAGS> environment variable.  This option may be useful on "
"systems which have a small limit on the size of command arguments."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:386
#, no-wrap
msgid "Ar variable=value"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:398
msgid ""
"Set the value of the variable E<.Ar variable> to E<.Ar value>.  Normally, "
"all values passed on the command line are also exported to sub-makes in the "
"environment.  The E<.Fl X> flag disables this behavior.  Variable "
"assignments should follow options for POSIX compatibility but no ordering is "
"enforced."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:403
msgid ""
"There are seven different types of lines in a makefile: file dependency "
"specifications, shell commands, variable assignments, include statements, "
"conditional directives, for loops, and comments."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:409
msgid ""
"In general, lines may be continued from one line to the next by ending them "
"with a backslash E<.Pq Ql \\e>.  The trailing newline character and initial "
"whitespace on the following line are compressed into a single space."
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:409
#, no-wrap
msgid "FILE DEPENDENCY SPECIFICATIONS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:419
msgid ""
"Dependency lines consist of one or more targets, an operator, and zero or "
"more sources.  This creates a relationship where the targets E<.Dq depend> "
"on the sources and are usually created from them.  The exact relationship "
"between the target and the source is determined by the operator that "
"separates them.  The three operators are as follows:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:420
#, no-wrap
msgid "Ic \\&:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:428
msgid ""
"A target is considered out-of-date if its modification time is less than "
"those of any of its sources.  Sources for a target accumulate over "
"dependency lines when this operator is used.  The target is removed if "
"E<.Nm> is interrupted."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:428
#, no-wrap
msgid "Ic \\&!"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:436
msgid ""
"Targets are always re-created, but not until all sources have been examined "
"and re-created as necessary.  Sources for a target accumulate over "
"dependency lines when this operator is used.  The target is removed if "
"E<.Nm> is interrupted."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:436
#, no-wrap
msgid "Ic \\&::"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:445
msgid ""
"If no sources are specified, the target is always re-created.  Otherwise, a "
"target is considered out-of-date if any of its sources has been modified "
"more recently than the target.  Sources for a target do not accumulate over "
"dependency lines when this operator is used.  The target will not be removed "
"if E<.Nm> is interrupted."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:465
msgid ""
"Targets and sources may contain the shell wildcard values E<.Ql \\&?>, E<.Ql "
"*>, E<.Ql []>, and E<.Ql {}>.  The values E<.Ql \\&?>, E<.Ql *>, and E<.Ql "
"[]> may only be used as part of the final component of the target or source, "
"and must be used to describe existing files.  The value E<.Ql {}> need not "
"necessarily be used to describe existing files.  Expansion is in directory "
"order, not alphabetically as done in the shell."
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:465
#, no-wrap
msgid "SHELL COMMANDS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:480
msgid ""
"Each target may have associated with it one or more lines of shell commands, "
"normally used to create the target.  Each of the lines in this script E<.Em "
"must> be preceded by a tab.  (For historical reasons, spaces are not "
"accepted.)  While targets can appear in many dependency lines if desired, by "
"default only one of these rules may be followed by a creation script.  If "
"the E<.Ql Ic \\&::> operator is used, however, all rules may include scripts "
"and the scripts are executed in the order found."
msgstr ""

#.  The escaped newline is retained and passed to the shell, which
#.  normally ignores it.
#.  However, the tab at the beginning of the following line is removed.
#. type: Plain text
#: /usr/src/contrib/bmake/make.1:508
msgid ""
"Each line is treated as a separate shell command, unless the end of line is "
"escaped with a backslash E<.Pq Ql \\e> in which case that line and the next "
"are combined.  If the first characters of the command are any combination of "
"E<.Ql Ic @>, E<.Ql Ic +>, or E<.Ql Ic \\->, the command is treated "
"specially.  A E<.Ql Ic @> causes the command not to be echoed before it is "
"executed.  A E<.Ql Ic +> causes the command to be executed even when E<.Fl "
"n> is given.  This is similar to the effect of the .MAKE special source, "
"except that the effect can be limited to a single line of a script.  A E<.Ql "
"Ic \\-> in compatibility mode causes any non-zero exit status of the command "
"line to be ignored."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:530
msgid ""
"When E<.Nm> is run in jobs mode with E<.Fl j Ar max_jobs>, the entire script "
"for the target is fed to a single instance of the shell.  In compatibility "
"(non-jobs) mode, each command is run in a separate process.  If the command "
"contains any shell meta characters E<.Pq Ql "
"#=|^(){};&E<lt>E<gt>*?[]:$`\\e\\en> it will be passed to the shell; "
"otherwise E<.Nm> will attempt direct execution.  If a line starts with E<.Ql "
"Ic \\-> and the shell has ErrCtl enabled then failure of the command line "
"will be ignored as in compatibility mode.  Otherwise E<.Ql Ic \\-> affects "
"the entire job; the script will stop at the first command line that fails, "
"but the target will not be deemed to have failed."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:543
msgid ""
"Makefiles should be written so that the mode of E<.Nm> operation does not "
"change their behavior.  For example, any command which needs to use E<.Dq "
"cd> or E<.Dq chdir> without potentially changing the directory for "
"subsequent commands should be put in parentheses so it executes in a "
"subshell.  To force the use of one shell, escape the line breaks so as to "
"make the whole script one command.  For example:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:548
#, no-wrap
msgid ""
"avoid-chdir-side-effects:\n"
"\t@echo Building $@ in `pwd`\n"
"\t@(cd ${.CURDIR} && ${MAKE} $@)\n"
"\t@echo Back in `pwd`\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:553
#, no-wrap
msgid ""
"ensure-one-shell-regardless-of-mode:\n"
"\t@echo Building $@ in `pwd`; \\e\n"
"\t(cd ${.CURDIR} && ${MAKE} $@); \\e\n"
"\techo Back in `pwd`\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:563
msgid ""
"Since E<.Nm> will E<.Xr chdir 2> to E<.Ql Va .OBJDIR> before executing any "
"targets, each child process starts with that as its current working "
"directory."
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:563
#, no-wrap
msgid "VARIABLE ASSIGNMENTS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:566
msgid ""
"Variables in make are much like variables in the shell, and, by tradition, "
"consist of all upper-case letters."
msgstr ""

#. type: Ss
#: /usr/src/contrib/bmake/make.1:566
#, no-wrap
msgid "Variable assignment modifiers"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:569
msgid ""
"The five operators that can be used to assign values to variables are as "
"follows:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:570
#, no-wrap
msgid "Ic \\&="
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:573
msgid "Assign the value to the variable.  Any previous value is overridden."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:573
#, no-wrap
msgid "Ic \\&+="
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:575
msgid "Append the value to the current value of the variable."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:575
#, no-wrap
msgid "Ic \\&?="
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:577
msgid "Assign the value to the variable if it is not already defined."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:577
#, no-wrap
msgid "Ic \\&:="
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:586
msgid ""
"Assign with expansion, i.e. expand the value before assigning it to the "
"variable.  Normally, expansion is not done until the variable is "
"referenced.  E<.Em NOTE>: References to undefined variables are E<.Em not> "
"expanded.  This can cause problems when variable modifiers are used."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:586
#, no-wrap
msgid "Ic \\&!="
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:590
msgid ""
"Expand the value and pass it to the shell for execution and assign the "
"result to the variable.  Any newlines in the result are replaced with "
"spaces."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:596
msgid ""
"Any white-space before the assigned E<.Ar value> is removed; if the value is "
"being appended, a single space is inserted between the previous contents of "
"the variable and the appended value."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:608
msgid ""
"Variables are expanded by surrounding the variable name with either curly "
"braces E<.Pq Ql {}> or parentheses E<.Pq Ql ()> and preceding it with a "
"dollar sign E<.Pq Ql \\&$>.  If the variable name contains only a single "
"letter, the surrounding braces or parentheses are not required.  This "
"shorter form is not recommended."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:612
msgid ""
"If the variable name contains a dollar, then the name itself is expanded "
"first.  This allows almost arbitrary variable names, however names "
"containing dollar, braces, parenthesis, or whitespace are really best "
"avoided!"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:616
msgid ""
"If the result of expanding a variable contains a dollar sign E<.Pq Ql \\&$> "
"the string is expanded again."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:619
msgid ""
"Variable substitution occurs at three distinct times, depending on where the "
"variable is being used."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:622
msgid "Variables in dependency lines are expanded as the line is read."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:625
msgid "Variables in shell commands are expanded when the shell command is executed."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:630
msgid ""
"E<.Dq .for> loop index variables are expanded on each loop iteration.  Note "
"that other variables are not expanded inside loops so the following example "
"code:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:637
#, no-wrap
msgid ""
"E<.Dv .for i in 1 2 3>\n"
"a+=     ${i}\n"
"j=      ${i}\n"
"b+=     ${j}\n"
"E<.Dv .endfor>\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:641
#, no-wrap
msgid ""
"all:\n"
"\t@echo ${a}\n"
"\t@echo ${b}\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:644
msgid "will print:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:647
#, no-wrap
msgid ""
"1 2 3\n"
"3 3 3\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:658
msgid ""
"Because while ${a} contains E<.Dq 1 2 3> after the loop is executed, ${b} "
"contains E<.Dq ${j} ${j} ${j}> which expands to E<.Dq 3 3 3> since after the "
"loop completes ${j} contains E<.Dq 3>."
msgstr ""

#. type: Ss
#: /usr/src/contrib/bmake/make.1:659
#, no-wrap
msgid "Variable classes"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:662
msgid ""
"The four different classes of variables (in order of increasing precedence)  "
"are:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:663
#, no-wrap
msgid "Environment variables"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:667
msgid "Variables defined as part of E<.Nm Ns 's> environment."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:667
#, no-wrap
msgid "Global variables"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:669
msgid "Variables defined in the makefile or in included makefiles."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:669
#, no-wrap
msgid "Command line variables"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:671
msgid "Variables defined as part of the command line."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:671
#, no-wrap
msgid "Local variables"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:673
msgid "Variables that are defined specific to a certain target."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:679
msgid ""
"Local variables are all built in and their values vary magically from target "
"to target.  It is not currently possible to define new local variables.  The "
"seven local variables are as follows:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:680
#, no-wrap
msgid "Va .ALLSRC"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:683
msgid "The list of all sources for this target; also known as E<.Ql Va \\&E<gt>>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:683
#, no-wrap
msgid "Va .ARCHIVE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:686
msgid "The name of the archive file; also known as E<.Ql Va \\&!>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:686
#, no-wrap
msgid "Va .IMPSRC"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:693
msgid ""
"In suffix-transformation rules, the name/path of the source from which the "
"target is to be transformed (the E<.Dq implied> source); also known as E<.Ql "
"Va \\&E<lt>>.  It is not defined in explicit rules."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:693
#, no-wrap
msgid "Va .MEMBER"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:696
msgid "The name of the archive member; also known as E<.Ql Va %>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:696
#, no-wrap
msgid "Va .OODATE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:700
msgid ""
"The list of sources for this target that were deemed out-of-date; also known "
"as E<.Ql Va \\&?>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:700
#, no-wrap
msgid "Va .PREFIX"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:707
msgid ""
"The file prefix of the target, containing only the file portion, no suffix "
"or preceding directory components; also known as E<.Ql Va *>.  The suffix "
"must be one of the known suffixes declared with E<.Ic .SUFFIXES> or it will "
"not be recognized."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:707
#, no-wrap
msgid "Va .TARGET"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:713
msgid ""
"The name of the target; also known as E<.Ql Va @>.  For compatibility with "
"other makes this is an alias for E<.Ic .ARCHIVE> in archive member rules."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:727
msgid ""
"The shorter forms E<.Ql ( Va E<gt>>, E<.Ql Va \\&!>, E<.Ql Va E<lt>>, E<.Ql "
"Va %>, E<.Ql Va \\&?>, E<.Ql Va *>, and E<.Ql Va @>)  are permitted for "
"backward compatibility with historical makefiles and legacy POSIX make and "
"are not recommended."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:742
msgid ""
"Variants of these variables with the punctuation followed immediately by "
"E<.Ql D> or E<.Ql F>, e.g.  E<.Ql Va $(@D)>, are legacy forms equivalent to "
"using the E<.Ql :H> and E<.Ql :T> modifiers.  These forms are accepted for "
"compatibility with E<.At V> makefiles and POSIX but are not recommended."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:751
msgid ""
"Four of the local variables may be used in sources on dependency lines "
"because they expand to the proper value for each target on the line.  These "
"variables are E<.Ql Va .TARGET>, E<.Ql Va .PREFIX>, E<.Ql Va .ARCHIVE>, and "
"E<.Ql Va .MEMBER>."
msgstr ""

#. type: Ss
#: /usr/src/contrib/bmake/make.1:751
#, no-wrap
msgid "Additional built-in variables"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:755
msgid "In addition, E<.Nm> sets or knows about the following variables:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:756
#, no-wrap
msgid "Va \\&$"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:763
msgid ""
"A single dollar sign E<.Ql \\&$>, i.e.  E<.Ql \\&$$> expands to a single "
"dollar sign."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:763
#, no-wrap
msgid "Va .ALLTARGETS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:767
msgid ""
"The list of all targets encountered in the Makefile.  If evaluated during "
"Makefile parsing, lists only those targets encountered thus far."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:767
#, no-wrap
msgid "Va .CURDIR"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:774
msgid ""
"A path to the directory where E<.Nm> was executed.  Refer to the description "
"of E<.Ql Ev PWD> for more details."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:774
#, no-wrap
msgid "Va .INCLUDEDFROMDIR"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:776
msgid "The directory of the file this Makefile was included from."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:776
#, no-wrap
msgid "Va .INCLUDEDFROMFILE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:778
msgid "The filename of the file this Makefile was included from."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:778
#, no-wrap
msgid "Ev MAKE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:793
msgid ""
"The name that E<.Nm> was executed with E<.Pq Va argv[0]>.  For compatibility "
"E<.Nm> also sets E<.Va .MAKE> with the same value.  The preferred variable "
"to use is the environment variable E<.Ev MAKE> because it is more compatible "
"with other versions of E<.Nm> and cannot be confused with the special target "
"with the same name."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:793
#, no-wrap
msgid "Va .MAKE.ALWAYS_PASS_JOB_QUEUE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:804
msgid ""
"Tells E<.Nm> whether to pass the descriptors of the job token queue even if "
"the target is not tagged with E<.Ic .MAKE> The default is E<.Ql Pa yes> for "
"backwards compatability with E<.Fx 9.0> and earlier."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:804
#, no-wrap
msgid "Va .MAKE.DEPENDFILE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:808
msgid ""
"Names the makefile (default E<.Ql Pa .depend>)  from which generated "
"dependencies are read."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:808
#, no-wrap
msgid "Va .MAKE.EXPAND_VARIABLES"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:816
msgid ""
"A boolean that controls the default behavior of the E<.Fl V> option.  If "
"true, variable values printed with E<.Fl V> are fully expanded; if false, "
"the raw variable contents (which may include additional unexpanded variable "
"references) are shown."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:816
#, no-wrap
msgid "Va .MAKE.EXPORTED"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:819
msgid "The list of variables exported by E<.Nm>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:819
#, no-wrap
msgid "Va .MAKE.JOBS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:823
msgid "The argument to the E<.Fl j> option."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:823
#, no-wrap
msgid "Va .MAKE.JOB.PREFIX"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:835
msgid ""
"If E<.Nm> is run with E<.Ar j> then output for each target is prefixed with "
"a token E<.Ql --- target ---> the first part of which can be controlled via "
"E<.Va .MAKE.JOB.PREFIX>.  If E<.Va .MAKE.JOB.PREFIX> is empty, no token is "
"printed."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:841
msgid ""
"For example: E<.Li .MAKE.JOB.PREFIX=${.newline}---${.MAKE:T}[${.MAKE.PID}]> "
"would produce tokens like E<.Ql ---make[1234] target ---> making it easier "
"to track the degree of parallelism being achieved."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:841
#, no-wrap
msgid "Ev MAKEFLAGS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:856
msgid ""
"The environment variable E<.Ql Ev MAKEFLAGS> may contain anything that may "
"be specified on E<.Nm Ns 's> command line.  Anything specified on E<.Nm Ns "
"'s> command line is appended to the E<.Ql Ev MAKEFLAGS> variable which is "
"then entered into the environment for all programs which E<.Nm> executes."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:856
#, no-wrap
msgid "Va .MAKE.LEVEL"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:867
msgid ""
"The recursion depth of E<.Nm>.  The initial instance of E<.Nm> will be 0, "
"and an incremented value is put into the environment to be seen by the next "
"generation.  This allows tests like: E<.Li .if ${.MAKE.LEVEL} == 0> to "
"protect things which should only be evaluated in the initial instance of "
"E<.Nm>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:867
#, no-wrap
msgid "Va .MAKE.MAKEFILE_PREFERENCE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:875
msgid ""
"The ordered list of makefile names (default E<.Ql Pa makefile>, E<.Ql Pa "
"Makefile>)  that E<.Nm> will look for."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:875
#, no-wrap
msgid "Va .MAKE.MAKEFILES"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:880
msgid ""
"The list of makefiles read by E<.Nm>, which is useful for tracking "
"dependencies.  Each makefile is recorded only once, regardless of the number "
"of times read."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:880
#, no-wrap
msgid "Va .MAKE.MODE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:886
msgid ""
"Processed after reading all makefiles.  Can affect the mode that E<.Nm> runs "
"in.  It can contain a number of keywords:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:887
#, no-wrap
msgid "Pa compat"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:893
msgid "Like E<.Fl B>, puts E<.Nm> into \"compat\" mode."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:893
#, no-wrap
msgid "Pa meta"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:902
msgid ""
"Puts E<.Nm> into \"meta\" mode, where meta files are created for each target "
"to capture the command run, the output generated and if E<.Xr filemon 4> is "
"available, the system calls which are of interest to E<.Nm>.  The captured "
"output can be very useful when diagnosing errors."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:902
#, no-wrap
msgid "Pa curdirOk= Ar bf"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:910
msgid ""
"Normally E<.Nm> will not create .meta files in E<.Ql Va .CURDIR>.  This can "
"be overridden by setting E<.Va bf> to a value which represents True."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:910
#, no-wrap
msgid "Pa missing-meta= Ar bf"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:914
msgid ""
"If E<.Va bf> is True, then a missing .meta file makes the target "
"out-of-date."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:914
#, no-wrap
msgid "Pa missing-filemon= Ar bf"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:918
msgid ""
"If E<.Va bf> is True, then missing filemon data makes the target "
"out-of-date."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:918
#, no-wrap
msgid "Pa nofilemon"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:921
msgid "Do not use E<.Xr filemon 4>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:921
#, no-wrap
msgid "Pa env"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:924
msgid ""
"For debugging, it can be useful to include the environment in the .meta "
"file."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:924
#, no-wrap
msgid "Pa verbose"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:929
msgid ""
"If in \"meta\" mode, print a clue about the target being built.  This is "
"useful if the build is otherwise running silently.  The message printed the "
"value of: E<.Va .MAKE.META.PREFIX>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:929
#, no-wrap
msgid "Pa ignore-cmd"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:935
msgid ""
"Some makefiles have commands which are simply not stable.  This keyword "
"causes them to be ignored for determining whether a target is out of date in "
"\"meta\" mode.  See also E<.Ic .NOMETA_CMP>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:935
#, no-wrap
msgid "Pa silent= Ar bf"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:940
msgid ""
"If E<.Va bf> is True, when a .meta file is created, mark the target E<.Ic "
".SILENT>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:941
#, no-wrap
msgid "Va .MAKE.META.BAILIWICK"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:949
msgid ""
"In \"meta\" mode, provides a list of prefixes which match the directories "
"controlled by E<.Nm>.  If a file that was generated outside of E<.Va "
".OBJDIR> but within said bailiwick is missing, the current target is "
"considered out-of-date."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:949
#, no-wrap
msgid "Va .MAKE.META.CREATED"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:954
msgid ""
"In \"meta\" mode, this variable contains a list of all the meta files "
"updated.  If not empty, it can be used to trigger processing of E<.Va "
".MAKE.META.FILES>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:954
#, no-wrap
msgid "Va .MAKE.META.FILES"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:959
msgid ""
"In \"meta\" mode, this variable contains a list of all the meta files used "
"(updated or not).  This list can be used to process the meta files to "
"extract dependency information."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:959
#, no-wrap
msgid "Va .MAKE.META.IGNORE_PATHS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:964
msgid ""
"Provides a list of path prefixes that should be ignored; because the "
"contents are expected to change over time.  The default list includes: E<.Ql "
"Pa /dev /etc /proc /tmp /var/run /var/tmp>"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:964
#, no-wrap
msgid "Va .MAKE.META.IGNORE_PATTERNS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:967
msgid ""
"Provides a list of patterns to match against pathnames.  Ignore any that "
"match."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:967
#, no-wrap
msgid "Va .MAKE.META.IGNORE_FILTER"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:970
msgid ""
"Provides a list of variable modifiers to apply to each pathname.  Ignore if "
"the expansion is an empty string."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:970
#, no-wrap
msgid "Va .MAKE.META.PREFIX"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:973
msgid ""
"Defines the message printed for each meta file updated in \"meta verbose\" "
"mode.  The default value is:"
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:973
#, no-wrap
msgid "Building ${.TARGET:H:tA}/${.TARGET:T}"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:974
#, no-wrap
msgid "Va .MAKEOVERRIDES"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:988
msgid ""
"This variable is used to record the names of variables assigned to on the "
"command line, so that they may be exported as part of E<.Ql Ev MAKEFLAGS>.  "
"This behavior can be disabled by assigning an empty value to E<.Ql Va "
".MAKEOVERRIDES> within a makefile.  Extra variables can be exported from a "
"makefile by appending their names to E<.Ql Va .MAKEOVERRIDES>.  E<.Ql Ev "
"MAKEFLAGS> is re-exported whenever E<.Ql Va .MAKEOVERRIDES> is modified."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:988
#, no-wrap
msgid "Va .MAKE.PATH_FILEMON"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:995
msgid ""
"If E<.Nm> was built with E<.Xr filemon 4> support, this is set to the path "
"of the device node.  This allows makefiles to test for this support."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:995
#, no-wrap
msgid "Va .MAKE.PID"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:998
msgid "The process-id of E<.Nm>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:998
#, no-wrap
msgid "Va .MAKE.PPID"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1001
msgid "The parent process-id of E<.Nm>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1001
#, no-wrap
msgid "Va .MAKE.SAVE_DOLLARS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1014
msgid ""
"value should be a boolean that controls whether E<.Ql $$> are preserved when "
"doing E<.Ql :=> assignments.  The default is false, for backwards "
"compatibility.  Set to true for compatability with other makes.  If set to "
"false, E<.Ql $$> becomes E<.Ql $> per normal evaluation rules."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1014
#, no-wrap
msgid "Va MAKE_PRINT_VAR_ON_ERROR"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1033
msgid ""
"When E<.Nm> stops due to an error, it sets E<.Ql Va .ERROR_TARGET> to the "
"name of the target that failed, E<.Ql Va .ERROR_CMD> to the commands of the "
"failed target, and in \"meta\" mode, it also sets E<.Ql Va .ERROR_CWD> to "
"the E<.Xr getcwd 3>, and E<.Ql Va .ERROR_META_FILE> to the path of the meta "
"file (if any) describing the failed target.  It then prints its name and the "
"value of E<.Ql Va .CURDIR> as well as the value of any variables named in "
"E<.Ql Va MAKE_PRINT_VAR_ON_ERROR>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1033
#, no-wrap
msgid "Va .newline"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1042
msgid ""
"This variable is simply assigned a newline character as its value.  This "
"allows expansions using the E<.Cm \\&:@> modifier to put a newline between "
"iterations of the loop rather than a space.  For example, the printing of "
"E<.Ql Va MAKE_PRINT_VAR_ON_ERROR> could be done as "
"${MAKE_PRINT_VAR_ON_ERROR:@v@$v='${$v}'${.newline}@}."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1042
#, no-wrap
msgid "Va .OBJDIR"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1047
msgid ""
"A path to the directory where the targets are built.  Its value is "
"determined by trying to E<.Xr chdir 2> to the following directories in order "
"and using the first match:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1050
msgid "E<.Ev ${MAKEOBJDIRPREFIX}${.CURDIR}>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1054
msgid ""
"(Only if E<.Ql Ev MAKEOBJDIRPREFIX> is set in the environment or on the "
"command line.)"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1056
msgid "E<.Ev ${MAKEOBJDIR}>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1060
msgid ""
"(Only if E<.Ql Ev MAKEOBJDIR> is set in the environment or on the command "
"line.)"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1062
msgid "E<.Ev ${.CURDIR} Ns Pa /obj. Ns Ev ${MACHINE}>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1064
msgid "E<.Ev ${.CURDIR} Ns Pa /obj>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1066
msgid "E<.Pa /usr/obj/ Ns Ev ${.CURDIR}>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1068
msgid "E<.Ev ${.CURDIR}>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1072
msgid ""
"Variable expansion is performed on the value before it's used, so "
"expressions such as"
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:1072
#, no-wrap
msgid "${.CURDIR:S,^/usr/src,/var/obj,}"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1076
msgid "may be used.  This is especially useful with E<.Ql Ev MAKEOBJDIR>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1089
msgid ""
"E<.Ql Va .OBJDIR> may be modified in the makefile via the special target "
"E<.Ql Ic .OBJDIR>.  In all cases, E<.Nm> will E<.Xr chdir 2> to the "
"specified directory if it exists, and set E<.Ql Va .OBJDIR> and E<.Ql Ev "
"PWD> to that directory before executing any targets."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1090
#, no-wrap
msgid "Va .PARSEDIR"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1094
msgid "A path to the directory of the current E<.Ql Pa Makefile> being parsed."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1094
#, no-wrap
msgid "Va .PARSEFILE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1106
msgid ""
"The basename of the current E<.Ql Pa Makefile> being parsed.  This variable "
"and E<.Ql Va .PARSEDIR> are both set only while the E<.Ql Pa Makefiles> are "
"being parsed.  If you want to retain their current values, assign them to a "
"variable using assignment with expansion: E<.Pq Ql Cm \\&:=>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1106
#, no-wrap
msgid "Va .PATH"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1113
msgid ""
"A variable that represents the list of directories that E<.Nm> will search "
"for files.  The search list should be updated using the target E<.Ql Va "
".PATH> rather than the variable."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1113
#, no-wrap
msgid "Ev PWD"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1140
msgid ""
"Alternate path to the current directory.  E<.Nm> normally sets E<.Ql Va "
".CURDIR> to the canonical path given by E<.Xr getcwd 3>.  However, if the "
"environment variable E<.Ql Ev PWD> is set and gives a path to the current "
"directory, then E<.Nm> sets E<.Ql Va .CURDIR> to the value of E<.Ql Ev PWD> "
"instead.  This behavior is disabled if E<.Ql Ev MAKEOBJDIRPREFIX> is set or "
"E<.Ql Ev MAKEOBJDIR> contains a variable transform.  E<.Ql Ev PWD> is set to "
"the value of E<.Ql Va .OBJDIR> for all programs which E<.Nm> executes."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1140
#, no-wrap
msgid "Ev .TARGETS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1142
msgid "The list of targets explicitly specified on the command line, if any."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1142
#, no-wrap
msgid "Ev VPATH"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1152
msgid ""
"Colon-separated E<.Pq Dq \\&:> lists of directories that E<.Nm> will search "
"for files.  The variable is supported for compatibility with old make "
"programs only, use E<.Ql Va .PATH> instead."
msgstr ""

#. type: Ss
#: /usr/src/contrib/bmake/make.1:1153
#, no-wrap
msgid "Variable modifiers"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1159
msgid ""
"Variable expansion may be modified to select or modify each word of the "
"variable (where a E<.Dq word> is white-space delimited sequence of "
"characters).  The general format of a variable expansion is as follows:"
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:1160
#, no-wrap
msgid "${variable[:modifier[:...]]}"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1165
msgid ""
"Each modifier begins with a colon, which may be escaped with a backslash "
"E<.Pq Ql \\e>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1167
msgid "A set of modifiers can be specified via a variable, as follows:"
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:1168
#, no-wrap
msgid "modifier_variable=modifier[:...]"
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:1169
#, no-wrap
msgid "${variable:${modifier_variable}[:...]}"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1177
msgid ""
"In this case the first modifier in the modifier_variable does not start with "
"a colon, since that must appear in the referencing variable.  If any of the "
"modifiers in the modifier_variable contain a dollar sign E<.Pq Ql $>, these "
"must be doubled to avoid early expansion."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1179
msgid "The supported modifiers are:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1180
#, no-wrap
msgid "Cm \\&:E"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1182
msgid "Replaces each word in the variable with its suffix."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1182
#, no-wrap
msgid "Cm \\&:H"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1184
msgid "Replaces each word in the variable with everything but the last component."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1184
#, no-wrap
msgid "Cm \\&:M Ns Ar pattern"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1198
msgid ""
"Select only those words that match E<.Ar pattern>.  The standard shell "
"wildcard characters E<.Pf ( Ql *>, E<.Ql \\&?>, and E<.Ql Oo Oc>)  may be "
"used.  The wildcard characters may be escaped with a backslash E<.Pq Ql "
"\\e>.  As a consequence of the way values are split into words, matched, and "
"then joined, a construct like"
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:1198
#, no-wrap
msgid "${VAR:M*}"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1202
msgid ""
"will normalize the inter-word spacing, removing all leading and trailing "
"space, and converting multiple consecutive spaces to single spaces."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1203
#, no-wrap
msgid "Cm \\&:N Ns Ar pattern"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1208
msgid ""
"This is identical to E<.Ql Cm \\&:M>, but selects all words which do not "
"match E<.Ar pattern>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1208
#, no-wrap
msgid "Cm \\&:O"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1214
msgid ""
"Order every word in variable alphabetically.  To sort words in reverse order "
"use the E<.Ql Cm \\&:O:[-1..1]> combination of modifiers."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1214
#, no-wrap
msgid "Cm \\&:Ox"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1221
msgid ""
"Randomize words in variable.  The results will be different each time you "
"are referring to the modified variable; use the assignment with expansion "
"E<.Pq Ql Cm \\&:=> to prevent such behavior.  For example,"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1225
#, no-wrap
msgid ""
"LIST=\t\t\tuno due tre quattro\n"
"RANDOM_LIST=\t\t${LIST:Ox}\n"
"STATIC_RANDOM_LIST:=\t${LIST:Ox}\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1231
#, no-wrap
msgid ""
"all:\n"
"\t@echo \"${RANDOM_LIST}\"\n"
"\t@echo \"${RANDOM_LIST}\"\n"
"\t@echo \"${STATIC_RANDOM_LIST}\"\n"
"\t@echo \"${STATIC_RANDOM_LIST}\"\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1233
msgid "may produce output similar to:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1238
#, no-wrap
msgid ""
"quattro due tre uno\n"
"tre due quattro uno\n"
"due uno quattro tre\n"
"due uno quattro tre\n"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1239
#, no-wrap
msgid "Cm \\&:Q"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1242
msgid ""
"Quotes every shell meta-character in the variable, so that it can be passed "
"safely to the shell."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1242
#, no-wrap
msgid "Cm \\&:q"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1250
msgid ""
"Quotes every shell meta-character in the variable, and also doubles E<.Sq $> "
"characters so that it can be passed safely through recursive invocations of "
"E<.Nm>.  This is equivalent to: E<.Sq \\&:S/\\e\\&$/&&/g:Q>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1250
#, no-wrap
msgid "Cm \\&:R"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1252
msgid "Replaces each word in the variable with everything but its suffix."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1252
#, no-wrap
msgid "Cm \\&:range[=count]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1256
msgid ""
"The value is an integer sequence representing the words of the original "
"value, or the supplied E<.Va count>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1256
#, no-wrap
msgid "Cm \\&:gmtime[=utc]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1264
msgid ""
"The value is a format string for E<.Xr strftime 3>, using E<.Xr gmtime 3>.  "
"If a E<.Va utc> value is not provided or is 0, the current time is used."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1264
#, no-wrap
msgid "Cm \\&:hash"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1266
msgid "Compute a 32-bit hash of the value and encode it as hex digits."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1266
#, no-wrap
msgid "Cm \\&:localtime[=utc]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1274
msgid ""
"The value is a format string for E<.Xr strftime 3>, using E<.Xr localtime "
"3>.  If a E<.Va utc> value is not provided or is 0, the current time is "
"used."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1274
#, no-wrap
msgid "Cm \\&:tA"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1278
msgid ""
"Attempt to convert variable to an absolute path using E<.Xr realpath 3>, if "
"that fails, the value is unchanged."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1278
#, no-wrap
msgid "Cm \\&:tl"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1280
msgid "Converts variable to lower-case letters."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1280
#, no-wrap
msgid "Cm \\&:ts Ns Ar c"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1288
msgid ""
"Words in the variable are normally separated by a space on expansion.  This "
"modifier sets the separator to the character E<.Ar c>.  If E<.Ar c> is "
"omitted, then no separator is used.  The common escapes (including octal "
"numeric codes), work as expected."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1288
#, no-wrap
msgid "Cm \\&:tu"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1290
msgid "Converts variable to upper-case letters."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1290
#, no-wrap
msgid "Cm \\&:tW"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1295
msgid ""
"Causes the value to be treated as a single word (possibly containing "
"embedded white space).  See also E<.Ql Cm \\&:[*]>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1295
#, no-wrap
msgid "Cm \\&:tw"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1301
msgid ""
"Causes the value to be treated as a sequence of words delimited by white "
"space.  See also E<.Ql Cm \\&:[@]>.  E<.Sm off>"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1301
#, no-wrap
msgid "Cm \\&:S No \\&/ Ar old_string No \\&/ Ar new_string No \\&/ Op Cm 1gW"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1346
msgid ""
"E<.Sm on> Modify the first occurrence of E<.Ar old_string> in the variable's "
"value, replacing it with E<.Ar new_string>.  If a E<.Ql g> is appended to "
"the last slash of the pattern, all occurrences in each word are replaced.  "
"If a E<.Ql 1> is appended to the last slash of the pattern, only the first "
"word is affected.  If a E<.Ql W> is appended to the last slash of the "
"pattern, then the value is treated as a single word (possibly containing "
"embedded white space).  If E<.Ar old_string> begins with a caret E<.Pq Ql "
"^>, E<.Ar old_string> is anchored at the beginning of each word.  If E<.Ar "
"old_string> ends with a dollar sign E<.Pq Ql \\&$>, it is anchored at the "
"end of each word.  Inside E<.Ar new_string>, an ampersand E<.Pq Ql &> is "
"replaced by E<.Ar old_string> (without any E<.Ql ^> or E<.Ql \\&$>).  Any "
"character may be used as a delimiter for the parts of the modifier string.  "
"The anchoring, ampersand and delimiter characters may be escaped with a "
"backslash E<.Pq Ql \\e>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1356 /usr/src/contrib/bmake/make.1:1453
msgid ""
"Variable expansion occurs in the normal fashion inside both E<.Ar "
"old_string> and E<.Ar new_string> with the single exception that a backslash "
"is used to prevent the expansion of a dollar sign E<.Pq Ql \\&$>, not a "
"preceding dollar sign as is usual.  E<.Sm off>"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1356
#, no-wrap
msgid "Cm \\&:C No \\&/ Ar pattern No \\&/ Ar replacement No \\&/ Op Cm 1gW"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1393
msgid ""
"E<.Sm on> The E<.Cm \\&:C> modifier is just like the E<.Cm \\&:S> modifier "
"except that the old and new strings, instead of being simple strings, are an "
"extended regular expression (see E<.Xr regex 3>)  string E<.Ar pattern> and "
"an E<.Xr ed 1 Ns \\-style> string E<.Ar replacement>.  Normally, the first "
"occurrence of the pattern E<.Ar pattern> in each word of the value is "
"substituted with E<.Ar replacement>.  The E<.Ql 1> modifier causes the "
"substitution to apply to at most one word; the E<.Ql g> modifier causes the "
"substitution to apply to as many instances of the search pattern E<.Ar "
"pattern> as occur in the word or words it is found in; the E<.Ql W> modifier "
"causes the value to be treated as a single word (possibly containing "
"embedded white space).  Note that E<.Ql 1> and E<.Ql g> are orthogonal; the "
"former specifies whether multiple words are potentially affected, the latter "
"whether multiple substitutions can potentially occur within each affected "
"word."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1402
msgid ""
"As for the E<.Cm \\&:S> modifier, the E<.Ar pattern> and E<.Ar replacement> "
"are subjected to variable expansion before being parsed as regular "
"expressions."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1402
#, no-wrap
msgid "Cm \\&:T"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1404
msgid "Replaces each word in the variable with its last component."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1404
#, no-wrap
msgid "Cm \\&:u"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1408
msgid "Remove adjacent duplicate words (like E<.Xr uniq 1>).  E<.Sm off>"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1408
#, no-wrap
msgid "Cm \\&:\\&? Ar true_string Cm \\&: Ar false_string"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1419
msgid ""
"E<.Sm on> If the variable name (not its value), when parsed as a .if "
"conditional expression, evaluates to true, return as its value the E<.Ar "
"true_string>, otherwise return the E<.Ar false_string>.  Since the variable "
"name is used as the expression, \\&:\\&? must be the first modifier after "
"the variable name itself - which will, of course, usually contain variable "
"expansions.  A common error is trying to use expressions like"
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:1419
#, no-wrap
msgid "${NUMBERS:M42:?match:no}"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1422
msgid ""
"which actually tests defined(NUMBERS), to determine is any words match "
"\"42\" you need to use something like:"
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:1422
#, no-wrap
msgid "${\"${NUMBERS:M42}\" != \\(dq\\(dq:?match:no} ."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1423
#, no-wrap
msgid "Ar :old_string=new_string"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1443
msgid ""
"This is the E<.At V> style variable substitution.  It must be the last "
"modifier specified.  If E<.Ar old_string> or E<.Ar new_string> do not "
"contain the pattern matching character E<.Ar %> then it is assumed that they "
"are anchored at the end of each word, so only suffixes or entire words may "
"be replaced.  Otherwise E<.Ar %> is the substring of E<.Ar old_string> to be "
"replaced in E<.Ar new_string>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1453
#, no-wrap
msgid "Cm \\&:@ Ar temp Cm @ Ar string Cm @"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1469
msgid ""
"E<.Sm on> This is the loop expansion mechanism from the OSF Development "
"Environment (ODE) make.  Unlike E<.Cm \\&.for> loops expansion occurs at the "
"time of reference.  Assign E<.Ar temp> to each word in the variable and "
"evaluate E<.Ar string>.  The ODE convention is that E<.Ar temp> should start "
"and end with a period.  For example."
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:1469
#, no-wrap
msgid "${LINKS:@.LINK.@${LN} ${TARGET} ${.LINK.}@}"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1472
msgid "However a single character variable is often more readable:"
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:1472
#, no-wrap
msgid "${MAKE_PRINT_VAR_ON_ERROR:@v@$v='${$v}'${.newline}@}"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1473
#, no-wrap
msgid "Cm \\&:_[=var]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1480
msgid ""
"Save the current variable value in E<.Ql $_> or the named E<.Va var> for "
"later reference.  Example usage:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1484
#, no-wrap
msgid ""
"M_cmpv.units = 1 1000 1000000\n"
"M_cmpv = S,., ,g:_:range:@i@+ $${_:[-$$i]} \\&\\e\n"
"\\e* $${M_cmpv.units:[$$i]}@:S,^,expr 0 ,1:sh\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1486
#, no-wrap
msgid "E<.Dv .if ${VERSION:${M_cmpv}} E<lt> ${3.1.12:L:${M_cmpv}}>\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1494
msgid ""
"Here E<.Ql $_> is used to save the result of the E<.Ql :S> modifier which is "
"later referenced using the index values from E<.Ql :range>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1494
#, no-wrap
msgid "Cm \\&:U Ns Ar newval"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1501
msgid ""
"If the variable is undefined E<.Ar newval> is the value.  If the variable is "
"defined, the existing value is returned.  This is another ODE make feature.  "
"It is handy for setting per-target CFLAGS for instance:"
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:1501
#, no-wrap
msgid "${_${.TARGET:T}_CFLAGS:U${DEF_CFLAGS}}"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1503
msgid "If a value is only required if the variable is undefined, use:"
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:1503
#, no-wrap
msgid "${VAR:D:Unewval}"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1504
#, no-wrap
msgid "Cm \\&:D Ns Ar newval"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1508
msgid "If the variable is defined E<.Ar newval> is the value."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1508
#, no-wrap
msgid "Cm \\&:L"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1510
msgid "The name of the variable is the value."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1510
#, no-wrap
msgid "Cm \\&:P"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1518
msgid ""
"The path of the node which has the same name as the variable is the value.  "
"If no such node exists or its path is null, then the name of the variable is "
"used.  In order for this modifier to work, the name (node) must at least "
"have appeared on the rhs of a dependency.  E<.Sm off>"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1518
#, no-wrap
msgid "Cm \\&:\\&! Ar cmd Cm \\&!"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1523
msgid "E<.Sm on> The output of running E<.Ar cmd> is the value."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1523
#, no-wrap
msgid "Cm \\&:sh"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1526
msgid ""
"If the variable is non-empty it is run as a command and the output becomes "
"the new value."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1526
#, no-wrap
msgid "Cm \\&::= Ns Ar str"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1538
msgid ""
"The variable is assigned the value E<.Ar str> after substitution.  This "
"modifier and its variations are useful in obscure situations such as wanting "
"to set a variable when shell commands are being parsed.  These assignment "
"modifiers always expand to nothing, so if appearing in a rule line by "
"themselves should be preceded with something to keep E<.Nm> happy."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1548
msgid ""
"The E<.Ql Cm \\&::> helps avoid false matches with the E<.At V> style E<.Cm "
"\\&:=> modifier and since substitution always occurs the E<.Cm \\&::=> form "
"is vaguely appropriate."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1548
#, no-wrap
msgid "Cm \\&::?= Ns Ar str"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1552
msgid "As for E<.Cm \\&::=> but only if the variable does not already have a value."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1552
#, no-wrap
msgid "Cm \\&::+= Ns Ar str"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1556
msgid "Append E<.Ar str> to the variable."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1556
#, no-wrap
msgid "Cm \\&::!= Ns Ar cmd"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1560
msgid "Assign the output of E<.Ar cmd> to the variable."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1560
#, no-wrap
msgid "Cm \\&:\\&[ Ns Ar range Ns Cm \\&]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1564
msgid ""
"Selects one or more words from the value, or performs other operations "
"related to the way in which the value is divided into words."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1578
msgid ""
"Ordinarily, a value is treated as a sequence of words delimited by white "
"space.  Some modifiers suppress this behavior, causing a value to be treated "
"as a single word (possibly containing embedded white space).  An empty "
"value, or a value that consists entirely of white-space, is treated as a "
"single word.  For the purposes of the E<.Ql Cm \\&:[]> modifier, the words "
"are indexed both forwards using positive integers (where index 1 represents "
"the first word), and backwards using negative integers (where index \\-1 "
"represents the last word)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1583
msgid ""
"The E<.Ar range> is subjected to variable expansion, and the expanded result "
"is then interpreted as follows:"
msgstr ""

#.  :[n]
#. type: It
#: /usr/src/contrib/bmake/make.1:1585
#, no-wrap
msgid "Ar index"
msgstr ""

#.  :[start..end]
#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1588
msgid "Selects a single word from the value."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1588
#, no-wrap
msgid "Ar start Ns Cm \\&.. Ns Ar end"
msgstr ""

#.  :[*]
#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1606
msgid ""
"Selects all words from E<.Ar start> to E<.Ar end>, inclusive.  For example, "
"E<.Ql Cm \\&:[2..-1]> selects all words from the second word to the last "
"word.  If E<.Ar start> is greater than E<.Ar end>, then the words are output "
"in reverse order.  For example, E<.Ql Cm \\&:[-1..1]> selects all the words "
"from last to first."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1606
#, no-wrap
msgid "Cm \\&*"
msgstr ""

#.  :[0]
#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1613
msgid ""
"Causes subsequent modifiers to treat the value as a single word (possibly "
"containing embedded white space).  Analogous to the effect of \\&\"$*\\&\" "
"in Bourne shell."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1613
#, no-wrap
msgid "0"
msgstr ""

#.  :[*]
#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1617
msgid "Means the same as E<.Ql Cm \\&:[*]>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1617
#, no-wrap
msgid "Cm \\&@"
msgstr ""

#.  :[#]
#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1624
msgid ""
"Causes subsequent modifiers to treat the value as a sequence of words "
"delimited by white space.  Analogous to the effect of \\&\"$@\\&\" in Bourne "
"shell."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1624
#, no-wrap
msgid "Cm \\&#"
msgstr ""

#.  :[range]
#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1626
msgid "Returns the number of words in the value."
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:1628
#, no-wrap
msgid "INCLUDE STATEMENTS, CONDITIONALS AND FOR LOOPS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1653
msgid ""
"Makefile inclusion, conditional structures and for loops reminiscent of the "
"C programming language are provided in E<.Nm>.  All such structures are "
"identified by a line beginning with a single dot E<.Pq Ql \\&.> character.  "
"Files are included with either E<.Cm \\&.include Aq Ar file> or E<.Cm "
"\\&.include Pf \\*q Ar file Ns \\*q>.  Variables between the angle brackets "
"or double quotes are expanded to form the file name.  If angle brackets are "
"used, the included makefile is expected to be in the system makefile "
"directory.  If double quotes are used, the including makefile's directory "
"and any directories specified using the E<.Fl I> option are searched before "
"the system makefile directory.  For compatibility with other versions of "
"E<.Nm> E<.Ql include file ...> is also accepted."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1659
msgid ""
"If the include statement is written as E<.Cm .-include> or as E<.Cm "
".sinclude> then errors locating and/or opening include files are ignored."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1666
msgid ""
"If the include statement is written as E<.Cm .dinclude> not only are errors "
"locating and/or opening include files ignored, but stale dependencies within "
"the included file will be ignored just like E<.Va .MAKE.DEPENDFILE>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1670
msgid ""
"Conditional expressions are also preceded by a single dot as the first "
"character of a line.  The possible conditionals are as follows:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1671
#, no-wrap
msgid "Ic .error Ar message"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1676
msgid ""
"The message is printed along with the name of the makefile and line number, "
"then E<.Nm> will exit."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1676
#, no-wrap
msgid "Ic .export Ar variable ..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1689
msgid ""
"Export the specified global variable.  If no variable list is provided, all "
"globals are exported except for internal variables (those that start with "
"E<.Ql \\&.>).  This is not affected by the E<.Fl X> flag, so should be used "
"with caution.  For compatibility with other E<.Nm> programs E<.Ql export "
"variable=value> is also accepted."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1693
msgid ""
"Appending a variable name to E<.Va .MAKE.EXPORTED> is equivalent to "
"exporting a variable."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1693
#, no-wrap
msgid "Ic .export-env Ar variable ..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1702
msgid ""
"The same as E<.Ql .export>, except that the variable is not appended to "
"E<.Va .MAKE.EXPORTED>.  This allows exporting a value to the environment "
"which is different from that used by E<.Nm> internally."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1702
#, no-wrap
msgid "Ic .export-literal Ar variable ..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1706
msgid ""
"The same as E<.Ql .export-env>, except that variables in the value are not "
"expanded."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1706
#, no-wrap
msgid "Ic .info Ar message"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1708
msgid "The message is printed along with the name of the makefile and line number."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1708
#, no-wrap
msgid "Ic .undef Ar variable"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1711
msgid ""
"Un-define the specified global variable.  Only global variables may be "
"un-defined."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1711
#, no-wrap
msgid "Ic .unexport Ar variable ..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1722
msgid ""
"The opposite of E<.Ql .export>.  The specified global E<.Va variable> will "
"be removed from E<.Va .MAKE.EXPORTED>.  If no variable list is provided, all "
"globals are unexported, and E<.Va .MAKE.EXPORTED> deleted."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1722
#, no-wrap
msgid "Ic .unexport-env"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1733
msgid ""
"Unexport all globals previously exported and clear the environment inherited "
"from the parent.  This operation will cause a memory leak of the original "
"environment, so should be used sparingly.  Testing for E<.Va .MAKE.LEVEL> "
"being 0, would make sense.  Also note that any variables which originated in "
"the parent environment should be explicitly preserved if desired.  For "
"example:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1739
#, no-wrap
msgid ""
"E<.Li .if ${.MAKE.LEVEL} == 0>\n"
"PATH := ${PATH}\n"
"E<.Li .unexport-env>\n"
"E<.Li .export PATH>\n"
"E<.Li .endif>\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1747
msgid ""
"Would result in an environment containing only E<.Ql Ev PATH>, which is the "
"minimal useful environment.  Actually E<.Ql Ev .MAKE.LEVEL> will also be "
"pushed into the new environment."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1747
#, no-wrap
msgid "Ic .warning Ar message"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1751
msgid ""
"The message prefixed by E<.Ql Pa warning:> is printed along with the name of "
"the makefile and line number."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1751
#, no-wrap
msgid "Ic \\&.if Oo \\&! Oc Ns Ar expression Op Ar operator expression ..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1753
msgid "Test the value of an expression."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1753
#, no-wrap
msgid "Ic .ifdef Oo \\&! Oc Ns Ar variable Op Ar operator variable ..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1755 /usr/src/contrib/bmake/make.1:1757
msgid "Test the value of a variable."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1755
#, no-wrap
msgid "Ic .ifndef Oo \\&! Oc Ns Ar variable Op Ar operator variable ..."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1757
#, no-wrap
msgid "Ic .ifmake Oo \\&! Oc Ns Ar target Op Ar operator target ..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1759 /usr/src/contrib/bmake/make.1:1761
msgid "Test the target being built."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1759
#, no-wrap
msgid "Ic .ifnmake Oo \\&! Ns Oc Ar target Op Ar operator target ..."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1761
#, no-wrap
msgid "Ic .else"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1763
msgid "Reverse the sense of the last conditional."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1763
#, no-wrap
msgid "Ic .elif Oo \\&! Ns Oc Ar expression Op Ar operator expression ..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1768
msgid "A combination of E<.Ql Ic .else> followed by E<.Ql Ic .if>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1768
#, no-wrap
msgid "Ic .elifdef Oo \\&! Oc Ns Ar variable Op Ar operator variable ..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1773
msgid "A combination of E<.Ql Ic .else> followed by E<.Ql Ic .ifdef>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1773
#, no-wrap
msgid "Ic .elifndef Oo \\&! Oc Ns Ar variable Op Ar operator variable ..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1778
msgid "A combination of E<.Ql Ic .else> followed by E<.Ql Ic .ifndef>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1778
#, no-wrap
msgid "Ic .elifmake Oo \\&! Oc Ns Ar target Op Ar operator target ..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1783
msgid "A combination of E<.Ql Ic .else> followed by E<.Ql Ic .ifmake>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1783
#, no-wrap
msgid "Ic .elifnmake Oo \\&! Oc Ns Ar target Op Ar operator target ..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1788
msgid "A combination of E<.Ql Ic .else> followed by E<.Ql Ic .ifnmake>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1788
#, no-wrap
msgid "Ic .endif"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1790
msgid "End the body of the conditional."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1795
msgid "The E<.Ar operator> may be any one of the following:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1796
#, no-wrap
msgid "Cm \\&|\\&|"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1798
msgid "Logical OR."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1798
#, no-wrap
msgid "Cm \\&&&"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1803
msgid "Logical E<.Tn AND>; of higher precedence than E<.Dq \\&|\\&|>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1816
msgid ""
"As in C, E<.Nm> will only evaluate a conditional as far as is necessary to "
"determine its value.  Parentheses may be used to change the order of "
"evaluation.  The boolean operator E<.Ql Ic \\&!> may be used to logically "
"negate an entire conditional.  It is of higher precedence than E<.Ql Ic "
"\\&&&>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1820
msgid "The value of E<.Ar expression> may be any of the following:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1821
#, no-wrap
msgid "Ic defined"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1824
msgid ""
"Takes a variable name as an argument and evaluates to true if the variable "
"has been defined."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1824
#, no-wrap
msgid "Ic make"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1832
msgid ""
"Takes a target name as an argument and evaluates to true if the target was "
"specified as part of E<.Nm Ns 's> command line or was declared the default "
"target (either implicitly or explicitly, see E<.Va .MAIN>)  before the line "
"containing the conditional."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1832
#, no-wrap
msgid "Ic empty"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1835
msgid ""
"Takes a variable, with possible modifiers, and evaluates to true if the "
"expansion of the variable would result in an empty string."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1835
#, no-wrap
msgid "Ic exists"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1839
msgid ""
"Takes a file name as an argument and evaluates to true if the file exists.  "
"The file is searched for on the system search path (see E<.Va .PATH>)."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1839
#, no-wrap
msgid "Ic target"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1842
msgid ""
"Takes a target name as an argument and evaluates to true if the target has "
"been defined."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1842
#, no-wrap
msgid "Ic commands"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1845
msgid ""
"Takes a target name as an argument and evaluates to true if the target has "
"been defined and has commands associated with it."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1866
msgid ""
"E<.Ar Expression> may also be an arithmetic or string comparison.  Variable "
"expansion is performed on both sides of the comparison, after which the "
"integral values are compared.  A value is interpreted as hexadecimal if it "
"is preceded by 0x, otherwise it is decimal; octal numbers are not "
"supported.  The standard C relational operators are all supported.  If after "
"variable expansion, either the left or right hand side of a E<.Ql Ic ==> or "
"E<.Ql Ic \"!=\"> operator is not an integral value, then string comparison "
"is performed between the expanded variables.  If no relational operator is "
"given, it is assumed that the expanded variable is being compared against 0 "
"or an empty string in the case of a string comparison."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1890
msgid ""
"When E<.Nm> is evaluating one of these conditional expressions, and it "
"encounters a (white-space separated) word it doesn't recognize, either the "
"E<.Dq make> or E<.Dq defined> expression is applied to it, depending on the "
"form of the conditional.  If the form is E<.Ql Ic .ifdef>, E<.Ql Ic "
".ifndef>, or E<.Ql Ic .if> the E<.Dq defined> expression is applied.  "
"Similarly, if the form is E<.Ql Ic .ifmake> or E<.Ql Ic .ifnmake>, the E<.Dq "
"make> expression is applied."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1899
msgid ""
"If the conditional evaluates to true the parsing of the makefile continues "
"as before.  If it evaluates to false, the following lines are skipped.  In "
"both cases this continues until a E<.Ql Ic .else> or E<.Ql Ic .endif> is "
"found."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1902
msgid ""
"For loops are typically used to apply a set of rules to a list of files.  "
"The syntax of a for loop is:"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1904
#, no-wrap
msgid "Ic \\&.for Ar variable Oo Ar variable ... Oc Ic in Ar expression"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1905
#, no-wrap
msgid "Aq make-rules"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1906
#, no-wrap
msgid "Ic \\&.endfor"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1922
msgid ""
"After the for E<.Ic expression> is evaluated, it is split into words.  On "
"each iteration of the loop, one word is taken and assigned to each E<.Ic "
"variable>, in order, and these E<.Ic variables> are substituted into the "
"E<.Ic make-rules> inside the body of the for loop.  The number of words must "
"come out even; that is, if there are three iteration variables, the number "
"of words provided must be a multiple of three."
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:1922
#, no-wrap
msgid "COMMENTS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1927
msgid ""
"Comments begin with a hash E<.Pq Ql \\&#> character, anywhere but in a shell "
"command line, and continue to the end of an unescaped new line."
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:1927
#, no-wrap
msgid "SPECIAL SOURCES (ATTRIBUTES)"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1929
#, no-wrap
msgid "Ic .EXEC"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1931
msgid "Target is never out of date, but always execute commands anyway."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1931 /usr/src/contrib/bmake/make.1:2108
#, no-wrap
msgid "Ic .IGNORE"
msgstr ""

#.  .It Ic .INVISIBLE
#.  XXX
#.  .It Ic .JOIN
#.  XXX
#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1939
msgid ""
"Ignore any errors from the commands associated with this target, exactly as "
"if they all were preceded by a dash E<.Pq Ql \\->."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1939
#, no-wrap
msgid "Ic .MADE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1941
msgid "Mark all sources of this target as being up-to-date."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1941
#, no-wrap
msgid "Ic .MAKE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1949
msgid ""
"Execute the commands associated with this target even if the E<.Fl n> or "
"E<.Fl t> options were specified.  Normally used to mark recursive E<.Nm Ns "
"s>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1949
#, no-wrap
msgid "Ic .META"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1959
msgid ""
"Create a meta file for the target, even if it is flagged as E<.Ic .PHONY>, "
"E<.Ic .MAKE>, or E<.Ic .SPECIAL>.  Usage in conjunction with E<.Ic .MAKE> is "
"the most likely case.  In \"meta\" mode, the target is out-of-date if the "
"meta file is missing."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1959
#, no-wrap
msgid "Ic .NOMETA"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1967
msgid ""
"Do not create a meta file for the target.  Meta files are also not created "
"for E<.Ic .PHONY>, E<.Ic .MAKE>, or E<.Ic .SPECIAL> targets."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1967
#, no-wrap
msgid "Ic .NOMETA_CMP"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1974
msgid ""
"Ignore differences in commands when deciding if target is out of date.  This "
"is useful if the command contains a value which always changes.  If the "
"number of commands change, though, the target will still be out of date.  "
"The same effect applies to any command line that uses the variable E<.Va "
".OODATE>, which can be used for that purpose even when not otherwise needed "
"or desired:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1980
#, no-wrap
msgid ""
"skip-compare-for-some:\n"
"\t@echo this will be compared\n"
"\t@echo this will not ${.OODATE:M.NOMETA_CMP}\n"
"\t@echo this will also be compared\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1985
msgid "The E<.Cm \\&:M> pattern suppresses any expansion of the unwanted variable."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1985 /usr/src/contrib/bmake/make.1:2136
#, no-wrap
msgid "Ic .NOPATH"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1988
msgid "Do not search for the target in the directories specified by E<.Ic .PATH>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1988
#, no-wrap
msgid "Ic .NOTMAIN"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1994
msgid ""
"Normally E<.Nm> selects the first target it encounters as the default target "
"to be built if no target was specified.  This source prevents this target "
"from being selected."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1994
#, no-wrap
msgid "Ic .OPTIONAL"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:1999
msgid ""
"If a target is marked with this attribute and E<.Nm> can't figure out how to "
"create it, it will ignore this fact and assume the file isn't needed or "
"already exists."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:1999 /usr/src/contrib/bmake/make.1:2191
#, no-wrap
msgid "Ic .PHONY"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2008
msgid ""
"The target does not correspond to an actual file; it is always considered to "
"be out of date, and will not be created with the E<.Fl t> option.  "
"Suffix-transformation rules are not applied to E<.Ic .PHONY> targets."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2008 /usr/src/contrib/bmake/make.1:2195
#, no-wrap
msgid "Ic .PRECIOUS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2013
msgid ""
"When E<.Nm> is interrupted, it normally removes any partially made targets.  "
"This source prevents the target from being removed."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2013
#, no-wrap
msgid "Ic .RECURSIVE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2016
msgid "Synonym for E<.Ic .MAKE>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2016 /usr/src/contrib/bmake/make.1:2251
#, no-wrap
msgid "Ic .SILENT"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2020
msgid ""
"Do not echo any of the commands associated with this target, exactly as if "
"they all were preceded by an at sign E<.Pq Ql @>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2020
#, no-wrap
msgid "Ic .USE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2033
msgid ""
"Turn the target into E<.Nm Ns 's> version of a macro.  When the target is "
"used as a source for another target, the other target acquires the commands, "
"sources, and attributes (except for E<.Ic .USE>)  of the source.  If the "
"target already has commands, the E<.Ic .USE> target's commands are appended "
"to them."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2033
#, no-wrap
msgid "Ic .USEBEFORE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2039
msgid ""
"Exactly like E<.Ic .USE>, but prepend the E<.Ic .USEBEFORE> target commands "
"to the target."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2039
#, no-wrap
msgid "Ic .WAIT"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2048
msgid ""
"If E<.Ic .WAIT> appears in a dependency line, the sources that precede it "
"are made before the sources that succeed it in the line.  Since the "
"dependents of files are not made until the file itself could be made, this "
"also stops the dependents being built unless they are needed for another "
"branch of the dependency tree.  So given:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2057
#, no-wrap
msgid ""
"x: a .WAIT b\n"
"\techo x\n"
"a:\n"
"\techo a\n"
"b: b1\n"
"\techo b\n"
"b1:\n"
"\techo b1\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2064
msgid "the output is always E<.Ql a>, E<.Ql b1>, E<.Ql b>, E<.Ql x>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2068
msgid "The ordering imposed by E<.Ic .WAIT> is only relevant for parallel makes."
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:2069
#, no-wrap
msgid "SPECIAL TARGETS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2072
msgid ""
"Special targets may not be included with other targets, i.e. they must be "
"the only target specified."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2073
#, no-wrap
msgid "Ic .BEGIN"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2076
msgid ""
"Any command lines attached to this target are executed before anything else "
"is done."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2076
#, no-wrap
msgid "Ic .DEFAULT"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2090
msgid ""
"This is sort of a E<.Ic .USE> rule for any target (that was used only as a "
"source) that E<.Nm> can't figure out any other way to create.  Only the "
"shell script is used.  The E<.Ic .IMPSRC> variable of a target that inherits "
"E<.Ic .DEFAULT Ns 's> commands is set to the target's own name."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2090
#, no-wrap
msgid "Ic .DELETE_ON_ERROR"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2098
msgid ""
"If this target is present in the makefile, it globally causes make to delete "
"targets whose commands fail.  (By default, only targets whose commands are "
"interrupted during execution are deleted.  This is the historical behavior.)  "
"This setting can be used to help prevent half-finished or malformed targets "
"from being left around and corrupting future rebuilds."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2098
#, no-wrap
msgid "Ic .END"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2101
msgid ""
"Any command lines attached to this target are executed after everything else "
"is done."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2101
#, no-wrap
msgid "Ic .ERROR"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2108
msgid ""
"Any command lines attached to this target are executed when another target "
"fails.  The E<.Ic .ERROR_TARGET> variable is set to the target that failed.  "
"See also E<.Ic MAKE_PRINT_VAR_ON_ERROR>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2115
msgid ""
"Mark each of the sources with the E<.Ic .IGNORE> attribute.  If no sources "
"are specified, this is the equivalent of specifying the E<.Fl i> option."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2115
#, no-wrap
msgid "Ic .INTERRUPT"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2119
msgid "If E<.Nm> is interrupted, the commands for this target will be executed."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2119
#, no-wrap
msgid "Ic .MAIN"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2123
msgid "If no target is specified when E<.Nm> is invoked, this target will be built."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2123
#, no-wrap
msgid "Ic .MAKEFLAGS"
msgstr ""

#.  XXX: NOT YET!!!!
#.  .It Ic .NOTPARALLEL
#.  The named targets are executed in non parallel mode.
#.  If no targets are
#.  specified, then all targets are executed in non parallel mode.
#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2136
msgid ""
"This target provides a way to specify flags for E<.Nm> when the makefile is "
"used.  The flags are as if typed to the shell, though the E<.Fl f> option "
"will have no effect."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2140
msgid "Apply the E<.Ic .NOPATH> attribute to any specified sources."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2140
#, no-wrap
msgid "Ic .NOTPARALLEL"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2142
msgid "Disable parallel mode."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2142
#, no-wrap
msgid "Ic .NO_PARALLEL"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2146
msgid ""
"Synonym for E<.Ic .NOTPARALLEL>, for compatibility with other pmake "
"variants."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2146
#, no-wrap
msgid "Ic .OBJDIR"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2155
msgid ""
"The source is a new value for E<.Ql Va .OBJDIR>.  If it exists, E<.Nm> will "
"E<.Xr chdir 2> to it and update the value of E<.Ql Va .OBJDIR>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2155
#, no-wrap
msgid "Ic .ORDER"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2163
msgid ""
"The named targets are made in sequence.  This ordering does not add targets "
"to the list of targets to be made.  Since the dependents of a target do not "
"get built until the target itself could be built, unless E<.Ql a> is built "
"by another part of the dependency graph, the following is a dependency loop:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2166
#, no-wrap
msgid ""
"\\&.ORDER: b a\n"
"b: a\n"
msgstr ""

#.  XXX: NOT YET!!!!
#.  .It Ic .PARALLEL
#.  The named targets are executed in parallel mode.
#.  If no targets are
#.  specified, then all targets are executed in parallel mode.
#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2176
msgid "The ordering imposed by E<.Ic .ORDER> is only relevant for parallel makes."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2176
#, no-wrap
msgid "Ic .PATH"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2185
msgid ""
"The sources are directories which are to be searched for files not found in "
"the current directory.  If no sources are specified, any previously "
"specified directories are deleted.  If the source is the special E<.Ic "
".DOTLAST> target, then the current working directory is searched last."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2185
#, no-wrap
msgid "Ic .PATH. Ns Va suffix"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2191
msgid ""
"Like E<.Ic .PATH> but applies only to files with a particular suffix.  The "
"suffix must have been previously declared with E<.Ic .SUFFIXES>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2195
msgid "Apply the E<.Ic .PHONY> attribute to any specified sources."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2203
msgid ""
"Apply the E<.Ic .PRECIOUS> attribute to any specified sources.  If no "
"sources are specified, the E<.Ic .PRECIOUS> attribute is applied to every "
"target in the file."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2203
#, no-wrap
msgid "Ic .SHELL"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2210
msgid ""
"Sets the shell that E<.Nm> will use to execute commands.  The sources are a "
"set of E<.Ar field=value> pairs."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2211
#, no-wrap
msgid "Ar name"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2218
msgid ""
"This is the minimal specification, used to select one of the built-in shell "
"specs; E<.Ar sh>, E<.Ar ksh>, and E<.Ar csh>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2218
#, no-wrap
msgid "Ar path"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2220
msgid "Specifies the path to the shell."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2220
#, no-wrap
msgid "Ar hasErrCtl"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2222
msgid "Indicates whether the shell supports exit on error."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2222
#, no-wrap
msgid "Ar check"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2224
msgid "The command to turn on error checking."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2224
#, no-wrap
msgid "Ar ignore"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2226
msgid "The command to disable error checking."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2226
#, no-wrap
msgid "Ar echo"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2228
msgid "The command to turn on echoing of commands executed."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2228
#, no-wrap
msgid "Ar quiet"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2230
msgid "The command to turn off echoing of commands executed."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2230
#, no-wrap
msgid "Ar filter"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2236
msgid ""
"The output to filter after issuing the E<.Ar quiet> command.  It is "
"typically identical to E<.Ar quiet>."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2236
#, no-wrap
msgid "Ar errFlag"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2238
msgid "The flag to pass the shell to enable error checking."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2238
#, no-wrap
msgid "Ar echoFlag"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2240
msgid "The flag to pass the shell to enable command echoing."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2240
#, no-wrap
msgid "Ar newline"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2243
msgid ""
"The string literal to pass the shell that results in a single newline "
"character when used outside of any quoting characters."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2245 /usr/src/contrib/bmake/make.1:2270
msgid "Example:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2250
#, no-wrap
msgid ""
"\\&.SHELL: name=ksh path=/bin/ksh hasErrCtl=true \\e\n"
"\tcheck=\"set \\-e\" ignore=\"set +e\" \\e\n"
"\techo=\"set \\-v\" quiet=\"set +v\" filter=\"set +v\" \\e\n"
"\techoFlag=v errFlag=e newline=\"'\\en'\"\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2259
msgid ""
"Apply the E<.Ic .SILENT> attribute to any specified sources.  If no sources "
"are specified, the E<.Ic .SILENT> attribute is applied to every command in "
"the file."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2259
#, no-wrap
msgid "Ic .STALE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2263
msgid ""
"This target gets run when a dependency file contains stale entries, having "
"E<.Va .ALLSRC> set to the name of that dependency file."
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2263
#, no-wrap
msgid "Ic .SUFFIXES"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2268
msgid ""
"Each source specifies a suffix to E<.Nm>.  If no sources are specified, any "
"previously specified suffixes are deleted.  It allows the creation of "
"suffix-transformation rules."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2274
#, no-wrap
msgid ""
"\\&.SUFFIXES: .o\n"
"\\&.c.o:\n"
"\tcc \\-o ${.TARGET} \\-c ${.IMPSRC}\n"
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:2276
#, no-wrap
msgid "ENVIRONMENT"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2289
msgid ""
"E<.Nm> uses the following environment variables, if they exist: E<.Ev "
"MACHINE>, E<.Ev MACHINE_ARCH>, E<.Ev MAKE>, E<.Ev MAKEFLAGS>, E<.Ev "
"MAKEOBJDIR>, E<.Ev MAKEOBJDIRPREFIX>, E<.Ev MAKESYSPATH>, E<.Ev PWD>, and "
"E<.Ev TMPDIR>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2299
msgid ""
"E<.Ev MAKEOBJDIRPREFIX> and E<.Ev MAKEOBJDIR> may only be set in the "
"environment or on the command line to E<.Nm> and not as makefile variables; "
"see the description of E<.Ql Va .OBJDIR> for more details."
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:2299
#, no-wrap
msgid "FILES"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2301
#, no-wrap
msgid ".depend"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2303 /usr/src/contrib/bmake/make.1:2305 /usr/src/contrib/bmake/make.1:2307
msgid "list of dependencies"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2303
#, no-wrap
msgid "Makefile"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2305
#, no-wrap
msgid "makefile"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2307
#, no-wrap
msgid "sys.mk"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2309
msgid "system makefile"
msgstr ""

#. type: It
#: /usr/src/contrib/bmake/make.1:2309
#, no-wrap
msgid "/usr/share/mk"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2311
msgid "system makefile directory"
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:2312
#, no-wrap
msgid "COMPATIBILITY"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2315
msgid ""
"The basic make syntax is compatible between different versions of make; "
"however the special variables, variable modifiers and conditionals are not."
msgstr ""

#. type: Ss
#: /usr/src/contrib/bmake/make.1:2315
#, no-wrap
msgid "Older versions"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2318
msgid "An incomplete list of changes in older versions of E<.Nm>:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2324
msgid ""
"The way that .for loop variables are substituted changed after E<.Nx 5.0> so "
"that they still appear to be variable expansions.  In particular this stops "
"them being treated as syntax, and removes some obscure problems using them "
"in .if statements."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2329
msgid ""
"The way that parallel makes are scheduled changed in E<.Nx 4.0> so that "
".ORDER and .WAIT apply recursively to the dependent nodes.  The algorithms "
"used may change again in the future."
msgstr ""

#. type: Ss
#: /usr/src/contrib/bmake/make.1:2329
#, no-wrap
msgid "Other make dialects"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2335
msgid ""
"Other make dialects (GNU make, SVR4 make, POSIX make, etc.) do not support "
"most of the features of E<.Nm> as described in this manual.  Most notably:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2344
msgid ""
"The E<.Ic .WAIT> and E<.Ic .ORDER> declarations and most functionality "
"pertaining to parallelization.  (GNU make supports parallelization but lacks "
"these features needed to control it effectively.)"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2349
msgid ""
"Directives, including for loops and conditionals and most of the forms of "
"include files.  (GNU make has its own incompatible and less powerful syntax "
"for conditionals.)"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2351
msgid "All built-in variables that begin with a dot."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2358
msgid ""
"Most of the special sources and targets that begin with a dot, with the "
"notable exception of E<.Ic .PHONY>, E<.Ic .PRECIOUS>, and E<.Ic .SUFFIXES>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2360
msgid "Variable modifiers, except for the"
msgstr ""

#. type: Dl
#: /usr/src/contrib/bmake/make.1:2360
#, no-wrap
msgid ":old=new"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2364
msgid ""
"string substitution, which does not portably support globbing with E<.Ql %> "
"and historically only works on declared suffixes."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2369
msgid ""
"The E<.Ic $E<gt>> variable even in its short form; most makes support this "
"functionality but its name varies."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2383
msgid ""
"Some features are somewhat more portable, such as assignment with E<.Ic +=>, "
"E<.Ic ?=>, and E<.Ic !=>.  The E<.Ic .PATH> functionality is based on an "
"older feature E<.Ic VPATH> found in GNU make and many versions of SVR4 make; "
"however, historically its behavior is too ill-defined (and too buggy) to "
"rely upon."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2394
msgid ""
"The E<.Ic $@> and E<.Ic $E<lt>> variables are more or less universally "
"portable, as is the E<.Ic $(MAKE)> variable.  Basic use of suffix rules (for "
"files only in the current directory, not trying to chain transformations "
"together, etc.) is also reasonably portable."
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:2394
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2397
msgid "E<.Xr mkdep 1>, E<.Xr style.Makefile 5>"
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:2397
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2409
msgid ""
"A E<.Nm> command appeared in E<.At v7>.  This E<.Nm> implementation is based "
"on Adam De Boor's pmake program which was written for Sprite at Berkeley.  "
"It was designed to be a parallel distributed make running jobs on different "
"machines using a daemon called E<.Dq customs>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2416
msgid ""
"Historically the target/dependency E<.Dq FRC> has been used to FoRCe "
"rebuilding (since the target/dependency does not exist... unless someone "
"creates an E<.Dq FRC> file)."
msgstr ""

#. type: Sh
#: /usr/src/contrib/bmake/make.1:2416
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2425
msgid ""
"The E<.Nm> syntax is difficult to parse without actually acting of the "
"data.  For instance finding the end of a variable use should involve "
"scanning each the modifiers using the correct terminator for each field.  In "
"many places E<.Nm> just counts {} and () in order to find the end of a "
"variable expansion."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/bmake/make.1:2426
msgid "There is no way of escaping a space character in a filename."
msgstr ""
