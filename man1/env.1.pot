# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/usr.bin/env/env.1:34
#, no-wrap
msgid "April 17, 2008"
msgstr ""

#. type: Dt
#: /usr/src/usr.bin/env/env.1:35
#, no-wrap
msgid "ENV 1"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/env/env.1:37
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:39
msgid "E<.Nm env>"
msgstr ""

#. type: Nd
#: /usr/src/usr.bin/env/env.1:39
#, no-wrap
msgid "set environment and execute command, or print environment"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/env/env.1:40
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:48
msgid ""
"E<.Nm> E<.Op Fl iv> E<.Op Fl P Ar altpath> E<.Op Fl S Ar string> E<.Op Fl u "
"Ar name> E<.Op Ar name Ns = Ns Ar value ...> E<.Op Ar utility Op Ar argument "
"...>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/env/env.1:48
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:64
msgid ""
"The E<.Nm> utility executes another E<.Ar utility> after modifying the "
"environment as specified on the command line.  Each E<.Ar name Ns = Ns Ar "
"value> option specifies the setting of an environment variable, E<.Ar name>, "
"with a value of E<.Ar value>.  All such environment variables are set before "
"the E<.Ar utility> is executed."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:66
msgid "The options are as follows:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:67
#, no-wrap
msgid "Fl i"
msgstr ""

#. 	-P
#. type: Plain text
#: /usr/src/usr.bin/env/env.1:78
msgid ""
"Execute the E<.Ar utility> with only those environment variables specified "
"by E<.Ar name Ns = Ns Ar value> options.  The environment inherited by "
"E<.Nm> is ignored completely."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:78
#, no-wrap
msgid "Fl P Ar altpath"
msgstr ""

#. 	-S
#. type: Plain text
#: /usr/src/usr.bin/env/env.1:87
msgid ""
"Search the set of directories as specified by E<.Ar altpath> to locate the "
"specified E<.Ar utility> program, instead of using the value of the E<.Ev "
"PATH> environment variable."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:87
#, no-wrap
msgid "Fl S Ar string"
msgstr ""

#. 	-u
#. type: Plain text
#: /usr/src/usr.bin/env/env.1:100
msgid ""
"Split apart the given E<.Ar string> into multiple strings, and process each "
"of the resulting strings as separate arguments to the E<.Nm> utility.  The "
"E<.Fl S> option recognizes some special character escape sequences and also "
"supports environment-variable substitution, as described below."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:100
#, no-wrap
msgid "Fl u Ar name"
msgstr ""

#. 	-v
#. type: Plain text
#: /usr/src/usr.bin/env/env.1:115
msgid ""
"If the environment variable E<.Ar name> is in the environment, then remove "
"it before processing the remaining options.  This is similar to the E<.Ic "
"unset> command in E<.Xr sh 1>.  The value for E<.Ar name> must not include "
"the E<.Ql => character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:115
#, no-wrap
msgid "Fl v"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:122
msgid ""
"Print verbose information for each step of processing done by the E<.Nm> "
"utility.  Additional information will be printed if E<.Fl v> is specified "
"multiple times."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:128
msgid ""
"The above options are only recognized when they are specified before any "
"E<.Ar name Ns = Ns Ar value> options."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:136
msgid ""
"If no E<.Ar utility> is specified, E<.Nm> prints out the names and values of "
"the variables in the environment, with one name/value pair per line."
msgstr ""

#. type: Ss
#: /usr/src/usr.bin/env/env.1:136
#, no-wrap
msgid "Details of Fl S \\&Ss (split-string) processing"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:147
msgid ""
"The processing of the E<.Fl S> option will split the given E<.Ar string> "
"into separate arguments based on any space or E<lt>tabE<gt> characters found "
"in the E<.Ar string>.  Each of those new arguments will then be treated as "
"if it had been specified as a separate argument on the original E<.Nm> "
"command."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:162
msgid ""
"Spaces and tabs may be embedded in one of those new arguments by using "
"single E<.Pq Dq Li '> or double E<.Pq Ql \\&\"> quotes, or backslashes E<.Pq "
"Ql \\e>.  Single quotes will escape all non-single quote characters, up to "
"the matching single quote.  Double quotes will escape all non-double quote "
"characters, up to the matching double quote.  It is an error if the end of "
"the E<.Ar string> is reached before the matching quote character."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:178
msgid ""
"If E<.Fl S> would create a new argument that starts with the E<.Ql #> "
"character, then that argument and the remainder of the E<.Ar string> will be "
"ignored.  The E<.Ql \\e#> sequence can be used when you want a new argument "
"to start with a E<.Ql #> character, without causing the remainder of the "
"E<.Ar string> to be skipped."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:187
msgid ""
"While processing the E<.Ar string> value, E<.Fl S> processing will treat "
"certain character combinations as escape sequences which represent some "
"action to take.  The character escape sequences are in backslash notation.  "
"The characters and their meanings are as follows:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:189
#, no-wrap
msgid "Cm \\ec"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:193
msgid ""
"Ignore the remaining characters in the E<.Ar string>.  This must not appear "
"inside a double-quoted string."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:193
#, no-wrap
msgid "Cm \\ef"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:195
msgid "Replace with a E<lt>form-feedE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:195
#, no-wrap
msgid "Cm \\en"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:197
msgid "Replace with a E<lt>new-lineE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:197
#, no-wrap
msgid "Cm \\er"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:199
msgid "Replace with a E<lt>carriage returnE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:199
#, no-wrap
msgid "Cm \\et"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:201
msgid "Replace with a E<lt>tabE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:201
#, no-wrap
msgid "Cm \\ev"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:203
msgid "Replace with a E<lt>vertical tabE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:203
#, no-wrap
msgid "Cm \\e#"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:212
msgid ""
"Replace with a E<.Ql #> character.  This would be useful when you need a "
"E<.Ql #> as the first character in one of the arguments created by splitting "
"apart the given E<.Ar string>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:212
#, no-wrap
msgid "Cm \\e$"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:216
msgid "Replace with a E<.Ql $> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:216
#, no-wrap
msgid "Cm \\e_"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:222
msgid ""
"If this is found inside of a double-quoted string, then replace it with a "
"single blank.  If this is found outside of a quoted string, then treat this "
"as the separator character between new arguments in the original E<.Ar "
"string>."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:222
#, no-wrap
msgid "Cm \\e\""
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:224
msgid "Replace with a E<lt>double quoteE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:224
#, no-wrap
msgid "Cm \\e\\'"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:226
msgid "Replace with a E<lt>single quoteE<gt> character."
msgstr ""

#. type: It
#: /usr/src/usr.bin/env/env.1:226
#, no-wrap
msgid "Cm \\e\\e"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:228
msgid "Replace with a backslash character."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:238
msgid ""
"The sequences for E<lt>single-quoteE<gt> and backslash are the only "
"sequences which are recognized inside of a single-quoted string.  The other "
"sequences have no special meaning inside a single-quoted string.  All escape "
"sequences are recognized inside of a double-quoted string.  It is an error "
"if a single E<.Ql \\e> character is followed by a character other than the "
"ones listed above."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:260
msgid ""
"The processing of E<.Fl S> also supports substitution of values from "
"environment variables.  To do this, the name of the environment variable "
"must be inside of E<.Ql ${}>, such as: E<.Li ${SOMEVAR}>.  The common shell "
"syntax of E<.Li $SOMEVAR> is not supported.  All values substituted will be "
"the values of the environment variables as they were when the E<.Nm> utility "
"was originally invoked.  Those values will not be checked for any of the "
"escape sequences as described above.  And any settings of E<.Ar name Ns = Ns "
"Ar value> will not effect the values used for substitution in E<.Fl S> "
"processing."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:277
msgid ""
"Also, E<.Fl S> processing can not reference the value of the special "
"parameters which are defined by most shells.  For instance, E<.Fl S> can not "
"recognize special parameters such as: E<.Ql $*>, E<.Ql $@>, E<.Ql $#>, E<.Ql "
"$?> or E<.Ql $$> if they appear inside the given E<.Ar string>."
msgstr ""

#. type: Ss
#: /usr/src/usr.bin/env/env.1:277
#, no-wrap
msgid "Use in shell-scripts"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:285
msgid ""
"The E<.Nm> utility is often used as the E<.Ar interpreter> on the first line "
"of interpreted scripts, as described in E<.Xr execve 2>."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:297
msgid ""
"Note that the way the kernel parses the E<.Ql #!> (first line) of an "
"interpreted script has changed as of E<.Fx 6.0>.  Prior to that, the E<.Fx> "
"kernel would split that first line into separate arguments based on any "
"whitespace (space or E<lt>tabE<gt> characters) found in the line.  So, if a "
"script named E<.Pa /usr/local/bin/someport> had a first line of:"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/env/env.1:298
#, no-wrap
msgid "#!/usr/local/bin/php -n -q -dsafe_mode=0"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:303
msgid ""
"then the E<.Pa /usr/local/bin/php> program would have been started with the "
"arguments of:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:309
#, no-wrap
msgid ""
"arg[0] = '/usr/local/bin/php'\n"
"arg[1] = '-n'\n"
"arg[2] = '-q'\n"
"arg[3] = '-dsafe_mode=0'\n"
"arg[4] = '/usr/local/bin/someport'\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:322
msgid ""
"plus any arguments the user specified when executing E<.Pa someport>.  "
"However, this processing of multiple options on the E<.Ql #!> line is not "
"the way any other operating system parses the first line of an interpreted "
"script.  So after a change which was made for E<.Fx 6.0> release, that "
"script will result in E<.Pa /usr/local/bin/php> being started with the "
"arguments of:"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:326
#, no-wrap
msgid ""
"arg[0] = '/usr/local/bin/php'\n"
"arg[1] = '-n -q -dsafe_mode=0'\n"
"arg[2] = '/usr/local/bin/someport'\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:334
msgid ""
"plus any arguments the user specified.  This caused a significant change in "
"the behavior of a few scripts.  In the case of above script, to have it "
"behave the same way under E<.Fx 6.0> as it did under earlier releases, the "
"first line should be changed to:"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/env/env.1:335
#, no-wrap
msgid "#!/usr/bin/env -S /usr/local/bin/php -n -q -dsafe_mode=0"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:341
msgid ""
"The E<.Nm> utility will be started with the entire line as a single "
"argument:"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/env/env.1:342
#, no-wrap
msgid "arg[1] = '-S /usr/local/bin/php -n -q -dsafe_mode=0'"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:350
msgid ""
"and then E<.Fl S> processing will split that line into separate arguments "
"before executing E<.Pa /usr/local/bin/php>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/env/env.1:350
#, no-wrap
msgid "ENVIRONMENT"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:362
msgid ""
"The E<.Nm> utility uses the E<.Ev PATH> environment variable to locate the "
"requested E<.Ar utility> if the name contains no E<.Ql /> characters, unless "
"the E<.Fl P> option has been specified."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/env/env.1:362
#, no-wrap
msgid "EXIT STATUS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:370
msgid ""
"E<.Ex -std> An exit status of 126 indicates that E<.Ar utility> was found, "
"but could not be executed.  An exit status of 127 indicates that E<.Ar "
"utility> could not be found."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/env/env.1:370
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:377
msgid ""
"Since the E<.Nm> utility is often used as part of the first line of an "
"interpreted script, the following examples show a number of ways that the "
"E<.Nm> utility can be useful in scripts."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:381
msgid ""
"The kernel processing of an interpreted script does not allow a script to "
"directly reference some other script as its own interpreter.  As a way "
"around this, the main difference between"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/env/env.1:382
#, no-wrap
msgid "#!/usr/local/bin/foo"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:384
msgid "and"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/env/env.1:384
#, no-wrap
msgid "#!/usr/bin/env /usr/local/bin/foo"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:389
msgid ""
"is that the latter works even if E<.Pa /usr/local/bin/foo> is itself an "
"interpreted script."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:398
msgid ""
"Probably the most common use of E<.Nm> is to find the correct interpreter "
"for a script, when the interpreter may be in different directories on "
"different systems.  The following example will find the E<.Ql perl> "
"interpreter by searching through the directories specified by E<.Ev PATH>."
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/env/env.1:399
#, no-wrap
msgid "#!/usr/bin/env perl"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:414
msgid ""
"One limitation of that example is that it assumes the user's value for E<.Ev "
"PATH> is set to a value which will find the interpreter you want to "
"execute.  The E<.Fl P> option can be used to make sure a specific list of "
"directories is used in the search for E<.Ar utility>.  Note that the E<.Fl "
"S> option is also required for this example to work correctly."
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/env/env.1:415
#, no-wrap
msgid "#!/usr/bin/env -S -P/usr/local/bin:/usr/bin perl"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:431
msgid ""
"The above finds E<.Ql perl> only if it is in E<.Pa /usr/local/bin> or E<.Pa "
"/usr/bin>.  That could be combined with the present value of E<.Ev PATH>, to "
"provide more flexibility.  Note that spaces are not required between the "
"E<.Fl S> and E<.Fl P> options:"
msgstr ""

#. type: Dl
#: /usr/src/usr.bin/env/env.1:432
#, no-wrap
msgid "#!/usr/bin/env -S-P/usr/local/bin:/usr/bin:${PATH} perl"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/env/env.1:433
#, no-wrap
msgid "COMPATIBILITY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:440
msgid "The E<.Nm> utility accepts the E<.Fl> option as a synonym for E<.Fl i>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/env/env.1:440
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:445
msgid "E<.Xr printenv 1>, E<.Xr sh 1>, E<.Xr execvp 3>, E<.Xr environ 7>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/env/env.1:445
#, no-wrap
msgid "STANDARDS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:457
msgid ""
"The E<.Nm> utility conforms to E<.St -p1003.1-2001>.  The E<.Fl P , S , u> "
"and E<.Fl v> options are non-standard extensions supported by E<.Fx>, but "
"which may not be available on other operating systems."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/env/env.1:457
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:468
msgid ""
"The E<.Nm> command appeared in E<.Bx 4.4>.  The E<.Fl P , S> and E<.Fl v> "
"options were added in E<.Fx 6.0>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/env/env.1:468
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:476
msgid ""
"The E<.Nm> utility does not handle values of E<.Ar utility> which have an "
"equals sign E<.Pq Ql => in their name, for obvious reasons."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/env/env.1:482
msgid ""
"The E<.Nm> utility does not take multibyte characters into account when "
"processing the E<.Fl S> option, which may lead to incorrect results in some "
"locales."
msgstr ""
