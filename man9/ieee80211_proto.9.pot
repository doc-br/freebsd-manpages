# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:29-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/ieee80211_proto.9:28
#, no-wrap
msgid "August 4, 2009"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/ieee80211_proto.9:29
#, no-wrap
msgid "IEEE80211_PROTO 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ieee80211_proto.9:31
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:33
msgid "E<.Nm ieee80211_proto>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/ieee80211_proto.9:33
#, no-wrap
msgid "802.11 state machine support"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ieee80211_proto.9:34
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ieee80211_proto.9:35
#, no-wrap
msgid "net80211/ieee80211_var.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:45
msgid ""
"E<.Ft void> E<.Fn ieee80211_start_all \"struct ieee80211com *\"> E<.Ft void> "
"E<.Fn ieee80211_stop_all \"struct ieee80211com *\"> E<.Ft void> E<.Fn "
"ieee80211_suspend_all \"struct ieee80211com *\"> E<.Ft void> E<.Fn "
"ieee80211_resume_all \"struct ieee80211com *\">"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:49
msgid ""
"E<.Dv enum ieee80211_state>; E<.Ft int> E<.Fn ieee80211_new_state \"struct "
"ieee80211vap *\" \"enum ieee80211_state\" \"int\">"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:52
msgid "E<.Ft void> E<.Fn ieee80211_wait_for_parent \"struct ieee80211com *\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ieee80211_proto.9:52
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:68
msgid ""
"The E<.Nm net80211> layer that supports 802.11 device drivers uses a state "
"machine to control operation of vaps.  These state machines vary according "
"to the vap operating mode.  Station mode state machines follow the 802.11 "
"MLME states in the protocol specification.  Other state machines are simpler "
"and reflect operational work such as scanning for a BSS or automatically "
"selecting a channel to operate on.  When multiple vaps are operational the "
"state machines are used to coordinate operation such as choosing a channel.  "
"The state machine mechanism also serves to bind the E<.Nm net80211> layer to "
"a driver; this is described more below."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:70
msgid "The following states are defined for state machines:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ieee80211_proto.9:71
#, no-wrap
msgid "Dv IEEE80211_S_INIT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:77
msgid ""
"Default/initial state.  A vap in this state should not hold any dynamic "
"state (e.g. entries for associated stations in the node table).  The driver "
"must quiesce the hardware; e.g. there should be no interrupts firing."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ieee80211_proto.9:77
#, no-wrap
msgid "Dv IEEE80211_S_SCAN"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:83
msgid ""
"Scanning for a BSS or choosing a channel to operate on.  Note that scanning "
"can also take place in other states (e.g. when background scanning is "
"active); this state is entered when initially bringing a vap to an "
"operational state or after an event such as a beacon miss (in station mode)."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ieee80211_proto.9:83
#, no-wrap
msgid "Dv IEEE80211_S_AUTH"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:92
msgid ""
"Authenticating to an access point (in station mode).  This state is normally "
"reached from E<.Dv IEEE80211_S_SCAN> after selecting a BSS, but may also be "
"reached from E<.Dv IEEE80211_S_ASSOC> or E<.Dv IEEE80211_S_RUN> if the "
"authentication handshake fails."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ieee80211_proto.9:92
#, no-wrap
msgid "Dv IEEE80211_S_ASSOC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:99
msgid ""
"Associating to an access point (in station mode).  This state is reached "
"from E<.Dv IEEE80211_S_AUTH> after successfully authenticating or from E<.Dv "
"IEEE80211_S_RUN> if a DisAssoc frame is received."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ieee80211_proto.9:99
#, no-wrap
msgid "Dv IEEE80211_S_CAC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:103
msgid ""
"Doing Channel Availability Check (CAC).  This state is entered only when DFS "
"is enabled and the channel selected for operation requires CAC."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ieee80211_proto.9:103
#, no-wrap
msgid "Dv IEEE80211_S_RUN"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:121
msgid ""
"Operational.  In this state a vap can transmit data frames, accept requests "
"for stations associating, etc.  Beware that data traffic is also gated by "
"whether the associated E<.Dq port> is authorized.  When WPA/802.11i/802.1x "
"is operational authorization may happen separately; e.g. in station mode "
"E<.Xr wpa_supplicant 8> must complete the handshakes and plumb the necessary "
"keys before a port is authorized.  In this state a BSS is operational and "
"associated state is valid and may be used; e.g.  E<.Vt ic_bss> and E<.Vt "
"ic_bsschan> are guaranteed to be usable."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ieee80211_proto.9:121
#, no-wrap
msgid "Dv IEEE80211_S_CSA"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:128
msgid ""
"Channel Switch Announcement (CSA) is pending.  This state is reached only "
"from E<.Dv IEEE80211_S_RUN> when either a CSA is received from an access "
"point (in station mode)  or the local station is preparing to change "
"channel.  In this state traffic may be muted depending on the Mute setting "
"in the CSA."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ieee80211_proto.9:128
#, no-wrap
msgid "Dv IEEE80211_S_SLEEP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:134
msgid ""
"Asleep to save power (in station mode).  This state is reached only from "
"E<.Dv IEEE80211_S_RUN> when power save operation is enabled and the local "
"station is deemed sufficiently idle to enter low power mode."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:150
msgid ""
"Note that states are ordered (as shown above); e.g. a vap must be in the "
"E<.Dv IEEE80211_S_RUN> or E<.Dq greater> before it can transmit frames.  "
"Certain E<.Nm net80211> data are valid only in certain states; e.g. the "
"E<.Vt iv_bsschan> that specifies the channel for the operating BSS should "
"never be used except in E<.Dv IEEE80211_S_RUN> or greater."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ieee80211_proto.9:150
#, no-wrap
msgid "STATE CHANGES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:184
msgid ""
"State machine changes are typically handled internal to the E<.Nm net80211> "
"layer in response to E<.Xr ioctl 2> requests, received frames, or external "
"events such as a beacon miss.  The E<.Fn ieee80211_new_state> function is "
"used to initiate a state machine change on a vap.  The new state and an "
"optional argument are supplied.  The request is initially processed to "
"handle coordination of multiple vaps.  For example, only one vap at a time "
"can be scanning, if multiple vaps request a change to E<.Dv "
"IEEE80211_S_SCAN> the first will be permitted to run and the others will be "
"E<.Em deferred> until the scan operation completes at which time the "
"selected channel will be adopted.  Similarly E<.Nm net80211> handles "
"coordination of combinations of vaps such as an AP and station vap where the "
"station may need to roam to follow the AP it is associated to (dragging "
"along the AP vap to the new channel).  Another important coordination is the "
"handling of E<.Dv IEEE80211_S_CAC> and E<.Dv IEEE80211_S_CSA>.  No more than "
"one vap can ever be actively changing state at a time.  In fact E<.Nm "
"net80211> single-threads the state machine logic in a dedicated E<.Xr "
"taskqueue 9> thread that is also used to synchronize work such as scanning "
"and beacon miss handling."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:195
msgid ""
"After multi-vap scheduling/coordination is done the per-vap E<.Vt "
"iv_newstate> method is called to carry out the state change work.  Drivers "
"use this entry to setup private state and then dispatch the call to the "
"E<.Nm net80211> layer using the previously defined method pointer (in "
"OOP-parlance they call the E<.Dq super method> )."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:207
msgid ""
"E<.Nm net80211> handles two state changes specially.  On transition to E<.Dv "
"IEEE80211_S_RUN> the E<.Dv IFF_DRV_OACTIVE> bit on the vap's transmit queue "
"is cleared so traffic can flow.  On transition to E<.Dv IEEE80211_S_INIT> "
"any state in the scan cache associated with the vap is flushed and any "
"frames pending on the transmit queue are flushed."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ieee80211_proto.9:207
#, no-wrap
msgid "DRIVER INTEGRATION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:221
msgid ""
"Drivers are expected to override the E<.Vt iv_newstate> method to interpose "
"their own code and handle setup work required by state changes.  Otherwise "
"drivers must call E<.Fn ieee80211_start_all> in response to being marked up "
"through an E<.Dv SIOCSIFFLAGS> ioctl request and they should use E<.Fn "
"ieee80211_suspend_all> and E<.Fn ieee80211_resume_all> to implement "
"suspend/resume support."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:231
msgid ""
"There is also an E<.Fn ieee80211_stop_all> call to force all vaps to an "
"E<.Dv IEEE80211_S_INIT> state but this should not be needed by a driver; "
"control is usually handled by E<.Nm net80211> or, in the case of card eject "
"or vap destroy, work will be initiated outside the driver."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ieee80211_proto.9:231
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:237
msgid ""
"E<.Xr ioctl 2>, E<.Xr wpa_supplicant 8>, E<.Xr ieee80211 9>, E<.Xr ifnet 9>, "
"E<.Xr taskqueue 9>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ieee80211_proto.9:237
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ieee80211_proto.9:241
msgid ""
"The state machine concept was part of the original E<.Nm ieee80211> code "
"base that first appeared in E<.Nx 1.5>."
msgstr ""
