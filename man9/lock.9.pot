# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/lock.9:29
#, no-wrap
msgid "November 17, 2017"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/lock.9:30
#, no-wrap
msgid "LOCK 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/lock.9:32
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:44
msgid ""
"E<.Nm lockinit>, E<.Nm lockdestroy>, E<.Nm lockmgr>, E<.Nm lockmgr_args>, "
"E<.Nm lockmgr_args_rw>, E<.Nm lockmgr_disown>, E<.Nm lockmgr_printinfo>, "
"E<.Nm lockmgr_recursed>, E<.Nm lockmgr_rw>, E<.Nm lockstatus>, E<.Nm "
"lockmgr_assert>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/lock.9:44
#, no-wrap
msgid "lockmgr family of functions"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/lock.9:45
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/lock.9:46
#, no-wrap
msgid "sys/types.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/lock.9:47
#, no-wrap
msgid "sys/lock.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/lock.9:48
#, no-wrap
msgid "sys/lockmgr.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:69
msgid ""
"E<.Ft void> E<.Fn lockinit \"struct lock *lkp\" \"int prio\" \"const char "
"*wmesg\" \"int timo\" \"int flags\"> E<.Ft void> E<.Fn lockdestroy \"struct "
"lock *lkp\"> E<.Ft int> E<.Fn lockmgr \"struct lock *lkp\" \"u_int flags\" "
"\"struct mtx *ilk\"> E<.Ft int> E<.Fn lockmgr_args \"struct lock *lkp\" "
"\"u_int flags\" \"struct mtx *ilk\" \"const char *wmesg\" \"int prio\" \"int "
"timo\"> E<.Ft int> E<.Fn lockmgr_args_rw \"struct lock *lkp\" \"u_int "
"flags\" \"struct rwlock *ilk\" \"const char *wmesg\" \"int prio\" \"int "
"timo\"> E<.Ft void> E<.Fn lockmgr_disown \"struct lock *lkp\"> E<.Ft void> "
"E<.Fn lockmgr_printinfo \"const struct lock *lkp\"> E<.Ft int> E<.Fn "
"lockmgr_recursed \"const struct lock *lkp\"> E<.Ft int> E<.Fn lockmgr_rw "
"\"struct lock *lkp\" \"u_int flags\" \"struct rwlock *ilk\"> E<.Ft int> "
"E<.Fn lockstatus \"const struct lock *lkp\">"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:74
msgid ""
"E<.Cd \"options INVARIANTS\"> E<.Cd \"options INVARIANT_SUPPORT\"> E<.Ft "
"void> E<.Fn lockmgr_assert \"const struct lock *lkp\" \"int what\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/lock.9:74
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:80
msgid ""
"The E<.Fn lockinit> function is used to initialize a lock.  It must be "
"called before any operation can be performed on a lock.  Its arguments are:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:81 /usr/src/share/man/man9/lock.9:138
#, no-wrap
msgid "Fa lkp"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:83
msgid "A pointer to the lock to initialize."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:83
#, no-wrap
msgid "Fa prio"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:86
msgid "The priority passed to E<.Xr sleep 9>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:86
#, no-wrap
msgid "Fa wmesg"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:90
msgid ""
"The lock message.  This is used for both debugging output and E<.Xr sleep "
"9>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:90
#, no-wrap
msgid "Fa timo"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:93
msgid "The timeout value passed to E<.Xr sleep 9>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:93 /usr/src/share/man/man9/lock.9:140
#, no-wrap
msgid "Fa flags"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:95
msgid "The flags the lock is to be initialized with:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:96 /usr/src/share/man/man9/lock.9:191
#, no-wrap
msgid "Dv LK_CANRECURSE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:98
msgid "Allow recursive exclusive locks."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:98
#, no-wrap
msgid "Dv LK_NOPROFILE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:100
msgid "Disable lock profiling for this lock."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:100
#, no-wrap
msgid "Dv LK_NOSHARE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:102
msgid "Allow exclusive locks only."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:102 /usr/src/share/man/man9/lock.9:187
#, no-wrap
msgid "Dv LK_NOWITNESS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:106
msgid "Instruct E<.Xr witness 4> to ignore this lock."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:106
#, no-wrap
msgid "Dv LK_NODUP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:109
msgid "E<.Xr witness 4> should log messages about duplicate locks being acquired."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:109
#, no-wrap
msgid "Dv LK_QUIET"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:113
msgid "Disable E<.Xr ktr 4> logging for this lock."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:113
#, no-wrap
msgid "Dv LK_TIMELOCK"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:117
msgid "Use E<.Fa timo> during a sleep; otherwise, 0 is used."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:124
msgid ""
"The E<.Fn lockdestroy> function is used to destroy a lock, and while it is "
"called in a number of places in the kernel, it currently does nothing."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:135
msgid ""
"The E<.Fn lockmgr> and E<.Fn lockmgr_rw> functions handle general locking "
"functionality within the kernel, including support for shared and exclusive "
"locks, and recursion.  E<.Fn lockmgr> and E<.Fn lockmgr_rw> are also able to "
"upgrade and downgrade locks."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:137
msgid "Their arguments are:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:140
msgid "A pointer to the lock to manipulate."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:142
msgid "Flags indicating what action is to be taken."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:143 /usr/src/share/man/man9/lock.9:340
#, no-wrap
msgid "Dv LK_SHARED"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:148
msgid ""
"Acquire a shared lock.  If an exclusive lock is currently held, E<.Dv "
"EDEADLK> will be returned."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:148 /usr/src/share/man/man9/lock.9:336
#, no-wrap
msgid "Dv LK_EXCLUSIVE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:154
msgid ""
"Acquire an exclusive lock.  If an exclusive lock is already held, and E<.Dv "
"LK_CANRECURSE> is not set, the system will E<.Xr panic 9>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:154
#, no-wrap
msgid "Dv LK_DOWNGRADE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:159
msgid ""
"Downgrade exclusive lock to a shared lock.  Downgrading a shared lock is not "
"permitted.  If an exclusive lock has been recursed, the system will E<.Xr "
"panic 9>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:159
#, no-wrap
msgid "Dv LK_UPGRADE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:168
msgid ""
"Upgrade a shared lock to an exclusive lock.  If this call fails, the shared "
"lock is lost, even if the E<.Dv LK_NOWAIT> flag is specified.  During the "
"upgrade, the shared lock could be temporarily dropped.  Attempts to upgrade "
"an exclusive lock will cause a E<.Xr panic 9>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:168
#, no-wrap
msgid "Dv LK_TRYUPGRADE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:172
msgid ""
"Try to upgrade a shared lock to an exclusive lock.  The failure to upgrade "
"does not result in the dropping of the shared lock ownership."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:172
#, no-wrap
msgid "Dv LK_RELEASE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:176
msgid ""
"Release the lock.  Releasing a lock that is not held can cause a E<.Xr panic "
"9>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:176
#, no-wrap
msgid "Dv LK_DRAIN"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:181
msgid ""
"Wait for all activity on the lock to end, then mark it decommissioned.  This "
"is used before freeing a lock that is part of a piece of memory that is "
"about to be freed.  (As documented in"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/lock.9:181
#, no-wrap
msgid "sys/lockmgr.h . )"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:182
#, no-wrap
msgid "Dv LK_SLEEPFAIL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:184
msgid "Fail if operation has slept."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:184
#, no-wrap
msgid "Dv LK_NOWAIT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:187
msgid "Do not allow the call to sleep.  This can be used to test the lock."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:191
msgid "Skip the E<.Xr witness 4> checks for this instance."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:194
msgid ""
"Allow recursion on an exclusive lock.  For every lock there must be a "
"release."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:194
#, no-wrap
msgid "Dv LK_INTERLOCK"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:196
msgid "Unlock the interlock (which should be locked already)."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:196
#, no-wrap
msgid "Dv LK_NODDLKTREAT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:204
msgid ""
"Normally, E<.Fn lockmgr> postpones serving further shared requests for "
"shared-locked lock if there is exclusive waiter, to avoid exclusive lock "
"starvation.  But, if the thread requesting the shared lock already owns a "
"shared lockmgr lock, the request is granted even in presence of the parallel "
"exclusive lock request, which is done to avoid deadlocks with recursive "
"shared acquisition."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:220
msgid ""
"The E<.Dv LK_NODDLKTREAT> flag can only be used by code which requests "
"shared non-recursive lock.  The flag allows exclusive requests to preempt "
"the current shared request even if the current thread owns shared locks.  "
"This is safe since shared lock is guaranteed to not recurse, and is used "
"when thread is known to held unrelated shared locks, to not cause "
"unnecessary starvation.  An example is E<.Dv vp> locking in VFS E<.Xr lookup "
"9>, when E<.Dv dvp> is already locked."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:221
#, no-wrap
msgid "Fa ilk"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:234
msgid ""
"An interlock mutex for controlling group access to the lock.  If E<.Dv "
"LK_INTERLOCK> is specified, E<.Fn lockmgr> and E<.Fn lockmgr_rw> assume "
"E<.Fa ilk> is currently owned and not recursed, and will return it "
"unlocked.  See E<.Xr mtx_assert 9>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:256
msgid ""
"The E<.Fn lockmgr_args> and E<.Fn lockmgr_args_rw> function work like E<.Fn "
"lockmgr> and E<.Fn lockmgr_rw> but accepting a E<.Fa wmesg>, E<.Fa timo> and "
"E<.Fa prio> on a per-instance basis.  The specified values will override the "
"default ones, but this can still be used passing, respectively, E<.Dv "
"LK_WMESG_DEFAULT>, E<.Dv LK_PRIO_DEFAULT> and E<.Dv LK_TIMO_DEFAULT>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:262
msgid ""
"The E<.Fn lockmgr_disown> function switches the owner from the current "
"thread to be E<.Dv LK_KERNPROC>, if the lock is already held."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:269
msgid ""
"The E<.Fn lockmgr_printinfo> function prints debugging information about the "
"lock.  It is used primarily by E<.Xr VOP_PRINT 9> functions."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:274
msgid ""
"The E<.Fn lockmgr_recursed> function returns true if the lock is recursed, 0 "
"otherwise."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:278
msgid ""
"The E<.Fn lockstatus> function returns the status of the lock in relation to "
"the current thread."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:291
msgid ""
"When compiled with E<.Cd \"options INVARIANTS\"> and E<.Cd \"options "
"INVARIANT_SUPPORT\">, the E<.Fn lockmgr_assert> function tests E<.Fa lkp> "
"for the assertions specified in E<.Fa what>, and panics if they are not "
"met.  One of the following assertions must be specified:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:292
#, no-wrap
msgid "Dv KA_LOCKED"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:296
msgid ""
"Assert that the current thread has either a shared or an exclusive lock on "
"the E<.Vt lkp> lock pointed to by the first argument."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:296
#, no-wrap
msgid "Dv KA_SLOCKED"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:300
msgid ""
"Assert that the current thread has a shared lock on the E<.Vt lkp> lock "
"pointed to by the first argument."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:300
#, no-wrap
msgid "Dv KA_XLOCKED"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:304
msgid ""
"Assert that the current thread has an exclusive lock on the E<.Vt lkp> lock "
"pointed to by the first argument."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:304
#, no-wrap
msgid "Dv KA_UNLOCKED"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:308
msgid ""
"Assert that the current thread has no lock on the E<.Vt lkp> lock pointed to "
"by the first argument."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:317
msgid ""
"In addition, one of the following optional assertions can be used with "
"either an E<.Dv KA_LOCKED>, E<.Dv KA_SLOCKED>, or E<.Dv KA_XLOCKED> "
"assertion:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:318
#, no-wrap
msgid "Dv KA_RECURSED"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:321
msgid "Assert that the current thread has a recursed lock on E<.Fa lkp>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:321
#, no-wrap
msgid "Dv KA_NOTRECURSED"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:324
msgid "Assert that the current thread does not have a recursed lock on E<.Fa lkp>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/lock.9:325
#, no-wrap
msgid "RETURN VALUES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:331
msgid ""
"The E<.Fn lockmgr> and E<.Fn lockmgr_rw> functions return 0 on success and "
"non-zero on failure."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:335
msgid "The E<.Fn lockstatus> function returns:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:338
msgid "An exclusive lock is held by the current thread."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:338
#, no-wrap
msgid "Dv LK_EXCLOTHER"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:340
msgid "An exclusive lock is held by someone other than the current thread."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:342
msgid "A shared lock is held."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:342
#, no-wrap
msgid "Li 0"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:344
msgid "The lock is not held by anyone."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/lock.9:345
#, no-wrap
msgid "ERRORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:350
msgid "E<.Fn lockmgr> and E<.Fn lockmgr_rw> fail if:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:351 /usr/src/share/man/man9/lock.9:354
#, no-wrap
msgid "Bq Er EBUSY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:354
msgid ""
"E<.Dv LK_FORCEUPGRADE> was requested and another thread had already "
"requested a lock upgrade."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:359
msgid ""
"E<.Dv LK_NOWAIT> was set, and a sleep would have been required, or E<.Dv "
"LK_TRYUPGRADE> operation was not able to upgrade the lock."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:359
#, no-wrap
msgid "Bq Er ENOLCK"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:366
msgid ""
"E<.Dv LK_SLEEPFAIL> was set and E<.Fn lockmgr> or E<.Fn lockmgr_rw> did "
"sleep."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:366
#, no-wrap
msgid "Bq Er EINTR"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:372
msgid ""
"E<.Dv PCATCH> was set in the lock priority, and a signal was delivered "
"during a sleep.  Note the E<.Er ERESTART> error below."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:372
#, no-wrap
msgid "Bq Er ERESTART"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:376
msgid ""
"E<.Dv PCATCH> was set in the lock priority, a signal was delivered during a "
"sleep, and the system call is to be restarted."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/lock.9:376
#, no-wrap
msgid "Bq Er EWOULDBLOCK"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:378
msgid "a non-zero timeout was given, and the timeout expired."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/lock.9:379
#, no-wrap
msgid "LOCKS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:395
msgid ""
"If E<.Dv LK_INTERLOCK> is passed in the E<.Fa flags> argument to E<.Fn "
"lockmgr> or E<.Fn lockmgr_rw>, the E<.Fa ilk> must be held prior to calling "
"E<.Fn lockmgr> or E<.Fn lockmgr_rw>, and will be returned unlocked."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:402
msgid ""
"Upgrade attempts that fail result in the loss of the lock that is currently "
"held.  Also, it is invalid to upgrade an exclusive lock, and a E<.Xr panic "
"9> will be the result of trying."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/lock.9:402
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:412
msgid ""
"E<.Xr condvar 9>, E<.Xr locking 9>, E<.Xr mtx_assert 9>, E<.Xr mutex 9>, "
"E<.Xr panic 9>, E<.Xr rwlock 9>, E<.Xr sleep 9>, E<.Xr sx 9>, E<.Xr "
"VOP_PRINT 9>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/lock.9:412
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/lock.9:414
msgid "This manual page was written by E<.An Chad David Aq Mt davidc@acns.ab.ca>."
msgstr ""
