# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/iflibdd.9:2
#, no-wrap
msgid "May 3, 2018"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/iflibdd.9:3
#, no-wrap
msgid "IFLIBDD 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/iflibdd.9:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:7
msgid "E<.Nm iflibdd>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/iflibdd.9:7
#, no-wrap
msgid "Device Dependent Configuration Functions"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/iflibdd.9:8
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/iflibdd.9:9
#, no-wrap
msgid "ifdi_if.h"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:10
#, no-wrap
msgid "Soft Queue Setup and Teardown Functions"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:11 /usr/src/share/man/man9/iflibdd.9:44 /usr/src/share/man/man9/iflibdd.9:77 /usr/src/share/man/man9/iflibdd.9:124
#, no-wrap
msgid "Mandatory Functions"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:32
msgid ""
"E<.Ft int> E<.Fo ifdi_tx_queues_alloc> E<.Fa \"if_ctx_t ctx\"> E<.Fa "
"\"caddr_t *vaddrs\"> E<.Fa \"uint64_t *paddrs\"> E<.Fa \"int ntxqs\"> E<.Fa "
"\"int ntxqsets\"> E<.Fc> E<.Ft int> E<.Fo ifdi_rx_queues_alloc> E<.Fa "
"\"if_ctx_t ctx\"> E<.Fa \"caddr_t *vaddrs\"> E<.Fa \"uint64_t *paddrs\"> "
"E<.Fa \"int nrxqs\"> E<.Fa \"int nrxqsets\"> E<.Fc> E<.Ft int> E<.Fo "
"ifdi_queues_free> E<.Fa \"if_ctx_t ctx\"> E<.Fc>"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:32 /usr/src/share/man/man9/iflibdd.9:57 /usr/src/share/man/man9/iflibdd.9:118 /usr/src/share/man/man9/iflibdd.9:159
#, no-wrap
msgid "Optional Functions"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:43
msgid ""
"E<.Ft int> E<.Fo ifdi_txq_setup> E<.Fa \"if_ctx_t ctx\"> E<.Fa \"uint16_t "
"qid\"> E<.Fc> E<.Ft int> E<.Fo ifdi_rxq_setup> E<.Fa \"if_ctx_t ctx\"> E<.Fa "
"\"uint16_t qid\"> E<.Fc>"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:43
#, no-wrap
msgid "Device Setup and Teardown Functions"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:57
msgid ""
"E<.Ft int> E<.Fo ifdi_attach_pre> E<.Fa \"if_ctx_t ctx\"> E<.Fc> E<.Ft int> "
"E<.Fo ifdi_attach_post> E<.Fa \"if_ctx_t ctx\"> E<.Fc> E<.Ft int> E<.Fo "
"ifdi_detach> E<.Fa \"if_ctx_t ctx\"> E<.Fc>"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:76
msgid ""
"E<.Ft void> E<.Fo ifdi_vlan_register> E<.Fa \"if_ctx_t ctx\"> E<.Fa "
"\"uint16_t vtag\"> E<.Fc> E<.Ft void> E<.Fo ifdi_vlan_unregister> E<.Fa "
"\"if_ctx_t ctx\"> E<.Fa \"uint16_t vtag\"> E<.Fc> E<.Ft int> E<.Fo "
"ifdi_suspend> E<.Fa \"if_ctx_t ctx\"> E<.Fc> E<.Ft int> E<.Fo ifdi_resume> "
"E<.Fa \"if_ctx_t ctx\"> E<.Fc>"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:76 /usr/src/share/man/man9/iflibdd.9:244
#, no-wrap
msgid "Device Configuration Functions"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:118
msgid ""
"E<.Ft void> E<.Fo ifdi_init> E<.Fa \"if_ctx_t ctx\"> E<.Fc> E<.Ft void> "
"E<.Fo ifdi_stop> E<.Fa \"if_ctx_t ctx\"> E<.Fc> E<.Ft void> E<.Fo "
"ifdi_multi_set> E<.Fa \"if_ctx_t ctx\"> E<.Fc> E<.Ft int> E<.Fo "
"ifdi_mtu_set> E<.Fa \"if_ctx_t ctx\"> E<.Fa \"uint32_t mtu\"> E<.Fc> E<.Ft "
"void> E<.Fo ifdi_media_status> E<.Fa \"if_ctx_t ctx\"> E<.Fa \"struct "
"ifmediareq *ifr\"> E<.Fc> E<.Ft int> E<.Fo ifdi_media_change> E<.Fa "
"\"if_ctx_t ctx\"> E<.Fc> E<.Ft void> E<.Fo ifdi_promisc_set> E<.Fa "
"\"if_ctx_t ctx\"> E<.Fa \"int flags\"> E<.Fc> E<.Ft uint64_t> E<.Fo "
"ifdi_get_counter> E<.Fa \"if_ctx_t ctx\"> E<.Fa \"ift_counter cnt\"> E<.Fc> "
"E<.Ft void> E<.Fo ifdi_update_admin_status> E<.Fa \"if_ctx_t ctx\"> E<.Fc>"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:123
msgid "E<.Ft void> E<.Fo ifdi_media_set> E<.Fa \"if_ctx_t ctx\"> E<.Fc>"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:123
#, no-wrap
msgid "Interrupt enable/disable"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:138
msgid ""
"E<.Ft void> E<.Fo ifdi_intr_enable> E<.Fa \"if_ctx_t ctx\"> E<.Fc> E<.Ft "
"void> E<.Fo ifdi_queue_intr_enable> E<.Fa \"if_ctx_t ctx\"> E<.Fa \"uint16_t "
"qid\"> E<.Fc> E<.Ft void> E<.Fo ifdi_intr_disable> E<.Fa \"if_ctx_t ctx\"> "
"E<.Fc>"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:138
#, no-wrap
msgid "IOV Support"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:159
msgid ""
"E<.Ft init> E<.Fo iov_init> E<.Fa \"if_ctx_t ctx\"> E<.Fa \"uint16_t "
"num_vfs\"> E<.Fa \"const nvlist_t *params\"> E<.Fc> E<.Ft void> E<.Fo "
"iov_uinit> E<.Fa \"if_ctx_t ctx\"> E<.Fc> E<.Ft void> E<.Fo "
"ifdi_vflr_handle> E<.Fa \"if_ctx_t ctx\"> E<.Fc> E<.Ft int> E<.Fo "
"ifdi_vf_add> E<.Fa \"if_ctx_t ctx\"> E<.Fa \"uint16_t vfnum\"> E<.Fa \"const "
"nvlist_t *params\"> E<.Fc>"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:164
msgid "E<.Ft void> E<.Fo ifdi_link_intr_enable> E<.Fa \"if_ctx_t ctx\"> E<.Fc>"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:164
#, no-wrap
msgid "Optional Service Routines"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:173
msgid ""
"E<.Ft void> E<.Fo ifdi_timer> E<.Fa \"if_ctx_t ctx\"> E<.Fc> E<.Ft void> "
"E<.Fo ifdi_watchdog_reset> E<.Fa \"if_ctx_t ctx\"> E<.Fc>"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:173 /usr/src/share/man/man9/iflibdd.9:306
#, no-wrap
msgid "Additional Functions"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:189
msgid ""
"E<.Ft void> E<.Fo ifdi_led_func> E<.Fa \"if_ctx_t ctx\"> E<.Fa \"int "
"onoff\"> E<.Fc> E<.Ft int> E<.Fo ifdi_sysctl_int_delay> E<.Fa \"if_ctx_t "
"ctx\"> E<.Fa \"if_int_delay_info_t iidi\"> E<.Fc> E<.Ft int> E<.Fo "
"ifdi_i2c_req> E<.Fa \"if_ctx_t ctx\"> E<.Fa \"struct ifi2creq *req\"> E<.Fc>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/iflibdd.9:189
#, no-wrap
msgid "FUNCTIONS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:194
msgid ""
"The above named functions are device dependent configuration functions.  "
"These routines are registered with iflib by the driver and are called from "
"the corresponding iflib function to configure device specific functions and "
"registers."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:194
#, no-wrap
msgid "Device Dependent Functions"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:195
#, no-wrap
msgid "Soft Queue Setup and Teardown"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:197
#, no-wrap
msgid "Fn ifdi_tx_queues_alloc"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:204
msgid ""
"Mandatory function that is called during iflib_attach to allocate transmit "
"queues.  vaddrs and paddrs are arrays of virtual and physical addresses "
"respectively of the hardware transmit queues.  ntxqs is the number of queues "
"per qset.  ntxqsets is the number of qsets."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:204
#, no-wrap
msgid "Fn ifdi_rx_queues_alloc"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:211
msgid ""
"Mandatory function that is called during iflib_attach to allocate receive "
"queues.  vaddrs and paddrs are arrays of virtual and physical addresses "
"respectively of the hardware receive queues.  nrxqs is the number of queues "
"per qset.  nrxqsets is the number of qsets."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:211
#, no-wrap
msgid "Fn ifdi_queues_free"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:214
msgid ""
"Mandatory function that frees the allocated queues and associated transmit "
"buffers."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:214
#, no-wrap
msgid "Fn ifdi_txq_setup"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:217
msgid ""
"Optional function for each transmit queue that handles device specific "
"initialization."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:217
#, no-wrap
msgid "Fn ifdi_rxq_setup"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:220
msgid ""
"Optional function for each receive queue that handles device specific "
"initialization."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:221
#, no-wrap
msgid "Device Setup and Teardown"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:223
#, no-wrap
msgid "Fn ifdi_attach_pre"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:226
msgid ""
"Mandatory function implemented by the driver to perform any attach logic "
"that procedes interrupt and queue allocation, queue setup, and interrupt "
"assignment."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:226
#, no-wrap
msgid "Fn ifdi_attach_post"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:230
msgid ""
"Mandatory function implemented by the driver to perform any attach logic "
"that occurs after ifdi_attach_pre, and iflib's queue setup and MSI/MSIX(X) "
"or legacy interrupt assignment."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:230
#, no-wrap
msgid "Fn ifdi_detach"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:233
msgid ""
"Mandatory function that frees any resources allocated by the driver in "
"ifdi_attach_pre and ifdi_attach_post."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:233
#, no-wrap
msgid "Fn ifdi_vlan_register"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:237
msgid ""
"Optional function called by the VLAN config eventhandler.  E<.Va vtag> is "
"the new VLAN tag."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:237
#, no-wrap
msgid "Fn ifdi_vlan_unregister"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:239
msgid "Optional function called by the VLAN unconfig eventhandler."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:239
#, no-wrap
msgid "Fn ifdi_suspend"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:241
msgid "Optional function that suspends the driver."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:241
#, no-wrap
msgid "Fn ifdi_resume"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:243
msgid "Optional function that resumes a driver."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:246
#, no-wrap
msgid "Fn ifdi_init"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:252
msgid ""
"Mandatory function that will initialize and bring up the hardware.  For "
"example, it will reset the chip and enable the receiver unit.  It should "
"mark the interface running, but not active ( E<.Dv IFF_DRV_RUNNING>, E<.Dv "
"~IIF_DRV_OACTIVE ).>"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:252
#, no-wrap
msgid "Fn ifdi_stop"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:255
msgid ""
"Mandatory function that should disable all traffic on the interface by "
"issuing a global reset on the MAC and deallocating the TX and RX buffers."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:255
#, no-wrap
msgid "Fn ifdi_multi_set"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:257
msgid "Programs the interfaces multicast addresses"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:257
#, no-wrap
msgid "Fn ifdi_media_status"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:262
msgid ""
"Media Ioctl Callback.  Function is called whenever the user queries the "
"status of the interface using E<.Xr ifconfig 8>.  The driver sets the "
"appropriate link type and speed in ifmr-E<gt>ifm_active."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:262
#, no-wrap
msgid "Fn ifdi_mtu_set"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:264
msgid "Sets the mtu interface to the value of the second function parameter mtu."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:264
#, no-wrap
msgid "Fn ifdi_media_change"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:268
msgid ""
"Function is called when the user changes speed/duplex using the "
"media/mediaopt option with E<.Xr ifconfig 8>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:268
#, no-wrap
msgid "Fn ifdi_promisc_set"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:274
msgid ""
"Enables or disables promisc settings depending upon the flags value.  E<.Va "
"flags> contains the interface's E<.Xr ifnet 9> flags."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:274
#, no-wrap
msgid "Fn ifdi_get_counter"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:276
msgid "Returns the value for counter cnt depending upon counter type."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:276
#, no-wrap
msgid "Fn ifdi_update_admin_status"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:279
msgid ""
"Sets the link_up state to TRUE or FALSE depending upon the OS link state.  A "
"real check of the hardware only happens with a link interrupt."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:279
#, no-wrap
msgid "Fn ifdi_media_set"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:281
msgid "Need to define"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:282
#, no-wrap
msgid "Interrupt Enable/Disable"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:284
#, no-wrap
msgid "Fn ifdi_intr_enable"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:286
msgid "Mandatory function that enables all interrupts."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:286
#, no-wrap
msgid "Fn ifdi_intr_disable"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:288
msgid "Mandatory function that disables all interrupts."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:288
#, no-wrap
msgid "Fn ifdi_queue_intr_enable"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:290
msgid "Mandatory function that enables interrupts on queue qid."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:290
#, no-wrap
msgid "Fn iov_init"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:292
msgid "Initialize num_vfs VFs."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:292
#, no-wrap
msgid "Fn io_uninit"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:294
msgid "Tear down the context for all VFs."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:294
#, no-wrap
msgid "Fn ifdi_vflr_handle"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:296
msgid "Handle any VFs that have reset themselves via a Function Level Reset (FLR)."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:296
#, no-wrap
msgid "Fn ifdi_vf_add"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:298
msgid "Set parameters in params in VF vfnum."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/iflibdd.9:299
#, no-wrap
msgid "Service Routines"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:301
#, no-wrap
msgid "Fn ifdi_timer"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:303
msgid "Optional timer routine that will be run every 500ms."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:303
#, no-wrap
msgid "Fn ifdi_watchdog_reset"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:305
msgid "Optional function to run when a transmit queue is hung."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:308
#, no-wrap
msgid "Fn ifdi_led_func"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:309
#, no-wrap
msgid "Fn ifdi_sysctl_int_delay"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/iflibdd.9:310
#, no-wrap
msgid "Fn ifdi_i2c_req"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/iflibdd.9:312
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:317
msgid "E<.Xr ifconfig 8>, E<.Xr iflibdi 9>, E<.Xr iflibtxrx 9>, E<.Xr ifnet 9>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/iflibdd.9:317
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/iflibdd.9:319
msgid "This manual page was written by E<.An Nicole Graziano>"
msgstr ""
