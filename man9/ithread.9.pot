# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/ithread.9:26
#, no-wrap
msgid "August 25, 2006"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/ithread.9:27
#, no-wrap
msgid "ITHREAD 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ithread.9:29
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:36
msgid ""
"E<.Nm ithread_add_handler>, E<.Nm ithread_create>, E<.Nm ithread_destroy>, "
"E<.Nm ithread_priority>, E<.Nm ithread_remove_handler>, E<.Nm "
"ithread_schedule>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/ithread.9:36
#, no-wrap
msgid "kernel interrupt threads"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ithread.9:37
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ithread.9:38
#, no-wrap
msgid "sys/param.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ithread.9:39
#, no-wrap
msgid "sys/bus.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ithread.9:40
#, no-wrap
msgid "sys/interrupt.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:69
msgid ""
"E<.Ft int> E<.Fo ithread_add_handler> E<.Fa \"struct ithd *ithread\"> E<.Fa "
"\"const char *name\"> E<.Fa \"driver_intr_t handler\"> E<.Fa \"void *arg\"> "
"E<.Fa \"u_char pri\"> E<.Fa \"enum intr_type flags\"> E<.Fa \"void "
"**cookiep\"> E<.Fc> E<.Ft int> E<.Fo ithread_create> E<.Fa \"struct ithd "
"**ithread\"> E<.Fa \"int vector\"> E<.Fa \"int flags\"> E<.Fa \"void "
"(*disable)(int)\"> E<.Fa \"void (*enable)(int)\"> E<.Fa \"const char *fmt\"> "
"E<.Fa \"...\"> E<.Fc> E<.Ft int> E<.Fn ithread_destroy \"struct ithd "
"*ithread\"> E<.Ft u_char> E<.Fn ithread_priority \"enum intr_type flags\"> "
"E<.Ft int> E<.Fn ithread_remove_handler \"void *cookie\"> E<.Ft int> E<.Fn "
"ithread_schedule \"struct ithd *ithread\" \"int do_switch\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ithread.9:69
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:83
msgid ""
"Interrupt threads are kernel threads that run a list of handlers when "
"triggered by either a hardware or software interrupt.  Each interrupt "
"handler has a name, handler function, handler argument, priority, and "
"various flags.  Each interrupt thread maintains a list of handlers sorted by "
"priority.  This results in higher priority handlers being executed prior to "
"lower priority handlers.  Each thread assumes the priority of its highest "
"priority handler for its process priority, or E<.Dv PRIO_MAX> if it has no "
"handlers.  Interrupt threads are also associated with a single interrupt "
"source, represented as a vector number."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:116
msgid ""
"The E<.Fn ithread_create> function creates a new interrupt thread.  The "
"E<.Fa ithread> argument points to an E<.Vt struct ithd> pointer that will "
"point to the newly created thread upon success.  The E<.Fa vector> argument "
"specifies the interrupt source to associate this thread with.  The E<.Fa "
"flags> argument is a mask of properties of this thread.  The only valid flag "
"currently for E<.Fn ithread_create> is E<.Dv IT_SOFT> to specify that this "
"interrupt thread is a software interrupt.  The E<.Fa enable> and E<.Fa "
"disable> arguments specify optional functions used to enable and disable "
"this interrupt thread's interrupt source.  The functions receive the vector "
"corresponding to the thread's interrupt source as their only argument.  The "
"remaining arguments form a E<.Xr printf 9> argument list that is used to "
"build the base name of the new ithread.  The full name of an interrupt "
"thread is formed by concatenating the base name of an interrupt thread with "
"the names of all of its interrupt handlers."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:122
msgid ""
"The E<.Fn ithread_destroy> function destroys a previously created interrupt "
"thread by releasing its resources and arranging for the backing kernel "
"thread to terminate.  An interrupt thread can only be destroyed if it has no "
"handlers remaining."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:144
msgid ""
"The E<.Fn ithread_add_handler> function adds a new handler to an existing "
"interrupt thread specified by E<.Fa ithread>.  The E<.Fa name> argument "
"specifies a name for this handler.  The E<.Fa handler> and E<.Fa arg> "
"arguments provide the function to execute for this handler and an argument "
"to pass to it.  The E<.Fa pri> argument specifies the priority of this "
"handler and is used both in sorting it in relation to the other handlers for "
"this thread and to specify the priority of the backing kernel thread.  The "
"E<.Fa flags> argument can be used to specify properties of this handler as "
"defined in"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ithread.9:144
#, no-wrap
msgid "sys/bus.h ."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:151
msgid ""
"If E<.Fa cookiep> is not E<.Dv NULL>, then it will be assigned a cookie that "
"can be used later to remove this handler."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:158
msgid ""
"The E<.Fn ithread_remove_handler> removes a handler from an interrupt "
"thread.  The E<.Fa cookie> argument specifies the handler to remove from its "
"thread."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:166
msgid ""
"The E<.Fn ithread_schedule> function schedules an interrupt thread to run.  "
"If the E<.Fa do_switch> argument is non-zero and the interrupt thread is "
"idle, then a context switch will be forced after putting the interrupt "
"thread on the run queue."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:172
msgid ""
"The E<.Fn ithread_priority> function translates the E<.Dv INTR_TYPE_*> "
"interrupt flags into interrupt handler priorities."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:193
msgid ""
"The interrupt flags not related to the type of a particular interrupt E<.Pq "
"Dv INTR_TYPE_*> can be used to specify additional properties of both "
"hardware and software interrupt handlers.  The E<.Dv INTR_EXCL> flag "
"specifies that this handler cannot share an interrupt thread with another "
"handler.  The E<.Dv INTR_MPSAFE> flag specifies that this handler is MP safe "
"in that it does not need the Giant mutex to be held while it is executed.  "
"The E<.Dv INTR_ENTROPY> flag specifies that the interrupt source this "
"handler is tied to is a good source of entropy, and thus that entropy should "
"be gathered when an interrupt from the handler's source triggers.  "
"Presently, the E<.Dv INTR_ENTROPY> flag is not valid for software interrupt "
"handlers."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:199
msgid ""
"It is not permitted to sleep in an interrupt thread; hence, any memory or "
"zone allocations in an interrupt thread should be specified with the E<.Dv "
"M_NOWAIT> flag set.  Any allocation errors must be handled thereafter."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ithread.9:199
#, no-wrap
msgid "RETURN VALUES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:212
msgid ""
"The E<.Fn ithread_add_handler>, E<.Fn ithread_create>, E<.Fn "
"ithread_destroy>, E<.Fn ithread_remove_handler>, and E<.Fn ithread_schedule> "
"functions return zero on success and non-zero on failure.  The E<.Fn "
"ithread_priority> function returns a process priority corresponding to the "
"passed in interrupt flags."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ithread.9:212
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:219
msgid ""
"The E<.Fn swi_add> function demonstrates the use of E<.Fn ithread_create> "
"and E<.Fn ithread_add_handler>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:227
#, no-wrap
msgid ""
"int\n"
"swi_add(struct ithd **ithdp, const char *name, driver_intr_t handler,\n"
"\t    void *arg, int pri, enum intr_type flags, void **cookiep)\n"
"{\n"
"\tstruct proc *p;\n"
"\tstruct ithd *ithd;\n"
"\tint error;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:230
#, no-wrap
msgid ""
"\tif (flags & INTR_ENTROPY)\n"
"\t\treturn (EINVAL);\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:232
#, no-wrap
msgid "\tithd = (ithdp != NULL) ? *ithdp : NULL;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:241
#, no-wrap
msgid ""
"\tif (ithd != NULL) {\n"
"\t\tif ((ithd-E<gt>it_flags & IT_SOFT) == 0)\n"
"\t\t\treturn(EINVAL);\n"
"\t} else {\n"
"\t\terror = ithread_create(&ithd, pri, IT_SOFT, NULL, NULL,\n"
"\t\t    \"swi%d:\", pri);\n"
"\t\tif (error)\n"
"\t\t\treturn (error);\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:248
#, no-wrap
msgid ""
"\t\tif (ithdp != NULL)\n"
"\t\t\t*ithdp = ithd;\n"
"\t}\n"
"\treturn (ithread_add_handler(ithd, name, handler, arg, pri + PI_SOFT,\n"
"\t\t    flags, cookiep));\n"
"}\n"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ithread.9:249
#, no-wrap
msgid "ERRORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:253
msgid "The E<.Fn ithread_add_handler> function will fail if:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ithread.9:254 /usr/src/share/man/man9/ithread.9:262 /usr/src/share/man/man9/ithread.9:285 /usr/src/share/man/man9/ithread.9:299 /usr/src/share/man/man9/ithread.9:304 /usr/src/share/man/man9/ithread.9:314 /usr/src/share/man/man9/ithread.9:325 /usr/src/share/man/man9/ithread.9:330
#, no-wrap
msgid "Bq Er EINVAL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:262
msgid ""
"Any of the E<.Fa ithread>, E<.Fa handler>, or E<.Fa name> arguments are "
"E<.Dv NULL>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:270
msgid ""
"The E<.Dv INTR_EXCL> flag is specified and the interrupt thread E<.Fa "
"ithread> already has at least one handler, or the interrupt thread E<.Fa "
"ithread> already has an exclusive handler."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ithread.9:270 /usr/src/share/man/man9/ithread.9:291
#, no-wrap
msgid "Bq Er ENOMEM"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:272
msgid "Could not allocate needed memory for this handler."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:277
msgid "The E<.Fn ithread_create> function will fail if:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ithread.9:278
#, no-wrap
msgid "Bq Er EAGAIN"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:285
msgid ""
"The system-imposed limit on the total number of processes under execution "
"would be exceeded.  The limit is given by the E<.Xr sysctl 3> MIB variable "
"E<.Dv KERN_MAXPROC>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:291
msgid ""
"A flag other than E<.Dv IT_SOFT> was specified in the E<.Fa flags> "
"parameter."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:293
msgid "Could not allocate needed memory for this interrupt thread."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:298
msgid "The E<.Fn ithread_destroy> function will fail if:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:304 /usr/src/share/man/man9/ithread.9:330
msgid "The E<.Fa ithread> argument is E<.Dv NULL>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:308
msgid "The interrupt thread pointed to by E<.Fa ithread> has at least one handler."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:313
msgid "The E<.Fn ithread_remove_handler> function will fail if:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:319
msgid "The E<.Fa cookie> argument is E<.Dv NULL>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:324
msgid "The E<.Fn ithread_schedule> function will fail if:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:334
msgid "The interrupt thread pointed to by E<.Fa ithread> has no interrupt handlers."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ithread.9:335
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:340
msgid "E<.Xr kthread 9>, E<.Xr malloc 9>, E<.Xr swi 9>, E<.Xr uma 9>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ithread.9:340
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:343
msgid "Interrupt threads and their corresponding API first appeared in E<.Fx 5.0>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ithread.9:343
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ithread.9:350
msgid ""
"Currently E<.Vt struct ithd> represents both an interrupt source and an "
"interrupt thread.  There should be a separate E<.Vt struct isrc> that "
"contains a vector number, enable and disable functions, etc.\\& that an "
"ithread holds a reference to."
msgstr ""
