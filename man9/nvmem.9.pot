# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/nvmem.9:25
#, no-wrap
msgid "July 24, 2018"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/nvmem.9:26
#, no-wrap
msgid "nvmem 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/nvmem.9:28
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:35
msgid ""
"E<.Nm nvmem> E<.Nm nvmem_get_cell_len>, E<.Nm nvmem_read_cell_by_name>, "
"E<.Nm nvmem_read_cell_by_idx>, E<.Nm nvmem_write_cell_by_name>, E<.Nm "
"nvmem_write_cell_by_idx>,"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/nvmem.9:35
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:39
msgid ""
"E<.Cd \"options EXT_RESOURCES\"> E<.Cd \"options FDT\"> E<.Cd \"device "
"nvmem\">"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/nvmem.9:39
#, no-wrap
msgid "sys/extres/nvmem/nvmem.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:50
msgid ""
"E<.Ft int> E<.Fn nvmem_get_cell_len \"phandle_t node\" \"const char *name\"> "
"E<.Ft int> E<.Fn nvmem_read_cell_by_name \"phandle_t node\" \"const char "
"*name\" \"void *cell\" \"size_t buflen\"> E<.Ft int> E<.Fn "
"nvmem_read_cell_by_idx \"phandle_t node\" \"int idx\" \"void *cell\" "
"\"size_t buflen\"> E<.Ft int> E<.Fn nvmem_write_cell_by_name \"phandle_t "
"node\" \"const char *name\" \"void *cell\" \"size_t buflen\"> E<.Ft int> "
"E<.Fn nvmem_write_cell_by_idx \"phandle_t node\" \"int idx\" \"void *cell\" "
"\"size_t buflen\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/nvmem.9:50
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:53
msgid ""
"On some embedded boards, the manufacturer stored some data on a NVMEM "
"(Non-Volatile Memory), this is generally stored in some eeprom or fuses."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:58
msgid ""
"The E<.Nm> API consist of helpers functions for consumer and device methods "
"for providers."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/nvmem.9:58
#, no-wrap
msgid "FUNCTIONS"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/nvmem.9:60
#, no-wrap
msgid "Fn nvmem_get_cell_len \"phandle_t node\" \"const char *name\""
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:63
msgid ""
"Get the size of the cell base on the reg property on the node.  Return the "
"size or ENOENT if the cell name wasn't found"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/nvmem.9:63
#, no-wrap
msgid ""
"Fn nvmem_read_cell_by_name \"phandle_t node\" \"const char *name\" \"void "
"*cell\" \"size_t buflen\""
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:67
msgid ""
"Get the cell content based on the name.  Return 0 on sucess or ENOENT if the "
"cell doesn't exists, ENXIO if no provider device was found, EINVAL if the "
"size isn't correct."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/nvmem.9:67
#, no-wrap
msgid ""
"Fn nvmem_read_cell_by_idx \"phandle_t node\" \"int idx\" \"void *cell\" "
"\"size_t buflen\""
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:71
msgid ""
"Get the cell content based on the id.  Return 0 on sucess or ENOENT if the "
"cell doesn't exists, ENXIO if no provider device was found, EINVAL if the "
"size isn't correct."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/nvmem.9:71
#, no-wrap
msgid ""
"Fn nvmem_write_cell_by_name \"phandle_t node\" \"const char *name\" \"void "
"*cell\" \"size_t buflen\""
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:75
msgid ""
"Write the cell content based on the name.  Return 0 on sucess or ENOENT if "
"the cell doesn't exists, ENXIO if no provider device was found, EINVAL if "
"the size isn't correct."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/nvmem.9:75
#, no-wrap
msgid ""
"Fn nvmem_write_cell_by_idx \"phandle_t node\" \"int idx\" \"void *cell\" "
"\"size_t buflen\""
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:79
msgid ""
"Write the cell content based on the id.  Return 0 on sucess or ENOENT if the "
"cell doesn't exists, ENXIO if no provider device was found, EINVAL if the "
"size isn't correct."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/nvmem.9:80
#, no-wrap
msgid "DEVICE METHODS"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/nvmem.9:82
#, no-wrap
msgid ""
"Fn nvmem_read \"device_t dev\" \"uint32_t offset\" \"uint32_t size\" "
"\"uint8_t *buffer\""
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:84
msgid "Provider device method to read a cell content."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/nvmem.9:84
#, no-wrap
msgid ""
"Fn nvmem_write \"device_t dev\" \"uint32_t offset\" \"uint32_t size\" "
"\"uint8_t *buffer\""
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:86
msgid "Provider device method to write a cell content."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/nvmem.9:87
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:89
msgid "Consider this DTS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:99
#, no-wrap
msgid ""
"/* Provider */\n"
"eeprom: eeprom@20000 {\n"
"\tboard_id: id@0 {\n"
"\t\treg = E<lt>0x0 0x4E<gt>;\n"
"\t};\n"
"};\n"
"/* Consumer */\n"
"device@30000 {\n"
"\t...\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:103
#, no-wrap
msgid ""
"\tnvmem-cells = E<lt>&board_idE<gt>\n"
"\tnvmem-cell-names = \"boardid\";\n"
"};\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:106
msgid "The device driver for eeprom@20000 needs to expose itself as a provider"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:108
#, no-wrap
msgid "#include \"nvmem_if.h\"\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:114
#, no-wrap
msgid ""
"int\n"
"foo_nvmem_read(device_t dev, uint32_t offset, uint32_t size, uint8_t "
"*buffer)\n"
"{\n"
"\t/* Read the data */\n"
"}\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:119
#, no-wrap
msgid ""
"int\n"
"foo_attach(device_t dev)\n"
"{\n"
"\tphandle_t node;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:124
#, no-wrap
msgid ""
"\tnode = ofw_bus_get_node(dev);\n"
"\t...\n"
"\t/* Registering the device so the consumers can find us */\n"
"\tOF_device_register_xref(OF_xref_from_node(node), dev);\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:127
#, no-wrap
msgid ""
"\t...\n"
"}\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:130
#, no-wrap
msgid ""
"static device_method_t foo_methods[] = {\n"
"\t...\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:133
#, no-wrap
msgid ""
"\t/* nvmem interface */\n"
"\tDEVMETHOD(nvmem_read, foo_nvmem_read),\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:137
#, no-wrap
msgid ""
"\t/* Terminate method list */\n"
"\tDEVMETHOD_END\n"
"};\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:140
msgid "The consumer device driver for device@30000 can now read the nvmem data"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:146
#, no-wrap
msgid ""
"int\n"
"bar_attach(device_t dev)\n"
"{\n"
"\tphandle_t node;\n"
"\tuint32_t boardid;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:152
#, no-wrap
msgid ""
"\t...\n"
"\tnode = ofw_bus_get_node(dev);\n"
"\tnvmem_read_cell_by_name(node, \"boardid\", (void *)&boardid, "
"sizeof(boardid));\n"
"\t...\n"
"}\n"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/nvmem.9:153
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/nvmem.9:157
msgid ""
"The nvmem related function first appear in E<.Fx 12.0>.  The nvmem interface "
"and manual page was written by E<.An Emmanuel Vadot Aq Mt manu@FreeBSD.org>."
msgstr ""
