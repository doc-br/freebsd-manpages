# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:29-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/cpuset.9:27
#, no-wrap
msgid "July 29, 2016"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/cpuset.9:28
#, no-wrap
msgid "CPUSET 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/cpuset.9:30
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:58
msgid ""
"E<.Nm cpuset(9)> \\(em E<.Nm CPUSET_T_INITIALIZER>, E<.Nm CPUSET_FSET>, "
"E<.Nm CPU_CLR>, E<.Nm CPU_COPY>, E<.Nm CPU_ISSET>, E<.Nm CPU_SET>, E<.Nm "
"CPU_ZERO>, E<.Nm CPU_FILL>, E<.Nm CPU_SETOF>, E<.Nm CPU_EMPTY>, E<.Nm "
"CPU_ISFULLSET>, E<.Nm CPU_FFS>, E<.Nm CPU_COUNT>, E<.Nm CPU_SUBSET>, E<.Nm "
"CPU_OVERLAP>, E<.Nm CPU_CMP>, E<.Nm CPU_OR>, E<.Nm CPU_AND>, E<.Nm "
"CPU_NAND>, E<.Nm CPU_CLR_ATOMIC>, E<.Nm CPU_SET_ATOMIC>, E<.Nm "
"CPU_SET_ATOMIC_ACQ>, E<.Nm CPU_AND_ATOMIC>, E<.Nm CPU_OR_ATOMIC>, E<.Nm "
"CPU_COPY_STORE_REL>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/cpuset.9:58
#, no-wrap
msgid "cpuset manipulation macros"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/cpuset.9:59
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/cpuset.9:60
#, no-wrap
msgid "sys/_cpuset.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/cpuset.9:61 /usr/src/share/man/man9/cpuset.9:332
#, no-wrap
msgid "sys/cpuset.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:100
msgid ""
"E<.Fn CPUSET_T_INITIALIZER \"ARRAY_CONTENTS\"> E<.Vt CPUSET_FSET> E<.Fn "
"CPU_CLR \"size_t cpu_idx\" \"cpuset_t *cpuset\"> E<.Fn CPU_COPY \"cpuset_t "
"*from\" \"cpuset_t *to\"> E<.Ft bool> E<.Fn CPU_ISSET \"size_t cpu_idx\" "
"\"cpuset_t *cpuset\"> E<.Fn CPU_SET \"size_t cpu_idx\" \"cpuset_t *cpuset\"> "
"E<.Fn CPU_ZERO \"cpuset_t *cpuset\"> E<.Fn CPU_FILL \"cpuset_t *cpuset\"> "
"E<.Fn CPU_SETOF \"size_t cpu_idx\" \"cpuset_t *cpuset\"> E<.Ft bool> E<.Fn "
"CPU_EMPTY \"cpuset_t *cpuset\"> E<.Ft bool> E<.Fn CPU_ISFULLSET \"cpuset_t "
"*cpuset\"> E<.Ft int> E<.Fn CPU_FFS \"cpuset_t *cpuset\"> E<.Ft int> E<.Fn "
"CPU_COUNT \"cpuset_t *cpuset\"> E<.Ft bool> E<.Fn CPU_SUBSET \"cpuset_t "
"*haystack\" \"cpuset_t *needle\"> E<.Ft bool> E<.Fn CPU_OVERLAP \"cpuset_t "
"*cpuset1\" \"cpuset_t *cpuset2\"> E<.Ft bool> E<.Fn CPU_CMP \"cpuset_t "
"*cpuset1\" \"cpuset_t *cpuset2\"> E<.Fn CPU_OR \"cpuset_t *dst\" \"cpuset_t "
"*src\"> E<.Fn CPU_AND \"cpuset_t *dst\" \"cpuset_t *src\"> E<.Fn CPU_NAND "
"\"cpuset_t *dst\" \"cpuset_t *src\"> E<.Fn CPU_CLR_ATOMIC \"size_t cpu_idx\" "
"\"cpuset_t *cpuset\"> E<.Fn CPU_SET_ATOMIC \"size_t cpu_idx\" \"cpuset_t "
"*cpuset\"> E<.Fn CPU_SET_ATOMIC_ACQ \"size_t cpu_idx\" \"cpuset_t *cpuset\"> "
"E<.Fn CPU_AND_ATOMIC \"cpuset_t *dst\" \"cpuset_t *src\"> E<.Fn "
"CPU_OR_ATOMIC \"cpuset_t *dst\" \"cpuset_t *src\"> E<.Fn CPU_COPY_STORE_REL "
"\"cpuset_t *from\" \"cpuset_t *to\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/cpuset.9:100
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:114
msgid ""
"The E<.Nm> family of macros provide a flexible and efficient CPU set "
"implementation, backed by the E<.Xr bitset 9> macros.  Each CPU is "
"represented by a single bit.  The maximum number of CPUs representable by "
"E<.Vt cpuset_t> is E<.Va MAXCPU>.  Individual CPUs in cpusets are referenced "
"with indices zero through E<.Fa MAXCPU - 1>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:120
msgid ""
"The E<.Fn CPUSET_T_INITIALIZER> macro allows one to initialize a E<.Vt "
"cpuset_t> with a compile time literal value."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:133
msgid ""
"The E<.Fn CPUSET_FSET> macro defines a compile time literal, usable by E<.Fn "
"CPUSET_T_INITIALIZER>, representing a full cpuset (all CPUs present).  For "
"examples of E<.Fn CPUSET_T_INITIALIZER> and E<.Fn CPUSET_FSET> usage, see "
"the E<.Sx CPUSET_T_INITIALIZER EXAMPLE> section."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:144
msgid ""
"The E<.Fn CPU_CLR> macro removes CPU E<.Fa cpu_idx> from the cpuset pointed "
"to by E<.Fa cpuset>.  The E<.Fn CPU_CLR_ATOMIC> macro is identical, but the "
"bit representing the CPU is cleared with atomic machine instructions."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:162
msgid ""
"The E<.Fn CPU_COPY> macro copies the contents of the cpuset E<.Fa from> to "
"the cpuset E<.Fa to>.  E<.Fn CPU_COPY_STORE_REL> is similar, but copies "
"component machine words from E<.Fa from> and writes them to E<.Fa to> with "
"atomic store with release semantics.  (That is, if E<.Fa to> is composed of "
"multiple machine words, E<.Fn CPU_COPY_STORE_REL> performs multiple "
"individually atomic operations.)"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:177
msgid ""
"The E<.Fn CPU_SET> macro adds CPU E<.Fa cpu_idx> to the cpuset pointed to by "
"E<.Fa cpuset>, if it is not already present.  The E<.Fn CPU_SET_ATOMIC> "
"macro is identical, but the bit representing the CPU is set with atomic "
"machine instructions.  The E<.Fn CPU_SET_ATOMIC_ACQ> macro sets the bit "
"representing the CPU with atomic acquire semantics."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:182
msgid "The E<.Fn CPU_ZERO> macro removes all CPUs from E<.Fa cpuset>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:187
msgid "The E<.Fn CPU_FILL> macro adds all CPUs to E<.Fa cpuset>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:194
msgid ""
"The E<.Fn CPU_SETOF> macro removes all CPUs in E<.Fa cpuset> before adding "
"only CPU E<.Fa cpu_idx>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:202
msgid "The E<.Fn CPU_EMPTY> macro returns E<.Dv true> if E<.Fa cpuset> is empty."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:210
msgid ""
"The E<.Fn CPU_ISFULLSET> macro returns E<.Dv true> if E<.Fa cpuset> is full "
"(the set of all CPUs)."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:227
msgid ""
"The E<.Fn CPU_FFS> macro returns the 1-index of the first (lowest) CPU in "
"E<.Fa cpuset>, or zero if E<.Fa cpuset> is empty.  Like with E<.Xr ffs 3>, "
"to use the non-zero result of E<.Fn CPU_FFS> as a E<.Fa cpu_idx> index "
"parameter to any other E<.Nm> macro, you must subtract one from the result."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:232
msgid ""
"The E<.Fn CPU_COUNT> macro returns the total number of CPUs in E<.Fa "
"cpuset>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:241
msgid ""
"The E<.Fn CPU_SUBSET> macro returns E<.Dv true> if E<.Fa needle> is a subset "
"of E<.Fa haystack>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:256
msgid ""
"The E<.Fn CPU_OVERLAP> macro returns E<.Dv true> if E<.Fa cpuset1> and E<.Fa "
"cpuset2> have any common CPUs.  (That is, if E<.Fa cpuset1> AND E<.Fa "
"cpuset2> is not the empty set.)"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:265
msgid ""
"The E<.Fn CPU_CMP> macro returns E<.Dv true> if E<.Fa cpuset1> is NOT equal "
"to E<.Fa cpuset2>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:288
msgid ""
"The E<.Fn CPU_OR> macro adds CPUs present in E<.Fa src> to E<.Fa dst>.  (It "
"is the E<.Nm> equivalent of the scalar: E<.Fa dst> |= E<.Fa src>.)  E<.Fn "
"CPU_OR_ATOMIC> is similar, but sets the bits representing CPUs in the "
"component machine words in E<.Fa dst> with atomic machine instructions.  "
"(That is, if E<.Fa dst> is composed of multiple machine words, E<.Fn "
"CPU_OR_ATOMIC> performs multiple individually atomic operations.)"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:304
msgid ""
"The E<.Fn CPU_AND> macro removes CPUs absent from E<.Fa src> from E<.Fa "
"dst>.  (It is the E<.Nm> equivalent of the scalar: E<.Fa dst> &= E<.Fa "
"src>.)  E<.Fn CPU_AND_ATOMIC> is similar, with the same atomic semantics as "
"E<.Fn CPU_OR_ATOMIC>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:317
msgid ""
"The E<.Fn CPU_NAND> macro removes CPUs in E<.Fa src> from E<.Fa dst>.  (It "
"is the E<.Nm> equivalent of the scalar: E<.Fa dst> &= E<.Fa ~ src>.)"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/cpuset.9:317
#, no-wrap
msgid "CPUSET_T_INITIALIZER EXAMPLE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:320
#, no-wrap
msgid "cpuset_t myset;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:323
#, no-wrap
msgid ""
"/* Initialize myset to filled (all CPUs) */\n"
"myset = CPUSET_T_INITIALIZER(CPUSET_FSET);\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:326
#, no-wrap
msgid ""
"/* Initialize myset to only the lowest CPU */\n"
"myset = CPUSET_T_INITIALIZER(0x1);\n"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/cpuset.9:327
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:331
msgid "E<.Xr cpuset 1>, E<.Xr cpuset 2>, E<.Xr bitset 9>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/cpuset.9:331
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:338
msgid ""
"first appeared in E<.Fx 7.1>, released in January 2009, and in E<.Fx 8.0>, "
"released in November 2009."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:341
msgid "This manual page first appeared in E<.Fx 11.0>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/cpuset.9:341
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:349
msgid ""
"E<.An -nosplit> The E<.Nm> macros were written by E<.An Jeff Roberson Aq Mt "
"jeff@FreeBSD.org>.  This manual page was written by E<.An Conrad Meyer Aq Mt "
"cem@FreeBSD.org>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/cpuset.9:349
#, no-wrap
msgid "CAVEATS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/cpuset.9:352
msgid ""
"Unlike every other reference to individual set members, which are "
"zero-indexed, E<.Fn CPU_FFS> returns a one-indexed result (or zero if the "
"cpuset is empty)."
msgstr ""
