# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:29-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/microseq.9:27
#, no-wrap
msgid "June 6, 1998"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/microseq.9:28
#, no-wrap
msgid "MICROSEQ 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/microseq.9:30
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:32
msgid "E<.Nm microseq>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/microseq.9:32
#, no-wrap
msgid "ppbus microsequencer developer's guide"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/microseq.9:33
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/microseq.9:34
#, no-wrap
msgid "sys/types.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/microseq.9:35
#, no-wrap
msgid "dev/ppbus/ppbconf.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/microseq.9:36
#, no-wrap
msgid "dev/ppbus/ppb_msq.h"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/microseq.9:37
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:41
msgid ""
"See E<.Xr ppbus 4> for ppbus description and general info about the "
"microsequencer."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:44
msgid ""
"The purpose of this document is to encourage developers to use the "
"microsequencer mechanism in order to have:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:47
msgid "a uniform programming model"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:49
msgid "efficient code"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:55
msgid ""
"Before using microsequences, you are encouraged to look at E<.Xr ppc 4> "
"microsequencer implementation and an example of how using it in E<.Xr vpo "
"4>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/microseq.9:55
#, no-wrap
msgid "PPBUS register model"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:56
#, no-wrap
msgid "Background"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:65
msgid ""
"The parallel port model chosen for ppbus is the PC parallel port model.  "
"Thus, any register described later has the same semantic than its "
"counterpart in a PC parallel port.  For more info about ISA/ECP programming, "
"get the Microsoft standard referenced as \"Extended Capabilities Port "
"Protocol and ISA interface Standard\".  Registers described later are "
"standard parallel port registers."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:68
msgid ""
"Mask macros are defined in the standard ppbus include files for each valid "
"bit of parallel port registers."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:68
#, no-wrap
msgid "Data register"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:75
msgid ""
"In compatible or nibble mode, writing to this register will drive data to "
"the parallel port data lines.  In any other mode, drivers may be tri-stated "
"by setting the direction bit (PCD) in the control register.  Reads to this "
"register return the value on the data lines."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:75
#, no-wrap
msgid "Device status register"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:77
msgid "This read-only register reflects the inputs on the parallel port interface."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/microseq.9:79 /usr/src/share/man/man9/microseq.9:93
#, no-wrap
msgid "Em Bit Ta Em Name Ta Em Description"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/microseq.9:80
#, no-wrap
msgid "7 Ta nBUSY Ta \"inverted version of parallel port Busy signal\""
msgstr ""

#. type: It
#: /usr/src/share/man/man9/microseq.9:81
#, no-wrap
msgid "6 Ta nACK Ta \"version of parallel port nAck signal\""
msgstr ""

#. type: It
#: /usr/src/share/man/man9/microseq.9:82
#, no-wrap
msgid "5 Ta PERROR Ta \"version of parallel port PERROR signal\""
msgstr ""

#. type: It
#: /usr/src/share/man/man9/microseq.9:83
#, no-wrap
msgid "4 Ta SELECT Ta \"version of parallel port Select signal\""
msgstr ""

#. type: It
#: /usr/src/share/man/man9/microseq.9:84
#, no-wrap
msgid "3 Ta nFAULT Ta \"version of parallel port nFault signal\""
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:88
msgid "Others are reserved and return undefined result when read."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:88
#, no-wrap
msgid "Device control register"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:91
msgid ""
"This register directly controls several output signals as well as enabling "
"some functions."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/microseq.9:94
#, no-wrap
msgid "5 Ta PCD Ta \"direction bit in extended modes\""
msgstr ""

#. type: It
#: /usr/src/share/man/man9/microseq.9:95
#, no-wrap
msgid "4 Ta IRQENABLE Ta \"1 enables an interrupt on the rising edge of nAck\""
msgstr ""

#. type: It
#: /usr/src/share/man/man9/microseq.9:96
#, no-wrap
msgid "3 Ta SELECTIN Ta \"inverted and driven as parallel port nSelectin signal\""
msgstr ""

#. type: It
#: /usr/src/share/man/man9/microseq.9:97
#, no-wrap
msgid "2 Ta nINIT Ta \"driven as parallel port nInit signal\""
msgstr ""

#. type: It
#: /usr/src/share/man/man9/microseq.9:98
#, no-wrap
msgid "1 Ta AUTOFEED Ta \"inverted and driven as parallel port nAutoFd signal\""
msgstr ""

#. type: It
#: /usr/src/share/man/man9/microseq.9:99
#, no-wrap
msgid "0 Ta STROBE Ta \"inverted and driven as parallel port nStrobe signal\""
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/microseq.9:101
#, no-wrap
msgid "MICROINSTRUCTIONS"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:102
#, no-wrap
msgid "Description"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:108
msgid ""
"E<.Em Microinstructions> are either parallel port accesses, program "
"iterations, submicrosequence or C calls.  The parallel port must be "
"considered as the logical model described in E<.Xr ppbus 4>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:110
msgid "Available microinstructions are:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:131
#, no-wrap
msgid ""
"#define MS_OP_GET       0\t/* get E<lt>ptrE<gt>, E<lt>lenE<gt>\t\t\t*/\n"
"#define MS_OP_PUT       1\t/* put E<lt>ptrE<gt>, E<lt>lenE<gt>\t\t\t*/\n"
"#define MS_OP_RFETCH\t2\t/* rfetch E<lt>regE<gt>, E<lt>maskE<gt>, "
"E<lt>ptrE<gt>\t\t*/\n"
"#define MS_OP_RSET\t3\t/* rset E<lt>regE<gt>, E<lt>maskE<gt>, "
"E<lt>maskE<gt>\t\t*/\n"
"#define MS_OP_RASSERT\t4\t/* rassert E<lt>regE<gt>, E<lt>maskE<gt>\t\t*/\n"
"#define MS_OP_DELAY     5\t/* delay E<lt>valE<gt>\t\t\t\t*/\n"
"#define MS_OP_SET       6\t/* set E<lt>valE<gt>\t\t\t\t*/\n"
"#define MS_OP_DBRA      7\t/* dbra E<lt>offsetE<gt>\t\t\t*/\n"
"#define MS_OP_BRSET     8\t/* brset E<lt>maskE<gt>, E<lt>offsetE<gt>\t\t*/\n"
"#define MS_OP_BRCLEAR   9\t/* brclear E<lt>maskE<gt>, "
"E<lt>offsetE<gt>\t\t*/\n"
"#define MS_OP_RET       10\t/* ret E<lt>retcodeE<gt>\t\t\t*/\n"
"#define MS_OP_C_CALL\t11\t/* c_call E<lt>functionE<gt>, "
"E<lt>parameterE<gt>\t*/\n"
"#define MS_OP_PTR\t12\t/* ptr E<lt>pointerE<gt>\t\t\t*/\n"
"#define MS_OP_ADELAY\t13\t/* adelay E<lt>valE<gt>\t\t\t\t*/\n"
"#define MS_OP_BRSTAT\t14\t/* brstat E<lt>maskE<gt>, E<lt>maskE<gt>, "
"E<lt>offsetE<gt>\t*/\n"
"#define MS_OP_SUBRET\t15\t/* subret E<lt>codeE<gt>\t\t\t*/\n"
"#define MS_OP_CALL\t16\t/* call E<lt>microsequenceE<gt>\t\t\t*/\n"
"#define MS_OP_RASSERT_P\t17\t/* rassert_p E<lt>iterE<gt>, "
"E<lt>regE<gt>\t\t*/\n"
"#define MS_OP_RFETCH_P\t18\t/* rfetch_p E<lt>iterE<gt>, E<lt>regE<gt>, "
"E<lt>maskE<gt>\t*/\n"
"#define MS_OP_TRIG\t19\t/* trigger E<lt>regE<gt>, E<lt>lenE<gt>, "
"E<lt>arrayE<gt>\t*/\n"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:132
#, no-wrap
msgid "Execution context"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:136
msgid "The E<.Em execution context> of microinstructions is:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:142
msgid ""
"the E<.Em program counter> which points to the next microinstruction to "
"execute either in the main microsequence or in a subcall"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:146
msgid ""
"the current value of E<.Em ptr> which points to the next char to "
"send/receive"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:149
msgid "the current value of the internal E<.Em branch register>"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:152
msgid "This data is modified by some of the microinstructions, not all."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:152
#, no-wrap
msgid "MS_OP_GET and MS_OP_PUT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:155
msgid ""
"are microinstructions used to do either predefined standard IEEE1284-1994 "
"transfers or programmed non-standard io."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:155
#, no-wrap
msgid "MS_OP_RFETCH - Register FETCH"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:158
msgid ""
"is used to retrieve the current value of a parallel port register, apply a "
"mask and save it in a buffer."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:160 /usr/src/share/man/man9/microseq.9:175 /usr/src/share/man/man9/microseq.9:189
msgid "Parameters:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:163 /usr/src/share/man/man9/microseq.9:178 /usr/src/share/man/man9/microseq.9:192 /usr/src/share/man/man9/microseq.9:368 /usr/src/share/man/man9/microseq.9:381 /usr/src/share/man/man9/microseq.9:400
msgid "register"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:165
msgid "character mask"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:167
msgid "pointer to the buffer"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:170
msgid "Predefined macro: MS_RFETCH(reg,mask,ptr)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:170
#, no-wrap
msgid "MS_OP_RSET - Register SET"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:173
msgid ""
"is used to assert/clear some bits of a particular parallel port register, "
"two masks are applied."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:180
msgid "mask of bits to assert"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:182
msgid "mask of bits to clear"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:185
msgid "Predefined macro: MS_RSET(reg,assert,clear)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:185
#, no-wrap
msgid "MS_OP_RASSERT - Register ASSERT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:187
msgid "is used to assert all bits of a particular parallel port register."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:194
msgid "byte to assert"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:197
msgid "Predefined macro: MS_RASSERT(reg,byte)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:197
#, no-wrap
msgid "MS_OP_DELAY - microsecond DELAY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:199
msgid "is used to delay the execution of the microsequence."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:201 /usr/src/share/man/man9/microseq.9:211 /usr/src/share/man/man9/microseq.9:222 /usr/src/share/man/man9/microseq.9:235 /usr/src/share/man/man9/microseq.9:250 /usr/src/share/man/man9/microseq.9:269 /usr/src/share/man/man9/microseq.9:282 /usr/src/share/man/man9/microseq.9:299 /usr/src/share/man/man9/microseq.9:312 /usr/src/share/man/man9/microseq.9:322
msgid "Parameter:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:204
msgid "delay in microseconds"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:207
msgid "Predefined macro: MS_DELAY(delay)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:207
#, no-wrap
msgid "MS_OP_SET - SET internal branch register"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:209
msgid "is used to set the value of the internal branch register."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:214
msgid "integer value"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:217
msgid "Predefined macro: MS_SET(accum)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:217
#, no-wrap
msgid "MS_OP_DBRA - \\&Do BRAnch"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:220
msgid ""
"is used to branch if internal branch register decremented by one result "
"value is positive."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:227 /usr/src/share/man/man9/microseq.9:242 /usr/src/share/man/man9/microseq.9:257 /usr/src/share/man/man9/microseq.9:335
msgid ""
"integer offset in the current executed (sub)microsequence.  Offset is added "
"to the index of the next microinstruction to execute."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:230
msgid "Predefined macro: MS_DBRA(offset)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:230
#, no-wrap
msgid "MS_OP_BRSET - BRanch on SET"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:233
msgid ""
"is used to branch if some of the status register bits of the parallel port "
"are set."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:238 /usr/src/share/man/man9/microseq.9:253
msgid "bits of the status register"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:245
msgid "Predefined macro: MS_BRSET(mask,offset)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:245
#, no-wrap
msgid "MS_OP_BRCLEAR - BRanch on CLEAR"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:248
msgid ""
"is used to branch if some of the status register bits of the parallel port "
"are cleared."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:260
msgid "Predefined macro: MS_BRCLEAR(mask,offset)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:260
#, no-wrap
msgid "MS_OP_RET - RETurn"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:267
msgid ""
"is used to return from a microsequence.  This instruction is mandatory.  "
"This is the only way for the microsequencer to detect the end of the "
"microsequence.  The return code is returned in the integer pointed by the "
"(int *) parameter of the ppb_MS_microseq()."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:272
msgid "integer return code"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:275
msgid "Predefined macro: MS_RET(code)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:275
#, no-wrap
msgid "MS_OP_C_CALL - C function CALL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:280
msgid ""
"is used to call C functions from microsequence execution.  This may be "
"useful when a non-standard i/o is performed to retrieve a data character "
"from the parallel port."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:285
msgid "the C function to call"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:287
msgid "the parameter to pass to the function call"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:292
msgid ""
"The C function shall be declared as a E<.Ft int(*)(void *p, char *ptr)>.  "
"The ptr parameter is the current position in the buffer currently scanned."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:294
msgid "Predefined macro: MS_C_CALL(func,param)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:294
#, no-wrap
msgid "MS_OP_PTR - initialize internal PTR"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:297
msgid ""
"is used to initialize the internal pointer to the currently scanned buffer.  "
"This pointer is passed to any C call (see above)."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:303
msgid ""
"pointer to the buffer that shall be accessed by xxx_P() microsequence "
"calls.  Note that this pointer is automatically incremented during xxx_P() "
"calls"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:306
msgid "Predefined macro: MS_PTR(ptr)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:306
#, no-wrap
msgid "MS_OP_ADELAY - do an Asynchronous DELAY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:310
msgid ""
"is used to make a tsleep() during microsequence execution.  The tsleep is "
"executed at PPBPRI level."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:315
msgid "delay in ms"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:318
msgid "Predefined macro: MS_ADELAY(delay)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:318
#, no-wrap
msgid "MS_OP_BRSTAT - BRanch on STATe"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:320
msgid "is used to branch on status register state condition."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:327
msgid ""
"mask of asserted bits.  Bits that shall be asserted in the status register "
"are set in the mask"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:331
msgid ""
"mask of cleared bits.  Bits that shall be cleared in the status register are "
"set in the mask"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:338
msgid "Predefined macro: MS_BRSTAT(asserted_bits,clear_bits,offset)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:338
#, no-wrap
msgid "MS_OP_SUBRET - SUBmicrosequence RETurn"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:344
msgid ""
"is used to return from the submicrosequence call.  This action is mandatory "
"before a RET call.  Some microinstructions (PUT, GET) may not be callable "
"within a submicrosequence."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:346
msgid "No parameter."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:348
msgid "Predefined macro: MS_SUBRET()"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:348
#, no-wrap
msgid "MS_OP_CALL - submicrosequence CALL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:353
msgid ""
"is used to call a submicrosequence.  A submicrosequence is a microsequence "
"with a SUBRET call.  Parameter:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:356
msgid "the submicrosequence to execute"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:359
msgid "Predefined macro: MS_CALL(microseq)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:359
#, no-wrap
msgid "MS_OP_RASSERT_P - Register ASSERT from internal PTR"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:363
msgid ""
"is used to assert a register with data currently pointed by the internal PTR "
"pointer.  Parameter:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:366
msgid "amount of data to write to the register"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:371
msgid "Predefined macro: MS_RASSERT_P(iter,reg)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:371
#, no-wrap
msgid "MS_OP_RFETCH_P - Register FETCH to internal PTR"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:376
msgid ""
"is used to fetch data from a register.  Data is stored in the buffer "
"currently pointed by the internal PTR pointer.  Parameter:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:379 /usr/src/share/man/man9/microseq.9:398
msgid "amount of data to read from the register"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:383
msgid "mask applied to fetched data"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:386
msgid "Predefined macro: MS_RFETCH_P(iter,reg,mask)"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:386
#, no-wrap
msgid "MS_OP_TRIG - TRIG register"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:395
msgid ""
"is used to trigger the parallel port.  This microinstruction is intended to "
"provide a very efficient control of the parallel port.  Triggering a "
"register is writing data, wait a while, write data, wait a while...  This "
"allows to write magic sequences to the port.  Parameter:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:402
msgid "size of the array"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:408
msgid ""
"array of unsigned chars.  Each couple of u_chars define the data to write to "
"the register and the delay in us to wait.  The delay is limited to 255 us to "
"simplify and reduce the size of the array."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:411
msgid "Predefined macro: MS_TRIG(reg,len,array)"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/microseq.9:411
#, no-wrap
msgid "MICROSEQUENCES"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:412
#, no-wrap
msgid "C structures"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:420
#, no-wrap
msgid ""
"union ppb_insarg {\n"
"     int     i;\n"
"     char    c;\n"
"     void    *p;\n"
"     int     (* f)(void *, char *);\n"
"};\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:425
#, no-wrap
msgid ""
"struct ppb_microseq {\n"
"     int                     opcode;         /* microins. opcode */\n"
"     union ppb_insarg        arg[PPB_MS_MAXARGS];    /* arguments */\n"
"};\n"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:426
#, no-wrap
msgid "Using microsequences"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:433
msgid ""
"To instantiate a microsequence, just declare an array of ppb_microseq "
"structures and initialize it as needed.  You may either use predefined "
"macros or code directly your microinstructions according to the ppb_microseq "
"definition.  For example,"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:435
#, no-wrap
msgid "     struct ppb_microseq select_microseq[] = {\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:440
#, no-wrap
msgid ""
"\t     /* parameter list\n"
"\t      */\n"
"\t     #define SELECT_TARGET    MS_PARAM(0, 1, MS_TYP_INT)\n"
"\t     #define SELECT_INITIATOR MS_PARAM(3, 1, MS_TYP_INT)\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:447
#, no-wrap
msgid ""
"\t     /* send the select command to the drive */\n"
"\t     MS_DASS(MS_UNKNOWN),\n"
"\t     MS_CASS(H_nAUTO | H_nSELIN |  H_INIT | H_STROBE),\n"
"\t     MS_CASS( H_AUTO | H_nSELIN |  H_INIT | H_STROBE),\n"
"\t     MS_DASS(MS_UNKNOWN),\n"
"\t     MS_CASS( H_AUTO | H_nSELIN | H_nINIT | H_STROBE),\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:455
#, no-wrap
msgid ""
"\t     /* now, wait until the drive is ready */\n"
"\t     MS_SET(VP0_SELTMO),\n"
"/* loop: */     MS_BRSET(H_ACK, 2 /* ready */),\n"
"\t     MS_DBRA(-2 /* loop */),\n"
"/* error: */    MS_RET(1),\n"
"/* ready: */    MS_RET(0)\n"
"     };\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:461
msgid ""
"Here, some parameters are undefined and must be filled before executing the "
"microsequence.  In order to initialize each microsequence, one should use "
"the ppb_MS_init_msq() function like this:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:465
#, no-wrap
msgid ""
"     ppb_MS_init_msq(select_microseq, 2,\n"
"\t\t     SELECT_TARGET, 1 E<lt>E<lt> target,\n"
"\t\t     SELECT_INITIATOR, 1 E<lt>E<lt> initiator);\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:468
msgid "and then execute the microsequence."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/microseq.9:468
#, no-wrap
msgid "The microsequencer"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:477
msgid ""
"The microsequencer is executed either at ppbus or adapter level (see E<.Xr "
"ppbus 4> for info about ppbus system layers).  Most of the microsequencer is "
"executed at ppc level to avoid ppbus to adapter function call overhead.  But "
"some actions like deciding whereas the transfer is IEEE1284-1994 compliant "
"are executed at ppbus layer."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/microseq.9:477
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:481
msgid "E<.Xr ppbus 4>, E<.Xr ppc 4>, E<.Xr vpo 4>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/microseq.9:481
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:486
msgid "The E<.Nm> manual page first appeared in E<.Fx 3.0>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/microseq.9:486
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:490
msgid "This manual page was written by E<.An Nicolas Souchu>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/microseq.9:490
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:492
msgid "Only one level of submicrosequences is allowed."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/microseq.9:493
msgid "When triggering the port, maximum delay allowed is 255 us."
msgstr ""
