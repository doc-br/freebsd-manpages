# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/vm_page_alloc.9:29
#, no-wrap
msgid "November 16, 2016"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/vm_page_alloc.9:30
#, no-wrap
msgid "VM_PAGE_ALLOC 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/vm_page_alloc.9:32
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:34
msgid "E<.Nm vm_page_alloc>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/vm_page_alloc.9:34
#, no-wrap
msgid "allocate a page for a"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:36
msgid "E<.Vt vm_object>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/vm_page_alloc.9:36
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/vm_page_alloc.9:37
#, no-wrap
msgid "sys/param.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/vm_page_alloc.9:38
#, no-wrap
msgid "vm/vm.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/vm_page_alloc.9:39
#, no-wrap
msgid "vm/vm_page.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:42
msgid ""
"E<.Ft vm_page_t> E<.Fn vm_page_alloc \"vm_object_t object\" \"vm_pindex_t "
"pindex\" \"int req\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/vm_page_alloc.9:42
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:55
msgid ""
"The E<.Fn vm_page_alloc> function allocates a page at E<.Fa pindex> within "
"E<.Fa object>.  It is assumed that a page has not already been allocated at "
"E<.Fa pindex>.  The page returned is inserted into the object, unless E<.Dv "
"VM_ALLOC_NOOBJ> is specified in the E<.Fa req>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:58
msgid "E<.Fn vm_page_alloc> will not sleep."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:60
msgid "Its arguments are:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/vm_page_alloc.9:61
#, no-wrap
msgid "Fa object"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:68
msgid ""
"The VM object to allocate the page for.  The E<.Fa object> must be locked if "
"E<.Dv VM_ALLOC_NOOBJ> is not specified."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/vm_page_alloc.9:68
#, no-wrap
msgid "Fa pindex"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:70
msgid "The index into the object at which the page should be inserted."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/vm_page_alloc.9:70
#, no-wrap
msgid "Fa req"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:73
msgid ""
"The bitwise-inclusive OR of a class and any optional flags indicating how "
"the page should be allocated."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:75
msgid "Exactly one of the following classes must be specified:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/vm_page_alloc.9:76
#, no-wrap
msgid "Dv VM_ALLOC_NORMAL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:78
msgid "The page should be allocated with no special treatment."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/vm_page_alloc.9:78
#, no-wrap
msgid "Dv VM_ALLOC_SYSTEM"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:82
msgid ""
"The page can be allocated if the cache is empty and the free page count is "
"above the interrupt reserved water mark.  This flag should be used only when "
"the system really needs the page."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/vm_page_alloc.9:82
#, no-wrap
msgid "Dv VM_ALLOC_INTERRUPT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:87
msgid ""
"E<.Fn vm_page_alloc> is being called during an interrupt.  A page will be "
"returned successfully if the free page count is greater than zero."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:90
msgid "The optional flags are:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/vm_page_alloc.9:91
#, no-wrap
msgid "Dv VM_ALLOC_NOBUSY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:93
msgid "The returned page will not be exclusive busy."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/vm_page_alloc.9:93
#, no-wrap
msgid "Dv VM_ALLOC_NODUMP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:96
msgid ""
"The returned page will not be included in any kernel core dumps regardless "
"of whether or not it is mapped in to KVA."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/vm_page_alloc.9:96
#, no-wrap
msgid "Dv VM_ALLOC_NOOBJ"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:101
msgid ""
"Do not associate the allocated page with a vm object.  The E<.Fa object> "
"argument is ignored."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/vm_page_alloc.9:101
#, no-wrap
msgid "Dv VM_ALLOC_SBUSY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:103
msgid "The returned page will be shared busy."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/vm_page_alloc.9:103
#, no-wrap
msgid "Dv VM_ALLOC_WIRED"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:105
msgid "The returned page will be wired."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/vm_page_alloc.9:105
#, no-wrap
msgid "Dv VM_ALLOC_ZERO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:111
msgid ""
"Indicate a preference for a pre-zeroed page.  There is no guarantee that the "
"returned page will be zeroed, but it will have the E<.Dv PG_ZERO> flag set "
"if it is zeroed."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/vm_page_alloc.9:113
#, no-wrap
msgid "RETURN VALUES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:119
msgid ""
"The E<.Vt vm_page_t> that was allocated is returned if successful; "
"otherwise, E<.Dv NULL> is returned."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/vm_page_alloc.9:119
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:125
msgid ""
"The pager process is always upgraded to E<.Dv VM_ALLOC_SYSTEM> unless E<.Dv "
"VM_ALLOC_INTERRUPT> is set."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/vm_page_alloc.9:125
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/vm_page_alloc.9:127
msgid "This manual page was written by E<.An Chad David Aq Mt davidc@acns.ab.ca>."
msgstr ""
