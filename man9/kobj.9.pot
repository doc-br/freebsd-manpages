# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:29-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/kobj.9:31
#, no-wrap
msgid "November 14, 2011"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/kobj.9:32
#, no-wrap
msgid "KOBJ 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/kobj.9:34
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kobj.9:36
msgid "E<.Nm kobj>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/kobj.9:36
#, no-wrap
msgid "a kernel object system for FreeBSD"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/kobj.9:37
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/kobj.9:38
#, no-wrap
msgid "sys/param.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/kobj.9:39
#, no-wrap
msgid "sys/kobj.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kobj.9:55
msgid ""
"E<.Ft void> E<.Fn kobj_class_compile \"kobj_class_t cls\"> E<.Ft void> E<.Fn "
"kobj_class_compile_static \"kobj_class_t cls\" \"kobj_ops_t ops\"> E<.Ft "
"void> E<.Fn kobj_class_free \"kobj_class_t cls\"> E<.Ft kobj_t> E<.Fn "
"kobj_create \"kobj_class_t cls\" \"struct malloc_type *mtype\" \"int "
"mflags\"> E<.Ft void> E<.Fn kobj_init \"kobj_t obj\" \"kobj_class_t cls\"> "
"E<.Ft void> E<.Fn kobj_init_static \"kobj_t obj\" \"kobj_class_t cls\"> "
"E<.Ft void> E<.Fn kobj_delete \"kobj_t obj\" \"struct malloc_type *mtype\"> "
"E<.Fn DEFINE_CLASS name \"kobj_method_t *methods\" \"size_t size\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/kobj.9:55
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kobj.9:64
msgid ""
"The kernel object system implements an object-oriented programming system in "
"the E<.Fx> kernel.  The system is based around the concepts of interfaces, "
"which are descriptions of sets of methods; classes, which are lists of "
"functions implementing certain methods from those interfaces; and objects, "
"which combine a class with a structure in memory."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kobj.9:71
msgid ""
"Methods are called using a dynamic method dispatching algorithm which is "
"designed to allow new interfaces and classes to be introduced into the "
"system at runtime.  The method dispatch algorithm is designed to be both "
"fast and robust and is only slightly more expensive than a direct function "
"call, making kernel objects suitable for performance-critical algorithms."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kobj.9:78
msgid ""
"Suitable uses for kernel objects are any algorithms which need some kind of "
"polymorphism (i.e., many different objects which can be treated in a uniform "
"way).  The common behaviour of the objects is described by a suitable "
"interface and each different type of object is implemented by a suitable "
"class."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kobj.9:89
msgid ""
"The simplest way to create a kernel object is to call E<.Fn kobj_create> "
"with a suitable class, malloc type and flags (see E<.Xr malloc 9> for a "
"description of the malloc type and flags).  This will allocate memory for "
"the object based on the object size specified by the class and initialise it "
"by zeroing the memory and installing a pointer to the class' method dispatch "
"table.  Objects created in this way should be freed by calling E<.Fn "
"kobj_delete>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kobj.9:106
msgid ""
"Clients which would like to manage the allocation of memory themselves "
"should call E<.Fn kobj_init> or E<.Fn kobj_init_static> with a pointer to "
"the memory for the object and the class which implements it.  It is also "
"possible to use E<.Fn kobj_init> and E<.Fn kobj_init_static> to change the "
"class for an object.  This should be done with care as the classes must "
"agree on the layout of the object.  The device framework uses this feature "
"to associate drivers with devices."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kobj.9:131
msgid ""
"The functions E<.Fn kobj_class_compile>, E<.Fn kobj_class_compile_static> "
"and E<.Fn kobj_class_free> are used to process a class description to make "
"method dispatching efficient.  A client should not normally need to call "
"these since a class will automatically be compiled the first time it is "
"used.  If a class is to be used before E<.Xr malloc 9> and E<.Xr mutex 9> "
"are initialised, then E<.Fn kobj_class_compile_static> should be called with "
"the class and a pointer to a statically allocated E<.Vt kobj_ops> structure "
"before the class is used to initialise any objects.  In that case, also "
"E<.Fn kobj_init_static> should be used instead of E<.Fn kobj_init>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kobj.9:148
msgid ""
"To define a class, first define a simple array of E<.Vt kobj_method_t>.  "
"Each method which the class implements should be entered into the table "
"using the macro E<.Fn KOBJMETHOD> which takes the name of the method "
"(including its interface) and a pointer to a function which implements it.  "
"The table should be terminated with two zeros.  The macro E<.Fn "
"DEFINE_CLASS> can then be used to initialise a E<.Vt kobj_class_t> "
"structure.  The size argument to E<.Fn DEFINE_CLASS> specifies how much "
"memory should be allocated for each object."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/kobj.9:148
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kobj.9:154
msgid ""
"Some of the concepts for this interface appeared in the device framework "
"used for the alpha port of E<.Fx 3.0> and more widely in E<.Fx 4.0>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/kobj.9:154
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kobj.9:156
msgid "This manual page was written by E<.An Doug Rabson>."
msgstr ""
