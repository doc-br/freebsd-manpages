# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:29-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/kernel_mount.9:28
#, no-wrap
msgid "December 13, 2004"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/kernel_mount.9:29
#, no-wrap
msgid "KERNEL_MOUNT 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/kernel_mount.9:31
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:39
msgid ""
"E<.Nm free_mntarg>, E<.Nm kernel_mount>, E<.Nm kernel_vmount>, E<.Nm "
"mount_arg>, E<.Nm mount_argb>, E<.Nm mount_argf>, E<.Nm mount_argsu>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/kernel_mount.9:39
#, no-wrap
msgid "functions provided as part of the kernel mount interface"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/kernel_mount.9:40
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:59
msgid ""
"E<.Ft void> E<.Fn free_mntarg \"struct mntarg *ma\"> E<.Ft int> E<.Fn "
"kernel_mount \"struct mntarg *ma\" \"int flags\"> E<.Ft int> E<.Fn "
"kernel_vmount \"int flags\" ...> E<.Ft \"struct mntarg *\"> E<.Fo mount_arg> "
"E<.Fa \"struct mntarg *ma\" \"const char *name\" \"const void *val\" \"int "
"len\"> E<.Fc> E<.Ft \"struct mntarg *\"> E<.Fn mount_argb \"struct mntarg "
"*ma\" \"int flag\" \"const char *name\"> E<.Ft \"struct mntarg *\"> E<.Fn "
"mount_argf \"struct mntarg *ma\" \"const char *name\" \"const char *fmt\" "
"...> E<.Ft \"struct mntarg *\"> E<.Fo mount_argsu> E<.Fa \"struct mntarg "
"*ma\" \"const char *name\" \"const void *val\" \"int len\"> E<.Fc>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/kernel_mount.9:59
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:73
msgid ""
"The E<.Fn kernel_mount> family of functions are provided as an API for "
"building a list of mount arguments which will be used to mount file systems "
"from inside the kernel.  By accumulating a list of arguments, the API takes "
"shape and provides the information necessary for the kernel to control the "
"E<.Xr mount 8> utility.  When an error occurs, the process will stop.  This "
"will not cause a E<.Xr panic 9>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:80
msgid ""
"The header of the structure is stored in E<.Pa src/sys/kern/vfs_mount.c> "
"which permits automatic structure creation to ease the mount process.  "
"Memory allocation must always be freed when the entire process is complete, "
"it is an error otherwise."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:86
msgid ""
"The E<.Fn free_mntarg> function is used to free or clear the E<.Vt mntarg> "
"structure."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:101
msgid ""
"The E<.Fn kernel_mount> function pulls information from the structure to "
"perform the mount request on a given file system.  Additionally, the E<.Fn "
"kernel_mount> function always calls the E<.Fn free_mntarg> function.  If "
"E<.Fa ma> contains any error code generated during the construction, that "
"code will be called and the file system mount will not be attempted."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:107
msgid ""
"The E<.Fn kernel_vmount> is a function similar to E<.Xr printf 9> which is "
"used to mount a file system."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:120
msgid ""
"The E<.Fn mount_arg> function takes a plain argument and crafts parts of the "
"structure with regards to various mount options.  If the length is a value "
"less than 0, E<.Xr strlen 3> is used.  This argument will be referenced "
"until either E<.Fn free_mntarg> or E<.Fn kernel_mount> is called."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:132
msgid ""
"The E<.Fn mount_argb> function is used to add boolean arguments to the "
"structure.  The E<.Fa flag> is the boolean value and E<.Fa name> must start "
"with E<.Qq Li no>, otherwise a panic will occur."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:138
msgid ""
"The E<.Fn mount_argf> function adds E<.Xr printf 9> style arguments to the "
"current structure."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:143
msgid ""
"The E<.Fn mount_argsu> function will add arguments to the structure from a "
"userland string."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/kernel_mount.9:143
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:147
msgid "An example of the E<.Fn *_cmount> function:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:153
#, no-wrap
msgid ""
"static int\n"
"msdosfs_cmount(struct mntarg *ma, void *data, int flags, struct thread "
"*td)\n"
"{\n"
"\tstruct msdosfs_args args;\n"
"\tint error;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:159
#, no-wrap
msgid ""
"\tif (data == NULL)\n"
"\t\treturn (EINVAL);\n"
"\terror = copyin(data, &args, sizeof(args));\n"
"\tif (error)\n"
"\t\treturn (error);\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:166
#, no-wrap
msgid ""
"\tma = mount_argsu(ma, \"from\", args.fspec, MAXPATHLEN);\n"
"\tma = mount_arg(ma, \"export\", &args.export, sizeof(args.export));\n"
"\tma = mount_argf(ma, \"uid\", \"%d\", args.uid);\n"
"\tma = mount_argf(ma, \"gid\", \"%d\", args.gid);\n"
"\tma = mount_argf(ma, \"mask\", \"%d\", args.mask);\n"
"\tma = mount_argf(ma, \"dirmask\", \"%d\", args.dirmask);\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:171
#, no-wrap
msgid ""
"\tma = mount_argb(ma, args.flags & MSDOSFSMNT_SHORTNAME, \"noshortname\");\n"
"\tma = mount_argb(ma, args.flags & MSDOSFSMNT_LONGNAME, \"nolongname\");\n"
"\tma = mount_argb(ma, !(args.flags & MSDOSFSMNT_NOWIN95), \"nowin95\");\n"
"\tma = mount_argb(ma, args.flags & MSDOSFSMNT_KICONV, \"nokiconv\");\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:175
#, no-wrap
msgid ""
"\tma = mount_argsu(ma, \"cs_win\", args.cs_win, MAXCSLEN);\n"
"\tma = mount_argsu(ma, \"cs_dos\", args.cs_dos, MAXCSLEN);\n"
"\tma = mount_argsu(ma, \"cs_local\", args.cs_local, MAXCSLEN);\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:177
#, no-wrap
msgid "\terror = kernel_mount(ma, flags);\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:180
#, no-wrap
msgid ""
"\treturn (error);\n"
"}\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:187
msgid ""
"When working with E<.Fn kernel_vmount>, E<.Fa varargs> must come in pairs, "
"e.g., E<.Brq Va name , value>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:194
#, no-wrap
msgid ""
"\terror = kernel_vmount(\n"
"\t    MNT_RDONLY,\n"
"\t    \"fstype\", vfsname,\n"
"\t    \"fspath\", \"/\",\n"
"\t    \"from\", path,\n"
"\t    NULL);\n"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/kernel_mount.9:195
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:198
msgid "E<.Xr VFS 9>, E<.Xr VFS_MOUNT 9>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/kernel_mount.9:198
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:204
msgid ""
"The E<.Fn kernel_mount> family of functions and this manual page first "
"appeared in E<.Fx 6.0>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/kernel_mount.9:204
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/kernel_mount.9:211
msgid ""
"E<.An -nosplit> The E<.Fn kernel_mount> family of functions and API was "
"developed by E<.An Poul-Henning Kamp Aq Mt phk@FreeBSD.org>.  This manual "
"page was written by E<.An Tom Rhodes Aq Mt trhodes@FreeBSD.org>."
msgstr ""
