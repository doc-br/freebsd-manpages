# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/memguard.9:27
#, no-wrap
msgid "March 22, 2017"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/memguard.9:28
#, no-wrap
msgid "MEMGUARD 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/memguard.9:30
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:32
msgid "E<.Nm MemGuard>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/memguard.9:32
#, no-wrap
msgid "memory allocator for debugging purposes"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/memguard.9:33
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:35
msgid "E<.Cd \"options DEBUG_MEMGUARD\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/memguard.9:35
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:41
msgid ""
"E<.Nm> is a simple and small replacement memory allocator designed to help "
"detect tamper-after-free scenarios.  These problems are more and more common "
"and likely with multithreaded kernels where race conditions are more "
"prevalent."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:66
msgid ""
"E<.Nm> can take over E<.Fn malloc>, E<.Fn realloc> and E<.Fn free> for a "
"single malloc type.  Alternatively E<.Nm> can take over E<.Fn uma_zalloc>, "
"E<.Fn uma_zalloc_arg> and E<.Fn uma_free> for a single E<.Xr uma 9> zone.  "
"Also E<.Nm> can guard all allocations larger than E<.Dv PAGE_SIZE>, and can "
"guard a random fraction of all allocations.  There is also a knob to prevent "
"allocations smaller than a specified size from being guarded, to limit "
"memory waste."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/memguard.9:66
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:71
msgid ""
"To use E<.Nm> for a memory type, either add an entry to E<.Pa "
"/boot/loader.conf>:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:73
#, no-wrap
msgid "vm.memguard.desc=E<lt>memory_typeE<gt>\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:79
msgid "Or set the E<.Va vm.memguard.desc> E<.Xr sysctl 8> variable at run-time:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:81
#, no-wrap
msgid "sysctl vm.memguard.desc=E<lt>memory_typeE<gt>\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:107
msgid ""
"Where E<.Ar memory_type> can be either a short description of the memory "
"type to monitor, either name of E<.Xr uma 9> zone.  Only allocations from "
"that E<.Ar memory_type> made after E<.Va vm.memguard.desc> is set will "
"potentially be guarded.  If E<.Va vm.memguard.desc> is modified at run-time "
"then only allocations of the new E<.Ar memory_type> will potentially be "
"guarded once the E<.Xr sysctl 8> is set.  Existing guarded allocations will "
"still be properly released by either E<.Xr free 9> or E<.Xr uma_zfree 9>, "
"depending on what kind of allocation was taken over."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:124
msgid ""
"To determine short description of a E<.Xr malloc 9> type one can either take "
"it from the first column of E<.Xr vmstat 8 Fl m> output, or to find it in "
"the kernel source.  It is the second argument to E<.Xr MALLOC_DEFINE 9> "
"macro.  To determine name of E<.Xr uma 9> zone one can either take it from "
"the first column of E<.Xr vmstat 8 Fl z> output, or to find it in the kernel "
"source.  It is the first argument to the E<.Xr uma_zcreate 9> function."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:147
msgid ""
"The E<.Va vm.memguard.divisor> boot-time tunable is used to scale how much "
"of the system's physical memory E<.Nm> is allowed to consume.  The default "
"is 10, so up to E<.Va vm_cnt.v_page_count Ns /10> pages can be used.  E<.Nm> "
"will reserve E<.Va vm_kmem_max> / E<.Va vm.memguard.divisor> bytes of "
"virtual address space, limited by twice the physical memory size.  The "
"physical limit is reported as E<.Va vm.memguard.phys_limit> and the virtual "
"space reserved for E<.Nm> is reported as E<.Va vm.memguard.mapsize>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:159
msgid ""
"E<.Nm> will not do page promotions for any allocation smaller than E<.Va "
"vm.memguard.minsize> bytes.  The default is 0, meaning all allocations can "
"potentially be guarded.  E<.Nm> can guard sufficiently large allocations "
"randomly, with average frequency of every one in 100000 / E<.Va "
"vm.memguard.frequency> allocations.  The default is 0, meaning no "
"allocations are randomly guarded."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:184
msgid ""
"E<.Nm> can optionally add unmapped guard pages around each allocation to "
"detect overflow and underflow, if E<.Va vm.memguard.options> has the 1 bit "
"set.  This option is enabled by default.  E<.Nm> will optionally guard all "
"allocations of E<.Dv PAGE_SIZE> or larger if E<.Va vm.memguard.options> has "
"the 2 bit set.  This option is off by default.  By default E<.Nm> does not "
"guard E<.Xr uma 9> zones that have been initialized with the E<.Dv "
"UMA_ZONE_NOFREE> flag set, since it can produce false positives on them.  "
"However, this safety measure can be turned off by setting bit 3 of the E<.Va "
"vm.memguard.options> tunable."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/memguard.9:184
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:191
msgid ""
"E<.Xr sysctl 8>, E<.Xr vmstat 8>, E<.Xr contigmalloc 9>, E<.Xr malloc 9>, "
"E<.Xr redzone 9>, E<.Xr uma 9>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/memguard.9:191
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:195
msgid "E<.Nm> first appeared in E<.Fx 6.0>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/memguard.9:195
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/memguard.9:206
msgid ""
"E<.An -nosplit> E<.Nm> was originally written by E<.An Bosko Milekic Aq Mt "
"bmilekic@FreeBSD.org>.  This manual page was originally written by E<.An "
"Christian Brueffer Aq Mt brueffer@FreeBSD.org>.  Additions have been made by "
"E<.An Matthew Fleming Aq Mt mdf@FreeBSD.org> and E<.An Gleb Smirnoff Aq Mt "
"glebius@FreeBSD.org> to both the implementation and the documentation."
msgstr ""
