# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/ifnet.9:31
#, no-wrap
msgid "November 14, 2018"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/ifnet.9:32
#, no-wrap
msgid "IFNET 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ifnet.9:34
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:39
msgid "E<.Nm ifnet>, E<.Nm ifaddr>, E<.Nm ifqueue>, E<.Nm if_data>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/ifnet.9:39
#, no-wrap
msgid "kernel interfaces for manipulating network interfaces"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ifnet.9:40
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ifnet.9:41
#, no-wrap
msgid "sys/param.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ifnet.9:42
#, no-wrap
msgid "sys/time.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ifnet.9:43
#, no-wrap
msgid "sys/socket.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ifnet.9:44 /usr/src/share/man/man9/ifnet.9:144
#, no-wrap
msgid "net/if.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ifnet.9:45 /usr/src/share/man/man9/ifnet.9:146 /usr/src/share/man/man9/ifnet.9:160 /usr/src/share/man/man9/ifnet.9:167
#, no-wrap
msgid "net/if_var.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ifnet.9:46 /usr/src/share/man/man9/ifnet.9:862 /usr/src/share/man/man9/ifnet.9:979
#, no-wrap
msgid "net/if_types.h"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:48 /usr/src/share/man/man9/ifnet.9:1157
#, no-wrap
msgid "Interface Manipulation Functions"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:78
msgid ""
"E<.Ft \"struct ifnet *\"> E<.Fn if_alloc \"u_char type\"> E<.Ft \"struct "
"ifnet *\"> E<.Fn if_alloc_dev \"u_char type\" \"device_t dev\"> E<.Ft "
"\"struct ifnet *\"> E<.Fn if_alloc_domain \"u_char type\" \"int "
"numa_domain\"> E<.Ft void> E<.Fn if_attach \"struct ifnet *ifp\"> E<.Ft "
"void> E<.Fn if_detach \"struct ifnet *ifp\"> E<.Ft void> E<.Fn if_free "
"\"struct ifnet *ifp\"> E<.Ft void> E<.Fn if_free_type \"struct ifnet *ifp\" "
"\"u_char type\"> E<.Ft void> E<.Fn if_down \"struct ifnet *ifp\"> E<.Ft int> "
"E<.Fn ifioctl \"struct socket *so\" \"u_long cmd\" \"caddr_t data\" \"struct "
"thread *td\"> E<.Ft int> E<.Fn ifpromisc \"struct ifnet *ifp\" \"int "
"pswitch\"> E<.Ft int> E<.Fn if_allmulti \"struct ifnet *ifp\" \"int "
"amswitch\"> E<.Ft \"struct ifnet *\"> E<.Fn ifunit \"const char *name\"> "
"E<.Ft \"struct ifnet *\"> E<.Fn ifunit_ref \"const char *name\"> E<.Ft void> "
"E<.Fn if_up \"struct ifnet *ifp\">"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:78 /usr/src/share/man/man9/ifnet.9:1404
#, no-wrap
msgid "Interface Address Functions"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:94
msgid ""
"E<.Ft \"struct ifaddr *\"> E<.Fn ifaddr_byindex \"u_short idx\"> E<.Ft "
"\"struct ifaddr *\"> E<.Fn ifa_ifwithaddr \"struct sockaddr *addr\"> E<.Ft "
"\"struct ifaddr *\"> E<.Fn ifa_ifwithdstaddr \"struct sockaddr *addr\" \"int "
"fib\"> E<.Ft \"struct ifaddr *\"> E<.Fn ifa_ifwithnet \"struct sockaddr "
"*addr\" \"int ignore_ptp\" \"int fib\"> E<.Ft \"struct ifaddr *\"> E<.Fn "
"ifaof_ifpforaddr \"struct sockaddr *addr\" \"struct ifnet *ifp\"> E<.Ft "
"void> E<.Fn ifa_ref \"struct ifaddr *ifa\"> E<.Ft void> E<.Fn ifa_free "
"\"struct ifaddr *ifa\">"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:94 /usr/src/share/man/man9/ifnet.9:1461
#, no-wrap
msgid "Interface Multicast Address Functions"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:101
msgid ""
"E<.Ft int> E<.Fn if_addmulti \"struct ifnet *ifp\" \"struct sockaddr *sa\" "
"\"struct ifmultiaddr **ifmap\"> E<.Ft int> E<.Fn if_delmulti \"struct ifnet "
"*ifp\" \"struct sockaddr *sa\"> E<.Ft \"struct ifmultiaddr *\"> E<.Fn "
"if_findmulti \"struct ifnet *ifp\" \"struct sockaddr *sa\">"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:101
#, no-wrap
msgid "Output queue macros"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:104
msgid "E<.Fn IF_DEQUEUE \"struct ifqueue *ifq\" \"struct mbuf *m\">"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:104
#, no-wrap
msgid "struct ifnet Member Functions"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:126
msgid ""
"E<.Ft void> E<.Fn \\*(lp*if_input\\*(rp \"struct ifnet *ifp\" \"struct mbuf "
"*m\"> E<.Ft int> E<.Fo \\*(lp*if_output\\*(rp> E<.Fa \"struct ifnet *ifp\" "
"\"struct mbuf *m\"> E<.Fa \"const struct sockaddr *dst\" \"struct route "
"*ro\"> E<.Fc> E<.Ft void> E<.Fn \\*(lp*if_start\\*(rp \"struct ifnet *ifp\"> "
"E<.Ft int> E<.Fn \\*(lp*if_transmit\\*(rp \"struct ifnet *ifp\" \"struct "
"mbuf *m\"> E<.Ft void> E<.Fn \\*(lp*if_qflush\\*(rp \"struct ifnet *ifp\"> "
"E<.Ft int> E<.Fn \\*(lp*if_ioctl\\*(rp \"struct ifnet *ifp\" \"u_long cmd\" "
"\"caddr_t data\"> E<.Ft void> E<.Fn \\*(lp*if_init\\*(rp \"void *if_softc\"> "
"E<.Ft int> E<.Fo \\*(lp*if_resolvemulti\\*(rp> E<.Fa \"struct ifnet *ifp\" "
"\"struct sockaddr **retsa\" \"struct sockaddr *addr\"> E<.Fc>"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:126
#, no-wrap
msgid "struct ifaddr member function"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:132
msgid ""
"E<.Ft void> E<.Fo \\*(lp*ifa_rtrequest\\*(rp> E<.Fa \"int cmd\" \"struct "
"rtentry *rt\" \"struct rt_addrinfo *info\"> E<.Fc>"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:132
#, no-wrap
msgid "Global Variables"
msgstr ""

#.  extern struct ifindex_entry *ifindex_table ;
#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:137
msgid ""
"E<.Vt extern struct ifnethead ifnet>; E<.Vt extern int if_index>; E<.Vt "
"extern int ifqmaxlen>;"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ifnet.9:137
#, no-wrap
msgid "DATA STRUCTURES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:144
msgid ""
"The kernel mechanisms for handling network interfaces reside primarily in "
"the E<.Vt ifnet , if_data , ifaddr>, and E<.Vt ifmultiaddr> structures in"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:146
msgid "and"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:151
msgid ""
"and the functions named above and defined in E<.Pa /sys/net/if.c>.  Those "
"interfaces which are intended to be used by user programs are defined in"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ifnet.9:151
#, no-wrap
msgid "net/if.h ;"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:160
msgid ""
"these include the interface flags, the E<.Vt if_data> structure, and the "
"structures defining the appearance of interface-related messages on the "
"E<.Xr route 4> routing socket and in E<.Xr sysctl 3>.  The header file"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:167
msgid ""
"defines the kernel-internal interfaces, including the E<.Vt ifnet , ifaddr>, "
"and E<.Vt ifmultiaddr> structures and the functions which manipulate them.  "
"(A few user programs will need"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:169
msgid "because it is the prerequisite of some other header file like"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ifnet.9:169
#, no-wrap
msgid "netinet/if_ether.h ."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:171
msgid "Most references to those two files in particular can be replaced by"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ifnet.9:171
#, no-wrap
msgid "net/ethernet.h . )"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:208
msgid ""
"The system keeps a linked list of interfaces using the E<.Li TAILQ> macros "
"defined in E<.Xr queue 3>; this list is headed by a E<.Vt \"struct "
"ifnethead\"> called E<.Va ifnet>.  The elements of this list are of type "
"E<.Vt \"struct ifnet\">, and most kernel routines which manipulate interface "
"as such accept or return pointers to these structures.  Each interface "
"structure contains an E<.Vt if_data> structure used for statistics and "
"information.  Each interface also has a E<.Li TAILQ> of interface addresses, "
"described by E<.Vt ifaddr> structures.  An E<.Dv AF_LINK> address (see E<.Xr "
"link_addr 3>)  describing the link layer implemented by the interface (if "
"any)  is accessed by the E<.Fn ifaddr_byindex> function or E<.Va if_addr> "
"structure.  (Some trivial interfaces do not provide any link layer "
"addresses; this structure, while still present, serves only to identify the "
"interface name and index.)"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:216
msgid ""
"Finally, those interfaces supporting reception of multicast datagrams have a "
"E<.Li TAILQ> of multicast group memberships, described by E<.Vt ifmultiaddr> "
"structures.  These memberships are reference-counted."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:221
msgid ""
"Interfaces are also associated with an output queue, defined as a E<.Vt "
"\"struct ifqueue\">; this structure is used to hold packets while the "
"interface is in the process of sending another."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:222
#, no-wrap
msgid "The ifnet Structure"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:226
msgid "The fields of E<.Vt \"struct ifnet\"> are as follows:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:227
#, no-wrap
msgid "Va if_softc"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:231
msgid ""
"E<.Pq Vt \"void *\"> A pointer to the driver's private state block.  "
"(Initialized by driver.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:231
#, no-wrap
msgid "Va if_l2com"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:236
msgid ""
"E<.Pq Vt \"void *\"> A pointer to the common data for the interface's layer "
"2 protocol.  (Initialized by E<.Fn if_alloc>.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:236
#, no-wrap
msgid "Va if_vnet"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:241
msgid ""
"E<.Pq Vt \"struct vnet *\"> A pointer to the virtual network stack "
"instance.  (Initialized by E<.Fn if_attach>.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:241
#, no-wrap
msgid "Va if_home_vnet"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:248
msgid ""
"E<.Pq Vt \"struct vnet *\"> A pointer to the parent virtual network stack, "
"where this E<.Vt \"struct ifnet\"> originates from.  (Initialized by E<.Fn "
"if_attach>.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:248
#, no-wrap
msgid "Va if_link"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:252
msgid "E<.Pq Fn TAILQ_ENTRY ifnet> E<.Xr queue 3> macro glue."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:252
#, no-wrap
msgid "Va if_xname"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:262
msgid ""
"E<.Pq Vt \"char *\"> The name of the interface, (e.g., E<.Dq Li fxp0> or "
"E<.Dq Li lo0>).  (Initialized by driver (usually via E<.Fn if_initname>).)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:262
#, no-wrap
msgid "Va if_dname"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:268
msgid ""
"E<.Pq Vt \"const char *\"> The name of the driver.  (Initialized by driver "
"(usually via E<.Fn if_initname>).)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:268
#, no-wrap
msgid "Va if_dunit"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:278
msgid ""
"E<.Pq Vt int> A unique number assigned to each interface managed by a "
"particular driver.  Drivers may choose to set this to E<.Dv IF_DUNIT_NONE> "
"if a unit number is not associated with the device.  (Initialized by driver "
"(usually via E<.Fn if_initname>).)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:278
#, no-wrap
msgid "Va if_refcount"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:283
msgid "E<.Pq Vt u_int> The reference count.  (Initialized by E<.Fn if_alloc>.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:283
#, no-wrap
msgid "Va if_addrhead"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:289
msgid ""
"E<.Pq Vt \"struct ifaddrhead\"> The head of the E<.Xr queue 3> E<.Li TAILQ> "
"containing the list of addresses assigned to this interface."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:289
#, no-wrap
msgid "Va if_pcount"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:295
msgid ""
"E<.Pq Vt int> A count of promiscuous listeners on this interface, used to "
"reference-count the E<.Dv IFF_PROMISC> flag."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:295
#, no-wrap
msgid "Va if_carp"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:302
msgid ""
"E<.Pq Vt \"struct carp_if *\"> A pointer to the CARP interface structure, "
"E<.Xr carp 4>.  (Initialized by the driver-specific E<.Fn if_ioctl> "
"routine.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:302
#, no-wrap
msgid "Va if_bpf"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:308
msgid ""
"E<.Pq Vt \"struct bpf_if *\"> Opaque per-interface data for the packet "
"filter, E<.Xr bpf 4>.  (Initialized by E<.Fn bpf_attach>.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:308
#, no-wrap
msgid "Va if_index"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:319
msgid ""
"E<.Pq Vt u_short> A unique number assigned to each interface in sequence as "
"it is attached.  This number can be used in a E<.Vt \"struct sockaddr_dl\"> "
"to refer to a particular interface by index (see E<.Xr link_addr 3>).  "
"(Initialized by E<.Fn if_alloc>.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:319
#, no-wrap
msgid "Va if_vlantrunk"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:326
msgid ""
"E<.Pq Vt struct ifvlantrunk *> A pointer to 802.1Q trunk structure, E<.Xr "
"vlan 4>.  (Initialized by the driver-specific E<.Fn if_ioctl> routine.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:326
#, no-wrap
msgid "Va if_flags"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:330
msgid ""
"E<.Pq Vt int> Flags describing operational parameters of this interface (see "
"below).  (Manipulated by generic code.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:330
#, no-wrap
msgid "Va if_drv_flags"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:334
msgid ""
"E<.Pq Vt int> Flags describing operational status of this interface (see "
"below).  (Manipulated by driver.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:334
#, no-wrap
msgid "Va if_capabilities"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:337
msgid ""
"E<.Pq Vt int> Flags describing the capabilities the interface supports (see "
"below)."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:337
#, no-wrap
msgid "Va if_capenable"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:340
msgid ""
"E<.Pq Vt int> Flags describing the enabled capabilities of the interface "
"(see below)."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:340
#, no-wrap
msgid "Va if_linkmib"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:345
msgid ""
"E<.Pq Vt \"void *\"> A pointer to an interface-specific MIB structure "
"exported by E<.Xr ifmib 4>.  (Initialized by driver.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:345
#, no-wrap
msgid "Va if_linkmiblen"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:349
msgid "E<.Pq Vt size_t> The size of said structure.  (Initialized by driver.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:349
#, no-wrap
msgid "Va if_data"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:356
msgid ""
"E<.Pq Vt \"struct if_data\"> More statistics and information; see E<.Sx "
"\"The if_data structure\">, below.  (Initialized by driver, manipulated by "
"both driver and generic code.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:356
#, no-wrap
msgid "Va if_multiaddrs"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:362
msgid ""
"E<.Pq Vt struct ifmultihead> The head of the E<.Xr queue 3> E<.Li TAILQ> "
"containing the list of multicast addresses assigned to this interface."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:362
#, no-wrap
msgid "Va if_amcount"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:368
msgid ""
"E<.Pq Vt int> A number of multicast requests on this interface, used to "
"reference-count the E<.Dv IFF_ALLMULTI> flag."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:368
#, no-wrap
msgid "Va if_addr"
msgstr ""

#.  .It Va if_llsoftc
#.  .Pq Vt "void *"
#.  The purpose of the field is unclear.
#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:376
msgid ""
"E<.Pq Vt \"struct ifaddr *\"> A pointer to the link-level interface "
"address.  (Initialized by E<.Fn if_alloc>.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:376
#, no-wrap
msgid "Va if_snd"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:380
msgid "E<.Pq Vt \"struct ifaltq\"> The output queue.  (Manipulated by driver.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:380
#, no-wrap
msgid "Va if_broadcastaddr"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:384
msgid ""
"E<.Pq Vt \"const u_int8_t *\"> A link-level broadcast bytestring for "
"protocols with variable address length."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:384
#, no-wrap
msgid "Va if_bridge"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:391
msgid ""
"E<.Pq Vt \"void *\"> A pointer to the bridge interface structure, E<.Xr "
"if_bridge 4>.  (Initialized by the driver-specific E<.Fn if_ioctl> routine.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:391
#, no-wrap
msgid "Va if_label"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:397
msgid ""
"E<.Pq Vt \"struct label *\"> A pointer to the MAC Framework label structure, "
"E<.Xr mac 4>.  (Initialized by E<.Fn if_alloc>.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:397
#, no-wrap
msgid "Va if_afdata"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:400
msgid "E<.Pq Vt \"void *\"> An address family dependent data region."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:400
#, no-wrap
msgid "Va if_afdata_initialized"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:403
msgid ""
"E<.Pq Vt int> Used to track the current state of address family "
"initialization."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:403
#, no-wrap
msgid "Va if_afdata_lock"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:410
msgid ""
"E<.Pq Vt \"struct rwlock\"> An E<.Xr rwlock 9> lock used to protect E<.Va "
"if_afdata> internals."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:410
#, no-wrap
msgid "Va if_linktask"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:415
msgid ""
"E<.Pq Vt \"struct task\"> A E<.Xr taskqueue 9> task scheduled for link state "
"change events of the interface."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:415
#, no-wrap
msgid "Va if_addr_lock"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:420
msgid ""
"E<.Pq Vt \"struct rwlock\"> An E<.Xr rwlock 9> lock used to protect "
"interface-related address lists."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:420
#, no-wrap
msgid "Va if_clones"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:424
msgid ""
"E<.Pq Fn LIST_ENTRY ifnet> E<.Xr queue 3> macro glue for the list of "
"clonable network interfaces."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:424
#, no-wrap
msgid "Va if_groups"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:430
msgid ""
"E<.Pq Fn TAILQ_HEAD \"\" \"ifg_list\"> The head of the E<.Xr queue 3> E<.Li "
"TAILQ> containing the list of groups per interface."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:430
#, no-wrap
msgid "Va if_pf_kif"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:434
msgid ""
"E<.Pq Vt \"void *\"> A pointer to the structure used for interface "
"abstraction by E<.Xr pf 4>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:434
#, no-wrap
msgid "Va if_lagg"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:439
msgid "E<.Pq Vt \"void *\"> A pointer to the E<.Xr lagg 4> interface structure."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:439
#, no-wrap
msgid "Va if_alloctype"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:447
msgid ""
"E<.Pq Vt u_char> The type of the interface as it was at the time of its "
"allocation.  It is used to cache the type passed to E<.Fn if_alloc>, but "
"unlike E<.Va if_type>, it would not be changed by drivers."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:447
#, no-wrap
msgid "Va if_numa_domain"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:456
msgid ""
"E<.Pq Vt uint8_t> The NUMA domain of the hardware device associated with the "
"interface.  This is filled in with a wildcard value unless the kernel is "
"NUMA aware, the system is a NUMA system, and the ifnet is allocated using "
"E<.Fn if_alloc_dev> or E<.Fn if_alloc_domain>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:471
msgid ""
"References to E<.Vt ifnet> structures are gained by calling the E<.Fn "
"if_ref> function and released by calling the E<.Fn if_rele> function.  They "
"are used to allow kernel code walking global interface lists to release the "
"E<.Vt ifnet> lock yet keep the E<.Vt ifnet> structure stable."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:475
msgid ""
"There are in addition a number of function pointers which the driver must "
"initialize to complete its interface with the generic interface layer:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:476
#, no-wrap
msgid "Fn if_input"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:485
msgid ""
"Pass a packet to an appropriate upper layer as determined from the "
"link-layer header of the packet.  This routine is to be called from an "
"interrupt handler or used to emulate reception of a packet on this "
"interface.  A single function implementing E<.Fn if_input> can be shared "
"among multiple drivers utilizing the same link-layer framing, e.g., "
"Ethernet."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:485
#, no-wrap
msgid "Fn if_output"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:489
msgid ""
"Output a packet on interface E<.Fa ifp>, or queue it on the output queue if "
"the interface is already active."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:489
#, no-wrap
msgid "Fn if_transmit"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:502
msgid ""
"Transmit a packet on an interface or queue it if the interface is in use.  "
"This function will return E<.Dv ENOBUFS> if the devices software and "
"hardware queues are both full.  This function must be installed after E<.Fn "
"if_attach> to override the default implementation.  This function is exposed "
"in order to allow drivers to manage their own queues and to reduce the "
"latency caused by a frequently gratuitous enqueue / dequeue pair to ifq.  "
"The suggested internal software queuing mechanism is buf_ring."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:502
#, no-wrap
msgid "Fn if_qflush"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:511
msgid ""
"Free mbufs in internally managed queues when the interface is marked down.  "
"This function must be installed after E<.Fn if_attach> to override the "
"default implementation.  This function is exposed in order to allow drivers "
"to manage their own queues and to reduce the latency caused by a frequently "
"gratuitous enqueue / dequeue pair to ifq.  The suggested internal software "
"queuing mechanism is buf_ring."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:511
#, no-wrap
msgid "Fn if_start"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:526
msgid ""
"Start queued output on an interface.  This function is exposed in order to "
"provide for some interface classes to share a E<.Fn if_output> among all "
"drivers.  E<.Fn if_start> may only be called when the E<.Dv IFF_DRV_OACTIVE> "
"flag is not set.  (Thus, E<.Dv IFF_DRV_OACTIVE> does not literally mean that "
"output is active, but rather that the device's internal output queue is "
"full.) Please note that this function will soon be deprecated."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:526
#, no-wrap
msgid "Fn if_ioctl"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:531
msgid "Process interface-related E<.Xr ioctl 2> requests (defined in"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ifnet.9:531
#, no-wrap
msgid "sys/sockio.h ) ."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:540
msgid ""
"Preliminary processing is done by the generic routine E<.Fn ifioctl> to "
"check for appropriate privileges, locate the interface being manipulated, "
"and perform certain generic operations like twiddling flags and flushing "
"queues.  See the description of E<.Fn ifioctl> below for more information."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:540
#, no-wrap
msgid "Fn if_init"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:546
msgid ""
"Initialize and bring up the hardware, e.g., reset the chip and enable the "
"receiver unit.  Should mark the interface running, but not active E<.Dv ( "
"IFF_DRV_RUNNING , ~IIF_DRV_OACTIVE>)."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:546
#, no-wrap
msgid "Fn if_resolvemulti"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:553
msgid ""
"Check the requested multicast group membership, E<.Fa addr>, for validity, "
"and if necessary compute a link-layer group which corresponds to that "
"address which is returned in E<.Fa *retsa>.  Returns zero on success, or an "
"error code on failure."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:554
#, no-wrap
msgid "Interface Flags"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:570
msgid ""
"Interface flags are used for a number of different purposes.  Some flags "
"simply indicate information about the type of interface and its "
"capabilities; others are dynamically manipulated to reflect the current "
"state of the interface.  Flags of the former kind are marked E<.Aq S> in "
"this table; the latter are marked E<.Aq D>.  Flags which begin with E<.Dq "
"IFF_DRV_> are stored in E<.Va if_drv_flags>; all other flags are stored in "
"E<.Va if_flags>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:580
msgid ""
"The macro E<.Dv IFF_CANTCHANGE> defines the bits which cannot be set by a "
"user program using the E<.Dv SIOCSIFFLAGS> command to E<.Xr ioctl 2>; these "
"are indicated by an asterisk E<.Pq Ql *> in the following listing."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:582
#, no-wrap
msgid "Dv IFF_UP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:585
msgid "E<.Aq D> The interface has been configured up by the user-level code."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:585
#, no-wrap
msgid "Dv IFF_BROADCAST"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:588
msgid "E<.Aq S*> The interface supports broadcast."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:588
#, no-wrap
msgid "Dv IFF_DEBUG"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:591
msgid "E<.Aq D> Used to enable/disable driver debugging code."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:591
#, no-wrap
msgid "Dv IFF_LOOPBACK"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:594
msgid "E<.Aq S> The interface is a loopback device."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:594
#, no-wrap
msgid "Dv IFF_POINTOPOINT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:599
msgid ""
"E<.Aq S*> The interface is point-to-point; E<.Dq broadcast> address is "
"actually the address of the other end."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:599
#, no-wrap
msgid "Dv IFF_DRV_RUNNING"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:605
msgid ""
"E<.Aq D*> The interface has been configured and dynamic resources were "
"successfully allocated.  Probably only useful internal to the interface."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:605
#, no-wrap
msgid "Dv IFF_NOARP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:608
msgid "E<.Aq D> Disable network address resolution on this interface."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:608
#, no-wrap
msgid "Dv IFF_PROMISC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:611
msgid "E<.Aq D*> This interface is in promiscuous mode."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:611
#, no-wrap
msgid "Dv IFF_PPROMISC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:615
msgid ""
"E<.Aq D> This interface is in the permanently promiscuous mode (implies "
"E<.Dv IFF_PROMISC>)."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:615
#, no-wrap
msgid "Dv IFF_ALLMULTI"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:618
msgid ""
"E<.Aq D*> This interface is in all-multicasts mode (used by multicast "
"routers)."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:618
#, no-wrap
msgid "Dv IFF_DRV_OACTIVE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:622
msgid ""
"E<.Aq D*> The interface's hardware output queue (if any) is full; output "
"packets are to be queued."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:622
#, no-wrap
msgid "Dv IFF_SIMPLEX"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:625
msgid "E<.Aq S*> The interface cannot hear its own transmissions."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:625
#, no-wrap
msgid "Dv IFF_LINK0"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:626
#, no-wrap
msgid "Dv IFF_LINK1"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:627
#, no-wrap
msgid "Dv IFF_LINK2"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:632
msgid ""
"E<.Aq D> Control flags for the link layer.  (Currently abused to select "
"among multiple physical layers on some devices.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:632
#, no-wrap
msgid "Dv IFF_MULTICAST"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:635
msgid "E<.Aq S*> This interface supports multicast."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:635
#, no-wrap
msgid "Dv IFF_CANTCONFIG"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:641
msgid ""
"E<.Aq S*> The interface is not configurable in a meaningful way.  Primarily "
"useful for E<.Dv IFT_USB> interfaces registered at the interface list."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:641
#, no-wrap
msgid "Dv IFF_MONITOR"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:647
msgid ""
"E<.Aq D> This interface blocks transmission of packets and discards incoming "
"packets after BPF processing.  Used to monitor network traffic but not "
"interact with the network in question."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:647
#, no-wrap
msgid "Dv IFF_STATICARP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:650
msgid "E<.Aq D> Used to enable/disable ARP requests on this interface."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:650
#, no-wrap
msgid "Dv IFF_DYING"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:657
msgid ""
"E<.Aq D*> Set when the E<.Vt ifnet> structure of this interface is being "
"released and still has E<.Va if_refcount> references."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:657
#, no-wrap
msgid "Dv IFF_RENAMING"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:660
msgid "E<.Aq D> Set when this interface is being renamed."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:661
#, no-wrap
msgid "Interface Capabilities Flags"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:668
msgid ""
"Interface capabilities are specialized features an interface may or may not "
"support.  These capabilities are very hardware-specific and allow, when "
"enabled, to offload specific network processing to the interface or to offer "
"a particular feature for use by other kernel parts."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:691
msgid ""
"It should be stressed that a capability can be completely uncontrolled "
"(i.e., stay always enabled with no way to disable it)  or allow limited "
"control over itself (e.g., depend on another capability's state.)  Such "
"peculiarities are determined solely by the hardware and driver of a "
"particular interface.  Only the driver possesses the knowledge on whether "
"and how the interface capabilities can be controlled.  Consequently, "
"capabilities flags in E<.Va if_capenable> should never be modified directly "
"by kernel code other than the interface driver.  The command E<.Dv "
"SIOCSIFCAP> to E<.Fn ifioctl> is the dedicated means to attempt altering "
"E<.Va if_capenable> on an interface.  Userland code shall use E<.Xr ioctl "
"2>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:693
msgid "The following capabilities are currently supported by the system:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:694
#, no-wrap
msgid "Dv IFCAP_RXCSUM"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:700
msgid ""
"This interface can do checksum validation on receiving data.  Some "
"interfaces do not have sufficient buffer storage to store frames above a "
"certain MTU-size completely.  The driver for the interface might disable "
"hardware checksum validation if the MTU is set above the hardcoded limit."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:700
#, no-wrap
msgid "Dv IFCAP_TXCSUM"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:702
msgid "This interface can do checksum calculation on transmitting data."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:702
#, no-wrap
msgid "Dv IFCAP_HWCSUM"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:705
msgid "A shorthand for E<.Pq Dv IFCAP_RXCSUM | IFCAP_TXCSUM>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:705
#, no-wrap
msgid "Dv IFCAP_NETCONS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:707
msgid "This interface can be a network console."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:707
#, no-wrap
msgid "Dv IFCAP_VLAN_MTU"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:716
msgid ""
"The E<.Xr vlan 4> driver can operate over this interface in software tagging "
"mode without having to decrease MTU on E<.Xr vlan 4> interfaces below 1500 "
"bytes.  This implies the ability of this interface to cope with frames "
"somewhat longer than permitted by the Ethernet specification."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:716
#, no-wrap
msgid "Dv IFCAP_VLAN_HWTAGGING"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:719
msgid ""
"This interface can do VLAN tagging on output and demultiplex frames by their "
"VLAN tag on input."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:719
#, no-wrap
msgid "Dv IFCAP_JUMBO_MTU"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:722
msgid ""
"This Ethernet interface can transmit and receive frames up to 9000 bytes "
"long."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:722
#, no-wrap
msgid "Dv IFCAP_POLLING"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:726
msgid "This interface supports E<.Xr polling 4>.  See below for details."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:726
#, no-wrap
msgid "Dv IFCAP_VLAN_HWCSUM"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:732
msgid ""
"This interface can do checksum calculation on both transmitting and "
"receiving data on E<.Xr vlan 4> interfaces (implies E<.Dv IFCAP_HWCSUM>)."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:732
#, no-wrap
msgid "Dv IFCAP_TSO4"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:734
msgid "This Ethernet interface supports TCP4 Segmentation offloading."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:734
#, no-wrap
msgid "Dv IFCAP_TSO6"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:736
msgid "This Ethernet interface supports TCP6 Segmentation offloading."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:736
#, no-wrap
msgid "Dv IFCAP_TSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:739
msgid "A shorthand for E<.Pq Dv IFCAP_TSO4 | IFCAP_TSO6>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:739 /usr/src/share/man/man9/ifnet.9:757
#, no-wrap
msgid "Dv IFCAP_TOE4"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:741
msgid "This Ethernet interface supports TCP offloading."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:741 /usr/src/share/man/man9/ifnet.9:759
#, no-wrap
msgid "Dv IFCAP_TOE6"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:743
msgid "This Ethernet interface supports TCP6 offloading."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:743 /usr/src/share/man/man9/ifnet.9:761
#, no-wrap
msgid "Dv IFCAP_TOE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:746 /usr/src/share/man/man9/ifnet.9:764
msgid "A shorthand for E<.Pq Dv IFCAP_TOE4 | IFCAP_TOE6>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:746
#, no-wrap
msgid "Dv IFCAP_WOL_UCAST"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:748
msgid "This Ethernet interface supports waking up on any Unicast packet."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:748
#, no-wrap
msgid "Dv IFCAP_WOL_MCAST"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:750
msgid "This Ethernet interface supports waking up on any Multicast packet."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:750
#, no-wrap
msgid "Dv IFCAP_WOL_MAGIC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:754
msgid ""
"This Ethernet interface supports waking up on any Magic packet such as those "
"sent by E<.Xr wake 8>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:754
#, no-wrap
msgid "Dv IFCAP_WOL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:757
msgid ""
"A shorthand for E<.Pq Dv IFCAP_WOL_UCAST | IFCAP_WOL_MCAST | "
"IFCAP_WOL_MAGIC>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:759
msgid "This Ethernet interface supports TCP4 Offload Engine."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:761
msgid "This Ethernet interface supports TCP6 Offload Engine."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:764
#, no-wrap
msgid "Dv IFCAP_VLAN_HWFILTER"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:768
msgid ""
"This interface supports frame filtering in hardware on E<.Xr vlan 4> "
"interfaces."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:768
#, no-wrap
msgid "Dv IFCAP_VLAN_HWTSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:773
msgid ""
"This interface supports TCP Segmentation offloading on E<.Xr vlan 4> "
"interfaces (implies E<.Dv IFCAP_TSO>)."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:773
#, no-wrap
msgid "Dv IFCAP_LINKSTATE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:775
msgid "This Ethernet interface supports dynamic link state changes."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:775
#, no-wrap
msgid "Dv IFCAP_NETMAP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:778
msgid "This Ethernet interface supports E<.Xr netmap 4>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:796
msgid ""
"The ability of advanced network interfaces to offload certain computational "
"tasks from the host CPU to the board is limited mostly to TCP/IP.  Therefore "
"a separate field associated with an interface (see E<.Va "
"ifnet.if_data.ifi_hwassist> below)  keeps a detailed description of its "
"enabled capabilities specific to TCP/IP processing.  The TCP/IP module "
"consults the field to see which tasks can be done on an E<.Em outgoing> "
"packet by the interface.  The flags defined for that field are a superset of "
"those for E<.Va mbuf.m_pkthdr.csum_flags>, namely:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:797
#, no-wrap
msgid "Dv CSUM_IP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:799
msgid "The interface will compute IP checksums."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:799
#, no-wrap
msgid "Dv CSUM_TCP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:801
msgid "The interface will compute TCP checksums."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:801
#, no-wrap
msgid "Dv CSUM_UDP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:803
msgid "The interface will compute UDP checksums."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:816
msgid ""
"An interface notifies the TCP/IP module about the tasks the former has "
"performed on an E<.Em incoming> packet by setting the corresponding flags in "
"the field E<.Va mbuf.m_pkthdr.csum_flags> of the E<.Vt mbuf chain> "
"containing the packet.  See E<.Xr mbuf 9> for details."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:844
msgid ""
"The capability of a network interface to operate in E<.Xr polling 4> mode "
"involves several flags in different global variables and per-interface "
"fields.  The capability flag E<.Dv IFCAP_POLLING> set in interface's E<.Va "
"if_capabilities> indicates support for E<.Xr polling 4> on the particular "
"interface.  If set in E<.Va if_capabilities>, the same flag can be marked or "
"cleared in the interface's E<.Va if_capenable> within E<.Fn ifioctl>, thus "
"initiating switch of the interface to E<.Xr polling 4> mode or interrupt "
"mode, respectively.  The actual mode change is managed by the "
"driver-specific E<.Fn if_ioctl> routine.  The E<.Xr polling 4> handler "
"returns the number of packets processed."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:844
#, no-wrap
msgid "The if_data Structure"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:858
msgid ""
"The E<.Vt if_data> structure contains statistics and identifying information "
"used by management programs, and which is exported to user programs by way "
"of the E<.Xr ifmib 4> branch of the E<.Xr sysctl 3> MIB.  The following "
"elements of the E<.Vt if_data> structure are initialized by the interface "
"and are not expected to change significantly over the course of normal "
"operation:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:859
#, no-wrap
msgid "Va ifi_type"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:862
msgid "E<.Pq Vt u_char> The type of the interface, as defined in"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:866
msgid "and described below in the E<.Sx \"Interface Types\"> section."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:866
#, no-wrap
msgid "Va ifi_physical"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:870
msgid ""
"E<.Pq Vt u_char> Intended to represent a selection of physical layers on "
"devices which support more than one; never implemented."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:870
#, no-wrap
msgid "Va ifi_addrlen"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:877
msgid ""
"E<.Pq Vt u_char> Length of a link-layer address on this device, or zero if "
"there are none.  Used to initialized the address length field in E<.Vt "
"sockaddr_dl> structures referring to this interface."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:877
#, no-wrap
msgid "Va ifi_hdrlen"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:889
msgid ""
"E<.Pq Vt u_char> Maximum length of any link-layer header which might be "
"prepended by the driver to a packet before transmission.  The generic code "
"computes the maximum over all interfaces and uses that value to influence "
"the placement of data in E<.Vt mbuf Ns s> to attempt to ensure that there is "
"always sufficient space to prepend a link-layer header without allocating an "
"additional E<.Vt mbuf>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:889
#, no-wrap
msgid "Va ifi_datalen"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:897
msgid ""
"E<.Pq Vt u_char> Length of the E<.Vt if_data> structure.  Allows some "
"stabilization of the routing socket ABI in the face of increases in the "
"length of E<.Vt struct ifdata>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:897
#, no-wrap
msgid "Va ifi_mtu"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:901
msgid ""
"E<.Pq Vt u_long> The maximum transmission unit of the medium, exclusive of "
"any link-layer overhead."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:901
#, no-wrap
msgid "Va ifi_metric"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:904
msgid ""
"E<.Pq Vt u_long> A dimensionless metric interpreted by a user-mode routing "
"process."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:904
#, no-wrap
msgid "Va ifi_baudrate"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:907
msgid "E<.Pq Vt u_long> The line rate of the interface, in bits per second."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:907
#, no-wrap
msgid "Va ifi_hwassist"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:916
msgid ""
"E<.Pq Vt u_long> A detailed interpretation of the capabilities to offload "
"computational tasks for E<.Em outgoing> packets.  The interface driver must "
"keep this field in accord with the current value of E<.Va if_capenable>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:916
#, no-wrap
msgid "Va ifi_epoch"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:925
msgid ""
"E<.Pq Vt time_t> The system uptime when interface was attached or the "
"statistics below were reset.  This is intended to be used to set the SNMP "
"variable E<.Va ifCounterDiscontinuityTime>.  It may also be used to "
"determine if two successive queries for an interface of the same index have "
"returned results for the same interface."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:931
msgid ""
"The structure additionally contains generic statistics applicable to a "
"variety of different interface types (except as noted, all members are of "
"type E<.Vt u_long>):"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:932
#, no-wrap
msgid "Va ifi_link_state"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:938
msgid ""
"E<.Pq Vt u_char> The current link state of Ethernet interfaces.  See the "
"E<.Sx Interface Link States> section for possible values."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:938
#, no-wrap
msgid "Va ifi_ipackets"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:940
msgid "Number of packets received."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:940
#, no-wrap
msgid "Va ifi_ierrors"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:945
msgid ""
"Number of receive errors detected (e.g., FCS errors, DMA overruns, etc.).  "
"More detailed breakdowns can often be had by way of a link-specific MIB."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:945
#, no-wrap
msgid "Va ifi_opackets"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:947
msgid "Number of packets transmitted."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:947
#, no-wrap
msgid "Va ifi_oerrors"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:952
msgid ""
"Number of output errors detected (e.g., late collisions, DMA overruns, "
"etc.).  More detailed breakdowns can often be had by way of a link-specific "
"MIB."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:952
#, no-wrap
msgid "Va ifi_collisions"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:956
msgid ""
"Total number of collisions detected on output for CSMA interfaces.  (This "
"member is sometimes [ab]used by other types of interfaces for other output "
"error counts.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:956
#, no-wrap
msgid "Va ifi_ibytes"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:958
msgid "Total traffic received, in bytes."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:958
#, no-wrap
msgid "Va ifi_obytes"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:960
msgid "Total traffic transmitted, in bytes."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:960
#, no-wrap
msgid "Va ifi_imcasts"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:962
msgid "Number of packets received which were sent by link-layer multicast."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:962
#, no-wrap
msgid "Va ifi_omcasts"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:964
msgid "Number of packets sent by link-layer multicast."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:964
#, no-wrap
msgid "Va ifi_iqdrops"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:967
msgid "Number of packets dropped on input.  Rarely implemented."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:967
#, no-wrap
msgid "Va ifi_oqdrops"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:969
msgid "Number of packets dropped on output."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:969
#, no-wrap
msgid "Va ifi_noproto"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:971
msgid "Number of packets received for unknown network-layer protocol."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:971
#, no-wrap
msgid "Va ifi_lastchange"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:976
msgid ""
"E<.Pq Vt \"struct timeval\"> The time of the last administrative change to "
"the interface (as required for E<.Tn SNMP>)."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:977
#, no-wrap
msgid "Interface Types"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:979
msgid "The header file"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:983
msgid ""
"defines symbolic constants for a number of different types of interfaces.  "
"The most common are:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:985
#, no-wrap
msgid "Dv IFT_OTHER"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:987
msgid "none of the following"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:987
#, no-wrap
msgid "Dv IFT_ETHER"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:989
msgid "Ethernet"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:989
#, no-wrap
msgid "Dv IFT_ISO88023"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:991
msgid "ISO 8802-3 CSMA/CD"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:991
#, no-wrap
msgid "Dv IFT_ISO88024"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:993
msgid "ISO 8802-4 Token Bus"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:993
#, no-wrap
msgid "Dv IFT_ISO88025"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:995
msgid "ISO 8802-5 Token Ring"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:995
#, no-wrap
msgid "Dv IFT_ISO88026"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:997
msgid "ISO 8802-6 DQDB MAN"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:997
#, no-wrap
msgid "Dv IFT_FDDI"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:999
msgid "FDDI"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:999
#, no-wrap
msgid "Dv IFT_PPP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1002
msgid "Internet Point-to-Point Protocol E<.Pq Xr ppp 8>"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1002
#, no-wrap
msgid "Dv IFT_LOOP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1006
msgid "The loopback E<.Pq Xr lo 4> interface"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1006
#, no-wrap
msgid "Dv IFT_SLIP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1008
msgid "Serial Line IP"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1008
#, no-wrap
msgid "Dv IFT_PARA"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1011
msgid "Parallel-port IP E<.Pq Dq Tn PLIP>"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1011
#, no-wrap
msgid "Dv IFT_ATM"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1013
msgid "Asynchronous Transfer Mode"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1013
#, no-wrap
msgid "Dv IFT_USB"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1015
msgid "USB Interface"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:1016
#, no-wrap
msgid "Interface Link States"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1018
msgid "The following link states are currently defined:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1020
#, no-wrap
msgid "Dv LINK_STATE_UNKNOWN"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1022
msgid "The link is in an invalid or unknown state."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1022
#, no-wrap
msgid "Dv LINK_STATE_DOWN"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1024
msgid "The link is down."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1024
#, no-wrap
msgid "Dv LINK_STATE_UP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1026
msgid "The link is up."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:1027
#, no-wrap
msgid "The ifaddr Structure"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1055
msgid ""
"Every interface is associated with a list (or, rather, a E<.Li TAILQ>)  of "
"addresses, rooted at the interface structure's E<.Va if_addrhead> member.  "
"The first element in this list is always an E<.Dv AF_LINK> address "
"representing the interface itself; multi-access network drivers should "
"complete this structure by filling in their link-layer addresses after "
"calling E<.Fn if_attach>.  Other members of the structure represent "
"network-layer addresses which have been configured by means of the E<.Dv "
"SIOCAIFADDR> command to E<.Xr ioctl 2>, called on a socket of the "
"appropriate protocol family.  The elements of this list consist of E<.Vt "
"ifaddr> structures.  Most protocols will declare their own protocol-specific "
"interface address structures, but all begin with a E<.Vt \"struct ifaddr\"> "
"which provides the most-commonly-needed functionality across all protocols.  "
"Interface addresses are reference-counted."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1059
msgid "The members of E<.Vt \"struct ifaddr\"> are as follows:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1060
#, no-wrap
msgid "Va ifa_addr"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1063
msgid "E<.Pq Vt \"struct sockaddr *\"> The local address of the interface."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1063
#, no-wrap
msgid "Va ifa_dstaddr"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1070
msgid ""
"E<.Pq Vt \"struct sockaddr *\"> The remote address of point-to-point "
"interfaces, and the broadcast address of broadcast interfaces.  E<.Va ( "
"ifa_broadaddr> is a macro for E<.Va ifa_dstaddr>.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1070
#, no-wrap
msgid "Va ifa_netmask"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1074
msgid ""
"E<.Pq Vt \"struct sockaddr *\"> The network mask for multi-access "
"interfaces, and the confusion generator for point-to-point interfaces."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1074
#, no-wrap
msgid "Va ifa_ifp"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1077
msgid "E<.Pq Vt \"struct ifnet *\"> A link back to the interface structure."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1077
#, no-wrap
msgid "Va ifa_link"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1081
msgid ""
"E<.Pq Fn TAILQ_ENTRY ifaddr> E<.Xr queue 3> glue for list of addresses on "
"each interface."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1081
#, no-wrap
msgid "Va ifa_rtrequest"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1083
msgid "See below."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1083
#, no-wrap
msgid "Va ifa_flags"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1087
msgid ""
"E<.Pq Vt u_short> Some of the flags which would be used for a route "
"representing this address in the route table."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1087
#, no-wrap
msgid "Va ifa_refcnt"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1090
msgid "E<.Pq Vt short> The reference count."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1099
msgid ""
"References to E<.Vt ifaddr> structures are gained by calling the E<.Fn "
"ifa_ref> function and released by calling the E<.Fn ifa_free> function."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1117
msgid ""
"E<.Fn ifa_rtrequest> is a pointer to a function which receives callouts from "
"the routing code E<.Pq Fn rtrequest> to perform link-layer-specific actions "
"upon requests to add, or delete routes.  The E<.Fa cmd> argument indicates "
"the request in question: E<.Dv RTM_ADD>, or E<.Dv RTM_DELETE>.  The E<.Fa "
"rt> argument is the route in question; the E<.Fa info> argument contains the "
"specific destination being manipulated."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ifnet.9:1117
#, no-wrap
msgid "FUNCTIONS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1125
msgid ""
"The functions provided by the generic interface code can be divided into two "
"groups: those which manipulate interfaces, and those which manipulate "
"interface addresses.  In addition to these functions, there may also be "
"link-layer support routines which are used by a number of drivers "
"implementing a specific link layer over different hardware; see the "
"documentation for that link layer for more details."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/ifnet.9:1125
#, no-wrap
msgid "The ifmultiaddr Structure"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1131
msgid ""
"Every multicast-capable interface is associated with a list of multicast "
"group memberships, which indicate at a low level which link-layer multicast "
"addresses (if any) should be accepted, and at a high level, in which "
"network-layer multicast groups a user process has expressed interest."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1133
msgid "The elements of the structure are as follows:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1134
#, no-wrap
msgid "Va ifma_link"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1138
msgid "E<.Pq Fn LIST_ENTRY ifmultiaddr> E<.Xr queue 3> macro glue."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1138
#, no-wrap
msgid "Va ifma_addr"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1144
msgid ""
"E<.Pq Vt \"struct sockaddr *\"> A pointer to the address which this record "
"represents.  The memberships for various address families are stored in "
"arbitrary order."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1144
#, no-wrap
msgid "Va ifma_lladdr"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1153
msgid ""
"E<.Pq Vt \"struct sockaddr *\"> A pointer to the link-layer multicast "
"address, if any, to which the network-layer multicast address in E<.Va "
"ifma_addr> is mapped, else a null pointer.  If this element is non-nil, this "
"membership also holds an invisible reference to another membership for that "
"link-layer address."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1153
#, no-wrap
msgid "Va ifma_refcount"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1156
msgid ""
"E<.Pq Vt u_int> A reference count of requests for this particular "
"membership."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1159
#, no-wrap
msgid "Fn if_alloc"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1167
msgid ""
"Allocate and initialize E<.Vt \"struct ifnet\">.  Initialization includes "
"the allocation of an interface index and may include the allocation of a "
"E<.Fa type> specific structure in E<.Va if_l2com>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1167
#, no-wrap
msgid "Fn if_alloc_dev"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1176
msgid ""
"Allocate and initialize E<.Vt \"struct ifnet\"> as E<.Fn if_alloc> does, "
"with the addition that the ifnet can be tagged with the appropriate NUMA "
"domain derived from the E<.Fa dev> argument passed by the caller."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1176
#, no-wrap
msgid "Fn if_alloc_domain"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1185
msgid ""
"Allocate and initialize E<.Vt \"struct ifnet\"> as E<.Fn if_alloc> does, "
"with the addition that the ifnet will be tagged with the NUMA domain via the "
"E<.Fa numa_domain> argument passed by the caller."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1185
#, no-wrap
msgid "Fn if_attach"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1206
msgid ""
"Link the specified interface E<.Fa ifp> into the list of network "
"interfaces.  Also initialize the list of addresses on that interface, and "
"create a link-layer E<.Vt ifaddr> structure to be the first element in that "
"list.  (A pointer to this address structure is saved in the E<.Vt ifnet> "
"structure and is accessed by the E<.Fn ifaddr_byindex> function.)  The E<.Fa "
"ifp> must have been allocated by E<.Fn if_alloc>, E<.Fn if_alloc_dev> or "
"E<.Fn if_alloc_domain>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1206
#, no-wrap
msgid "Fn if_detach"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1210
msgid "Shut down and unlink the specified E<.Fa ifp> from the interface list."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1210
#, no-wrap
msgid "Fn if_free"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1215
msgid ""
"Free the given E<.Fa ifp> back to the system.  The interface must have been "
"previously detached if it was ever attached."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1215
#, no-wrap
msgid "Fn if_free_type"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1225
msgid ""
"Identical to E<.Fn if_free> except that the given E<.Fa type> is used to "
"free E<.Va if_l2com> instead of the type in E<.Va if_type>.  This is "
"intended for use with drivers that change their interface type."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1225
#, no-wrap
msgid "Fn if_down"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1235
msgid ""
"Mark the interface E<.Fa ifp> as down (i.e., E<.Dv IFF_UP> is not set), "
"flush its output queue, notify protocols of the transition, and generate a "
"message from the E<.Xr route 4> routing socket."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1235
#, no-wrap
msgid "Fn if_up"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1242
msgid ""
"Mark the interface E<.Fa ifp> as up, notify protocols of the transition, and "
"generate a message from the E<.Xr route 4> routing socket."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1242
#, no-wrap
msgid "Fn ifpromisc"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1255
msgid ""
"Add or remove a promiscuous reference to E<.Fa ifp>.  If E<.Fa pswitch> is "
"true, add a reference; if it is false, remove a reference.  On reference "
"count transitions from zero to one and one to zero, set the E<.Dv "
"IFF_PROMISC> flag appropriately and call E<.Fn if_ioctl> to set up the "
"interface in the desired mode."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1255
#, no-wrap
msgid "Fn if_allmulti"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1261
msgid ""
"As E<.Fn ifpromisc>, but for the all-multicasts E<.Pq Dv IFF_ALLMULTI> flag "
"instead of the promiscuous flag."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1261
#, no-wrap
msgid "Fn ifunit"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1266
msgid "Return an E<.Vt ifnet> pointer for the interface named E<.Fa name>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1266
#, no-wrap
msgid "Fn ifunit_ref"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1277
msgid ""
"Return a reference-counted (via E<.Fn ifa_ref>)  E<.Vt ifnet> pointer for "
"the interface named E<.Fa name>.  This is the preferred function over E<.Fn "
"ifunit>.  The caller is responsible for releasing the reference with E<.Fn "
"if_rele> when it is finished with the ifnet."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1277
#, no-wrap
msgid "Fn ifioctl"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1298
msgid ""
"Process the ioctl request E<.Fa cmd>, issued on socket E<.Fa so> by thread "
"E<.Fa td>, with data parameter E<.Fa data>.  This is the main routine for "
"handling all interface configuration requests from user mode.  It is "
"ordinarily only called from the socket-layer E<.Xr ioctl 2> handler, and "
"only for commands with class E<.Sq Li i>.  Any unrecognized commands will be "
"passed down to socket E<.Fa so Ns 's> protocol for further interpretation.  "
"The following commands are handled by E<.Fn ifioctl>:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1300
#, no-wrap
msgid "Dv SIOCGIFCONF"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1303
msgid "Get interface configuration.  (No call-down to driver.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1304
#, no-wrap
msgid "Dv SIOCSIFNAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1312
msgid ""
"Set the interface name.  E<.Dv RTM_IFANNOUNCE> departure and arrival "
"messages are sent so that routing code that relies on the interface name "
"will update its interface list.  Caller must have appropriate privilege.  "
"(No call-down to driver.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1312
#, no-wrap
msgid "Dv SIOCGIFCAP"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1313
#, no-wrap
msgid "Dv SIOCGIFFIB"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1314
#, no-wrap
msgid "Dv SIOCGIFFLAGS"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1315
#, no-wrap
msgid "Dv SIOCGIFMETRIC"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1316
#, no-wrap
msgid "Dv SIOCGIFMTU"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1317
#, no-wrap
msgid "Dv SIOCGIFPHYS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1320
msgid ""
"Get interface capabilities, FIB, flags, metric, MTU, medium selection.  (No "
"call-down to driver.)"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1321
#, no-wrap
msgid "Dv SIOCSIFCAP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1336
msgid ""
"Enable or disable interface capabilities.  Caller must have appropriate "
"privilege.  Before a call to the driver-specific E<.Fn if_ioctl> routine, "
"the requested mask for enabled capabilities is checked against the mask of "
"capabilities supported by the interface, E<.Va if_capabilities>.  Requesting "
"to enable an unsupported capability is invalid.  The rest is supposed to be "
"done by the driver, which includes updating E<.Va if_capenable> and E<.Va "
"if_data.ifi_hwassist> appropriately."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1337
#, no-wrap
msgid "Dv SIOCSIFFIB"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1343
msgid ""
"Sets interface FIB.  Caller must have appropriate privilege.  FIB values "
"start at 0 and values greater or equals than E<.Va net.fibs> are considered "
"invalid."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1343
#, no-wrap
msgid "Dv SIOCSIFFLAGS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1362
msgid ""
"Change interface flags.  Caller must have appropriate privilege.  If a "
"change to the E<.Dv IFF_UP> flag is requested, E<.Fn if_up> or E<.Fn "
"if_down> is called as appropriate.  Flags listed in E<.Dv IFF_CANTCHANGE> "
"are masked off, and the field E<.Va if_flags> in the interface structure is "
"updated.  Finally, the driver E<.Fn if_ioctl> routine is called to perform "
"any setup requested."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1363
#, no-wrap
msgid "Dv SIOCSIFMETRIC"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1364
#, no-wrap
msgid "Dv SIOCSIFPHYS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1367
msgid "Change interface metric or medium.  Caller must have appropriate privilege."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1368
#, no-wrap
msgid "Dv SIOCSIFMTU"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1378
msgid ""
"Change interface MTU.  Caller must have appropriate privilege.  MTU values "
"less than 72 or greater than 65535 are considered invalid.  The driver E<.Fn "
"if_ioctl> routine is called to implement the change; it is responsible for "
"any additional sanity checking and for actually modifying the MTU in the "
"interface structure."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1379
#, no-wrap
msgid "Dv SIOCADDMULTI"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1380
#, no-wrap
msgid "Dv SIOCDELMULTI"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1388
msgid ""
"Add or delete permanent multicast group memberships on the interface.  "
"Caller must have appropriate privilege.  The E<.Fn if_addmulti> or E<.Fn "
"if_delmulti> function is called to perform the operation; qq.v."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1389
#, no-wrap
msgid "Dv SIOCAIFADDR"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/ifnet.9:1390
#, no-wrap
msgid "Dv SIOCDIFADDR"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1393
msgid ""
"The socket's protocol control routine is called to implement the requested "
"action."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1404
msgid ""
"E<.Fn if_down>, E<.Fn ifioctl>, E<.Fn ifpromisc>, and E<.Fn if_up> must be "
"called at E<.Fn splnet> or higher."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1426
msgid ""
"Several functions exist to look up an interface address structure given an "
"address.  E<.Fn ifa_ifwithaddr> returns an interface address with either a "
"local address or a broadcast address precisely matching the parameter E<.Fa "
"addr>.  E<.Fn ifa_ifwithdstaddr> returns an interface address for a "
"point-to-point interface whose remote E<.Pq Dq destination> address is E<.Fa "
"addr> and a fib is E<.Fa fib>.  If E<.Fa fib> is E<.Dv RT_ALL_FIBS>, then "
"the first interface address matching E<.Fa addr> will be returned."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1442
msgid ""
"E<.Fn ifa_ifwithnet> returns the most specific interface address which "
"matches the specified address, E<.Fa addr>, subject to its configured "
"netmask, or a point-to-point interface address whose remote address is E<.Fa "
"addr> if one is found.  If E<.Fa ignore_ptp> is true, skip point-to-point "
"interface addresses.  The E<.Fa fib> parameter is handled the same way as by "
"E<.Fn ifa_ifwithdstaddr>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1454
msgid ""
"E<.Fn ifaof_ifpforaddr> returns the most specific address configured on "
"interface E<.Fa ifp> which matches address E<.Fa addr>, subject to its "
"configured netmask.  If the interface is point-to-point, only an interface "
"address whose remote address is precisely E<.Fa addr> will be returned."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1458
msgid ""
"E<.Fn ifaddr_byindex> returns the link-level address of the interface with "
"the given index E<.Fa idx>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1461
msgid ""
"All of these functions return a null pointer if no such address can be "
"found."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1483
msgid ""
"The E<.Fn if_addmulti>, E<.Fn if_delmulti>, and E<.Fn if_findmulti> "
"functions provide support for requesting and relinquishing multicast group "
"memberships, and for querying an interface's membership list, respectively.  "
"The E<.Fn if_addmulti> function takes a pointer to an interface, E<.Fa ifp>, "
"and a generic address, E<.Fa sa>.  It also takes a pointer to a E<.Vt "
"\"struct ifmultiaddr *\"> which is filled in on successful return with the "
"address of the group membership control block.  The E<.Fn if_addmulti> "
"function performs the following four-step process:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1490
msgid ""
"Call the interface's E<.Fn if_resolvemulti> entry point to determine the "
"link-layer address, if any, corresponding to this membership request, and "
"also to give the link layer an opportunity to veto this membership request "
"should it so desire."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1495
msgid ""
"Check the interface's group membership list for a pre-existing membership "
"for this group.  If one is not found, allocate a new one; if one is, "
"increment its reference count."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1500
msgid ""
"If the E<.Fn if_resolvemulti> routine returned a link-layer address "
"corresponding to the group, repeat the previous step for that address as "
"well."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1510
msgid ""
"If the interface's multicast address filter needs to be changed because a "
"new membership was added, call the interface's E<.Fn if_ioctl> routine (with "
"a E<.Fa cmd> argument of E<.Dv SIOCADDMULTI>)  to request that it do so."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1521
msgid ""
"The E<.Fn if_delmulti> function, given an interface E<.Fa ifp> and an "
"address, E<.Fa sa>, reverses this process.  Both functions return zero on "
"success, or a standard error number on failure."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1531
msgid ""
"The E<.Fn if_findmulti> function examines the membership list of interface "
"E<.Fa ifp> for an address matching E<.Fa sa>, and returns a pointer to that "
"E<.Vt \"struct ifmultiaddr\"> if one is found, else it returns a null "
"pointer."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ifnet.9:1531
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1552
msgid ""
"E<.Xr ioctl 2>, E<.Xr link_addr 3>, E<.Xr queue 3>, E<.Xr sysctl 3>, E<.Xr "
"bpf 4>, E<.Xr ifmib 4>, E<.Xr lo 4>, E<.Xr netintro 4>, E<.Xr polling 4>, "
"E<.Xr config 8>, E<.Xr ppp 8>, E<.Xr mbuf 9>, E<.Xr rtentry 9> E<.Rs> E<.%A "
"Gary R. Wright> E<.%A W. Richard Stevens> E<.%B TCP/IP Illustrated> E<.%V "
"Vol. 2> E<.%O Addison-Wesley, ISBN 0-201-63354-X> E<.Re>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ifnet.9:1552
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ifnet.9:1554
msgid "This manual page was written by E<.An Garrett A. Wollman>."
msgstr ""
