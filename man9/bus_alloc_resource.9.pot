# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/bus_alloc_resource.9:31
#, no-wrap
msgid "May 20, 2016"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/bus_alloc_resource.9:32
#, no-wrap
msgid "BUS_ALLOC_RESOURCE 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/bus_alloc_resource.9:34
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:38
msgid ""
"E<.Nm bus_alloc_resource>, E<.Nm bus_alloc_resource_any>, E<.Nm "
"bus_alloc_resource_anywhere>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/bus_alloc_resource.9:38
#, no-wrap
msgid "allocate resources from a parent bus"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/bus_alloc_resource.9:39
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/bus_alloc_resource.9:40
#, no-wrap
msgid "sys/param.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/bus_alloc_resource.9:41
#, no-wrap
msgid "sys/bus.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/bus_alloc_resource.9:43
#, no-wrap
msgid "machine/bus.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/bus_alloc_resource.9:44
#, no-wrap
msgid "sys/rman.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/bus_alloc_resource.9:45
#, no-wrap
msgid "machine/resource.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:57
msgid ""
"E<.Ft struct resource *> E<.Fo bus_alloc_resource> E<.Fa \"device_t dev\" "
"\"int type\" \"int *rid\" \"rman_res_t start\" \"rman_res_t end\"> E<.Fa "
"\"rman_res_t count\" \"u_int flags\"> E<.Fc> E<.Ft struct resource *> E<.Fn "
"bus_alloc_resource_any \"device_t dev\" \"int type\" \"int *rid\" \"u_int "
"flags\"> E<.Ft struct resource *> E<.Fo bus_alloc_resource_anywhere> E<.Fa "
"\"device_t dev\" \"int type\" \"int *rid\" \"rman_res_t count\" \"u_int "
"flags\"> E<.Fc>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/bus_alloc_resource.9:57
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:62
msgid ""
"This is an easy interface to the resource-management functions.  It hides "
"the indirection through the parent's method table.  This function generally "
"should be called in attach, but (except in some rare cases) never earlier."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:86
msgid ""
"The E<.Fn bus_alloc_resource_any> and E<.Fn bus_alloc_resource_anywhere> "
"functions are convenience wrappers for E<.Fn bus_alloc_resource>.  E<.Fn "
"bus_alloc_resource_any> sets E<.Fa start>, E<.Fa end>, and E<.Fa count> to "
"the default resource (see description of E<.Fa start> below).  E<.Fn "
"bus_alloc_resource_anywhere> sets E<.Fa start> and E<.Fa end> to the default "
"resource and uses the provided E<.Fa count> argument."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:88
msgid "The arguments are as follows:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:93
msgid ""
"E<.Fa dev> is the device that requests ownership of the resource.  Before "
"allocation, the resource is owned by the parent bus."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:97
msgid "E<.Fa type> is the type of resource you want to allocate.  It is one of:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/bus_alloc_resource.9:98
#, no-wrap
msgid "Dv PCI_RES_BUS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:100
msgid "for PCI bus numbers"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/bus_alloc_resource.9:100
#, no-wrap
msgid "Dv SYS_RES_IRQ"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:102
msgid "for IRQs"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/bus_alloc_resource.9:102
#, no-wrap
msgid "Dv SYS_RES_DRQ"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:104
msgid "for ISA DMA lines"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/bus_alloc_resource.9:104
#, no-wrap
msgid "Dv SYS_RES_IOPORT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:106
msgid "for I/O ports"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/bus_alloc_resource.9:106
#, no-wrap
msgid "Dv SYS_RES_MEMORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:108
msgid "for I/O memory"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:120
msgid ""
"E<.Fa rid> points to a bus specific handle that identifies the resource "
"being allocated.  For ISA this is an index into an array of resources that "
"have been setup for this device by either the PnP mechanism, or via the "
"hints mechanism.  For PCCARD, this is an index into the array of resources "
"described by the PC Card's CIS entry.  For PCI, the offset into PCI config "
"space which has the BAR to use to access the resource.  The bus methods are "
"free to change the RIDs that they are given as a parameter.  You must not "
"depend on the value you gave it earlier."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:132
msgid ""
"E<.Fa start> and E<.Fa end> are the start/end addresses of the resource.  If "
"you specify values of 0ul for E<.Fa start> and ~0ul for E<.Fa end> and 1 for "
"E<.Fa count>, the default values for the bus are calculated."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:146
msgid ""
"E<.Fa count> is the size of the resource.  For example, the size of an I/O "
"port is usually 1 byte (but some devices override this).  If you specified "
"the default values for E<.Fa start> and E<.Fa end>, then the default value "
"of the bus is used if E<.Fa count> is smaller than the default value and "
"E<.Fa count> is used, if it is bigger than the default value."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:150
msgid ""
"E<.Fa flags> sets the flags for the resource.  You can set one or more of "
"these flags:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/bus_alloc_resource.9:151
#, no-wrap
msgid "Dv RF_ALLOCATED"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:155
msgid ""
"resource has been reserved.  The resource still needs to be activated with "
"E<.Xr bus_activate_resource 9>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/bus_alloc_resource.9:155
#, no-wrap
msgid "Dv RF_ACTIVE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:157
msgid "activate resource atomically."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/bus_alloc_resource.9:157
#, no-wrap
msgid "Dv RF_PREFETCHABLE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:159
msgid "resource is prefetchable."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/bus_alloc_resource.9:159
#, no-wrap
msgid "Dv RF_SHAREABLE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:169
msgid ""
"resource permits contemporaneous sharing.  It should always be set unless "
"you know that the resource cannot be shared.  It is the bus driver's task to "
"filter out the flag if the bus does not support sharing.  For example, E<.Xr "
"pccard 4> cannot share IRQs while E<.Xr cardbus 4> can."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/bus_alloc_resource.9:169
#, no-wrap
msgid "Dv RF_UNMAPPED"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:172
msgid ""
"do not establish implicit mapping when activated via E<.Xr "
"bus_activate_resource 9>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/bus_alloc_resource.9:174
#, no-wrap
msgid "RETURN VALUES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:178
msgid ""
"A pointer to E<.Va struct resource> is returned on success, a null pointer "
"otherwise."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/bus_alloc_resource.9:178
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:185
msgid ""
"This is some example code that allocates a 32 byte I/O port range and an "
"IRQ.  The values of E<.Va portid> and E<.Va irqid> should be saved in the "
"softc of the device after these calls."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:188
#, no-wrap
msgid ""
"\tstruct resource *portres, *irqres;\n"
"\tint portid, irqid;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:195
#, no-wrap
msgid ""
"\tportid = 0;\n"
"\tirqid = 0;\n"
"\tportres = bus_alloc_resource(dev, SYS_RES_IOPORT, &portid,\n"
"\t\t\t0ul, ~0ul, 32, RF_ACTIVE);\n"
"\tirqres = bus_alloc_resource_any(dev, SYS_RES_IRQ, &irqid,\n"
"\t\t\tRF_ACTIVE | RF_SHAREABLE);\n"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/bus_alloc_resource.9:196
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:203
msgid ""
"E<.Xr bus_activate_resource 9>, E<.Xr bus_adjust_resource 9>, E<.Xr "
"bus_map_resource 9>, E<.Xr bus_release_resource 9>, E<.Xr device 9>, E<.Xr "
"driver 9>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/bus_alloc_resource.9:203
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/bus_alloc_resource.9:208
msgid ""
"E<.An -nosplit> This manual page was written by E<.An Alexander Langer Aq Mt "
"alex@big.endian.de> with parts by E<.An Warner Losh Aq Mt imp@FreeBSD.org>."
msgstr ""
