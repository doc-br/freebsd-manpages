# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:29-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/sf_buf.9:33
#, no-wrap
msgid "January 28, 2007"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/sf_buf.9:34
#, no-wrap
msgid "SF_BUF 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/sf_buf.9:36
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:38
msgid "E<.Nm sf_buf>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/sf_buf.9:38
#, no-wrap
msgid "manage temporary kernel address space mapping for memory pages"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/sf_buf.9:39
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/sf_buf.9:40
#, no-wrap
msgid "sys/sf_buf.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:49
msgid ""
"E<.Ft struct sf_buf *> E<.Fn sf_buf_alloc \"struct vm_page *m\" \"int "
"flags\"> E<.Ft void> E<.Fn sf_buf_free \"struct sf_buf *sf\"> E<.Ft "
"vm_offset_t> E<.Fn sf_buf_kva \"struct sf_buf *sf\"> E<.Ft struct vm_page *> "
"E<.Fn sf_buf_page \"struct sf_buf *sf\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/sf_buf.9:49
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:65
msgid ""
"The E<.Nm> interface, historically the E<.Xr sendfile 2> buffer interface, "
"allows kernel subsystems to manage temporary kernel address space mappings "
"for physical memory pages.  On systems with a direct memory map region "
"(allowing all physical pages to be visible in the kernel address space at "
"all times), the E<.Vt \"struct sf_buf\"> will point to an address in the "
"direct map region; on systems without a direct memory map region, the E<.Vt "
"\"struct sf_buf\"> will manage a temporary kernel address space mapping "
"valid for the lifetime of the E<.Vt \"struct sf_buf\".>"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:78
msgid ""
"Call E<.Fn sf_buf_alloc> to allocate a E<.Vt \"struct sf_buf\"> for a "
"physical memory page.  E<.Fn sf_buf_alloc> is not responsible for arranging "
"for the page to be present in physical memory; the caller should already "
"have arranged for the page to be wired, i.e., by calling E<.Xr vm_page_wire "
"9>.  Several flags may be passed to E<.Fn sf_buf_alloc>:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/sf_buf.9:79
#, no-wrap
msgid "Dv SFB_CATCH"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:87
msgid ""
"Cause E<.Fn sf_buf_alloc> to abort and return E<.Dv NULL> if a signal is "
"received waiting for a E<.Vt \"struct sf_buf\"> to become available."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/sf_buf.9:87
#, no-wrap
msgid "Dv SFB_NOWAIT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:95
msgid ""
"Cause E<.Fn sf_buf_alloc> to return E<.Dv NULL> rather than sleeping if a "
"E<.Vt \"struct sf_buf\"> is not immediately available."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/sf_buf.9:95
#, no-wrap
msgid "Dv SFB_CPUPRIVATE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:106
msgid ""
"Cause E<.Fn sf_buf_alloc> to only arrange that the temporary mapping be "
"valid on the current CPU, avoiding unnecessary TLB shootdowns for mappings "
"that will only be accessed on a single CPU at a time.  The caller must "
"ensure that accesses to the virtual address occur only on the CPU from which "
"E<.Fn sf_buf_alloc> was invoked, perhaps by using E<.Fn sched_pin>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:111
msgid "Call E<.Fn sf_buf_kva> to return a kernel mapped address for the page."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:116
msgid ""
"Call E<.Fn sf_buf_page> to return a pointer to the page originally passed "
"into E<.Fn sf_buf_alloc>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:127
msgid ""
"Call E<.Fn sf_buf_free> to release the E<.Vt \"struct sf_buf\"> reference.  "
"The caller is responsible for releasing any wiring they have previously "
"acquired on the physical page; E<.Fn sf_buf_free> releases only the "
"temporary kernel address space mapping, not the page itself."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:132
msgid ""
"Uses of this interface include managing mappings of borrowed pages from user "
"memory, such as in zero-copy socket I/O, or pages of memory from the buffer "
"cache referenced by mbuf external storage for E<.Xr sendfile 2>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/sf_buf.9:132
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:135
msgid "E<.Xr sendfile 2>, E<.Xr vm_page_wire 9>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/sf_buf.9:135
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/sf_buf.9:142
msgid ""
"E<.An -nosplit> The E<.Vt \"struct sf_buf\"> API was designed and "
"implemented by E<.An Alan L. Cox>.  This manual page was written by E<.An "
"Robert N. M. Watson>."
msgstr ""
