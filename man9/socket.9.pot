# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/socket.9:29
#, no-wrap
msgid "October 18, 2018"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/socket.9:30
#, no-wrap
msgid "SOCKET 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/socket.9:32
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:34
msgid "E<.Nm socket>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/socket.9:34
#, no-wrap
msgid "kernel socket interface"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/socket.9:35
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/socket.9:36
#, no-wrap
msgid "sys/socket.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/socket.9:37
#, no-wrap
msgid "sys/socketvar.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:143
msgid ""
"E<.Ft void> E<.Fn soabort \"struct socket *so\"> E<.Ft int> E<.Fn soaccept "
"\"struct socket *so\" \"struct sockaddr **nam\"> E<.Ft int> E<.Fn socheckuid "
"\"struct socket *so\" \"uid_t uid\"> E<.Ft int> E<.Fn sobind \"struct socket "
"*so\" \"struct sockaddr *nam\" \"struct thread *td\"> E<.Ft void> E<.Fn "
"soclose \"struct socket *so\"> E<.Ft int> E<.Fn soconnect \"struct socket "
"*so\" \"struct sockaddr *nam\" \"struct thread *td\"> E<.Ft int> E<.Fo "
"socreate> E<.Fa \"int dom\" \"struct socket **aso\" \"int type\" \"int "
"proto\"> E<.Fa \"struct ucred *cred\" \"struct thread *td\"> E<.Fc> E<.Ft "
"int> E<.Fn sodisconnect \"struct socket *so\"> E<.Ft void> E<.Fo sodtor_set> "
"E<.Fa \"struct socket *so\" > E<.Fa \"void (*func)(struct socket *)\"> "
"E<.Fc> E<.Ft struct sockaddr *> E<.Fn sodupsockaddr \"const struct sockaddr "
"*sa\" \"int mflags\"> E<.Ft void> E<.Fn sofree \"struct socket *so\"> E<.Ft "
"void> E<.Fn sohasoutofband \"struct socket *so\"> E<.Ft int> E<.Fn solisten "
"\"struct socket *so\" \"int backlog\" \"struct thread *td\"> E<.Ft void> "
"E<.Fn solisten_proto \"struct socket *so\" \"int backlog\"> E<.Ft int> E<.Fn "
"solisten_proto_check \"struct socket *so\"> E<.Ft struct socket *> E<.Fn "
"sonewconn \"struct socket *head\" \"int connstatus\"> E<.Ft int> E<.Fo "
"sopoll> E<.Fa \"struct socket *so\" \"int events\" \"struct ucred "
"*active_cred\"> E<.Fa \"struct thread *td\"> E<.Fc> E<.Ft int> E<.Fo "
"sopoll_generic> E<.Fa \"struct socket *so\" \"int events\" \"struct ucred "
"*active_cred\"> E<.Fa \"struct thread *td\"> E<.Fc> E<.Ft int> E<.Fo "
"soreceive> E<.Fa \"struct socket *so\" \"struct sockaddr **psa\" \"struct "
"uio *uio\"> E<.Fa \"struct mbuf **mp0\" \"struct mbuf **controlp\" \"int "
"*flagsp\"> E<.Fc> E<.Ft int> E<.Fo soreceive_stream> E<.Fa \"struct socket "
"*so\" \"struct sockaddr **paddr\"> E<.Fa \"struct uio *uio\" \"struct mbuf "
"**mp0\" \"struct mbuf **controlp\"> E<.Fa \"int *flagsp\"> E<.Fc> E<.Ft int> "
"E<.Fo soreceive_dgram> E<.Fa \"struct socket *so\" \"struct sockaddr "
"**paddr\"> E<.Fa \"struct uio *uio\" \"struct mbuf **mp0\" \"struct mbuf "
"**controlp\"> E<.Fa \"int *flagsp\"> E<.Fc> E<.Ft int> E<.Fo "
"soreceive_generic> E<.Fa \"struct socket *so\" \"struct sockaddr **paddr\"> "
"E<.Fa \"struct uio *uio\" \"struct mbuf **mp0\" \"struct mbuf **controlp\"> "
"E<.Fa \"int *flagsp\"> E<.Fc> E<.Ft int> E<.Fn soreserve \"struct socket "
"*so\" \"u_long sndcc\" \"u_long rcvcc\"> E<.Ft void> E<.Fn sorflush \"struct "
"socket *so\"> E<.Ft int> E<.Fo sosend> E<.Fa \"struct socket *so\" \"struct "
"sockaddr *addr\" \"struct uio *uio\"> E<.Fa \"struct mbuf *top\" \"struct "
"mbuf *control\" \"int flags\" \"struct thread *td\"> E<.Fc> E<.Ft int> E<.Fo "
"sosend_dgram> E<.Fa \"struct socket *so\" \"struct sockaddr *addr\"> E<.Fa "
"\"struct uio *uio\" \"struct mbuf *top\" \"struct mbuf *control\"> E<.Fa "
"\"int flags\" \"struct thread *td\"> E<.Fc> E<.Ft int> E<.Fo sosend_generic> "
"E<.Fa \"struct socket *so\" \"struct sockaddr *addr\"> E<.Fa \"struct uio "
"*uio\" \"struct mbuf *top\" \"struct mbuf *control\"> E<.Fa \"int flags\" "
"\"struct thread *td\"> E<.Fc> E<.Ft int> E<.Fn soshutdown \"struct socket "
"*so\" \"int how\"> E<.Ft void> E<.Fn sotoxsocket \"struct socket *so\" "
"\"struct xsocket *xso\"> E<.Ft void> E<.Fn soupcall_clear \"struct socket "
"*so\" \"int which\"> E<.Ft void> E<.Fo soupcall_set> E<.Fa \"struct socket "
"*so\" \"int which\"> E<.Fa \"int (*func)(struct socket *, void *, int)\" "
"\"void *arg\"> E<.Fc> E<.Ft void> E<.Fn sowakeup \"struct socket *so\" "
"\"struct sockbuf *sb\">"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/socket.9:143
#, no-wrap
msgid "sys/sockopt.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:152
msgid ""
"E<.Ft int> E<.Fn sosetopt \"struct socket *so\" \"struct sockopt *sopt\"> "
"E<.Ft int> E<.Fn sogetopt \"struct socket *so\" \"struct sockopt *sopt\"> "
"E<.Ft int> E<.Fn sooptcopyin \"struct sockopt *sopt\" \"void *buf\" \"size_t "
"len\" \"size_t minlen\"> E<.Ft int> E<.Fn sooptcopyout \"struct sockopt "
"*sopt\" \"const void *buf\" \"size_t len\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/socket.9:152
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:171
msgid ""
"The kernel E<.Nm> programming interface permits in-kernel consumers to "
"interact with local and network socket objects in a manner similar to that "
"permitted using the E<.Xr socket 2> user API.  These interfaces are "
"appropriate for use by distributed file systems and other network-aware "
"kernel services.  While the user API operates on file descriptors, the "
"kernel interfaces operate directly on E<.Vt \"struct socket\"> pointers.  "
"Some portions of the kernel API exist only to implement the user API, and "
"are not expected to be used by kernel code.  The portions of the socket API "
"used by socket consumers and implementations of network protocols will "
"differ; some routines are only useful for protocol implementors."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:177
msgid ""
"Except where otherwise indicated, E<.Nm> functions may sleep, and are not "
"appropriate for use in an E<.Xr ithread 9> context or while holding "
"non-sleepable kernel locks."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/socket.9:177
#, no-wrap
msgid "Creating and Destroying Sockets"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:198
msgid ""
"A new socket may be created using E<.Fn socreate>.  As with E<.Xr socket 2>, "
"arguments specify the requested domain, type, and protocol via E<.Fa dom , "
"type>, and E<.Fa proto>.  The socket is returned via E<.Fa aso> on success.  "
"In addition, the credential used to authorize operations associated with the "
"socket will be passed via E<.Fa cred> (and will be cached for the lifetime "
"of the socket), and the thread performing the operation via E<.Fa td>.  "
"E<.Em Warning>: authorization of the socket creation operation will be "
"performed using the thread credential for some protocols (such as raw "
"sockets)."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:203
msgid ""
"Sockets may be closed and freed using E<.Fn soclose>, which has similar "
"semantics to E<.Xr close 2>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:228
msgid ""
"In certain circumstances, it is appropriate to destroy a socket without "
"waiting for it to disconnect, for which E<.Fn soabort> is used.  This is "
"only appropriate for incoming connections which are in a partially connected "
"state.  It must be called on an unreferenced socket, by the thread which "
"removed the socket from its listen queue, to prevent races.  It will call "
"into protocol code, so no socket locks may be held over the call.  The "
"caller of E<.Fn soabort> is responsible for setting the VNET context.  The "
"normal path to freeing a socket is E<.Fn sofree>, which handles reference "
"counting on the socket.  It should be called whenever a reference is "
"released, and also whenever reference flags are cleared in socket or "
"protocol code.  Calls to E<.Fn sofree> should not be made from outside the "
"socket layer; outside callers should use E<.Fn soclose> instead."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/socket.9:228
#, no-wrap
msgid "Connections and Addresses"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:239
msgid ""
"The E<.Fn sobind> function is equivalent to the E<.Xr bind 2> system call, "
"and binds the socket E<.Fa so> to the address E<.Fa nam>.  The operation "
"would be authorized using the credential on thread E<.Fa td>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:266
msgid ""
"The E<.Fn soconnect> function is equivalent to the E<.Xr connect 2> system "
"call, and initiates a connection on the socket E<.Fa so> to the address "
"E<.Fa nam>.  The operation will be authorized using the credential on thread "
"E<.Fa td>.  Unlike the user system call, E<.Fn soconnect> returns "
"immediately; the caller may E<.Xr msleep 9> on E<.Fa so-E<gt>so_timeo> while "
"holding the socket mutex and waiting for the E<.Dv SS_ISCONNECTING> flag to "
"clear or E<.Fa so-E<gt>so_error> to become non-zero.  If E<.Fn soconnect> "
"fails, the caller must manually clear the E<.Dv SS_ISCONNECTING> flag."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:270
msgid "A call to E<.Fn sodisconnect> disconnects the socket without closing it."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:277
msgid ""
"The E<.Fn soshutdown> function is equivalent to the E<.Xr shutdown 2> system "
"call, and causes part or all of a connection on a socket to be closed down."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:280
msgid ""
"Sockets are transitioned from non-listening status to listening with E<.Fn "
"solisten>."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/socket.9:280
#, no-wrap
msgid "Socket Options"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:293
msgid ""
"The E<.Fn sogetopt> function is equivalent to the E<.Xr getsockopt 2> system "
"call, and retrieves a socket option on socket E<.Fa so>.  The E<.Fn "
"sosetopt> function is equivalent to the E<.Xr setsockopt 2> system call, and "
"sets a socket option on socket E<.Fa so>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:305
msgid ""
"The second argument in both E<.Fn sogetopt> and E<.Fn sosetopt> is the E<.Fa "
"sopt> pointer to a E<.Vt \"struct sopt\"> describing the socket option "
"operation.  The caller-allocated structure must be zeroed, and then have its "
"fields initialized to specify socket option operation arguments:"
msgstr ""

#. type: It
#: /usr/src/share/man/man9/socket.9:306
#, no-wrap
msgid "Va sopt_dir"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:312
msgid ""
"Set to E<.Dv SOPT_SET> or E<.Dv SOPT_GET> depending on whether this is a get "
"or set operation."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/socket.9:312
#, no-wrap
msgid "Va sopt_level"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:316
msgid ""
"Specify the level in the network stack the operation is targeted at; for "
"example, E<.Dv SOL_SOCKET>."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/socket.9:316
#, no-wrap
msgid "Va sopt_name"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:318
msgid "Specify the name of the socket option to set."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/socket.9:318
#, no-wrap
msgid "Va sopt_val"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:320
msgid "Kernel space pointer to the argument value for the socket option."
msgstr ""

#. type: It
#: /usr/src/share/man/man9/socket.9:320
#, no-wrap
msgid "Va sopt_valsize"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:322
msgid "Size of the argument value in bytes."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/socket.9:323
#, no-wrap
msgid "Socket Upcalls"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:367
msgid ""
"In order for the owner of a socket to be notified when the socket is ready "
"to send or receive data, an upcall may be registered on the socket.  The "
"upcall is a function that will be called by the socket framework when a "
"socket buffer associated with the given socket is ready for reading or "
"writing.  E<.Fn soupcall_set> is used to register a socket upcall.  The "
"function E<.Va func> is registered, and the pointer E<.Va arg> will be "
"passed as its second argument when it is called by the framework.  The "
"possible values for E<.Va which> are E<.Dv SO_RCV> and E<.Dv SO_SND>, which "
"register upcalls for receive and send events, respectively.  The upcall "
"function E<.Fn func> must return either E<.Dv SU_OK> or E<.Dv "
"SU_ISCONNECTED>, depending on whether or not a call to E<.Xr soisconnected> "
"should be made by the socket framework after the upcall returns.  The upcall "
"E<.Va func> cannot call E<.Xr soisconnected> itself due to lock ordering "
"with the socket buffer lock.  Only E<.Dv SO_RCV> upcalls should return E<.Dv "
"SU_ISCONNECTED>.  When a E<.Dv SO_RCV> upcall returns E<.Dv SU_ISCONNECTED>, "
"the upcall will be removed from the socket."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:377
msgid ""
"Upcalls are removed from their socket by E<.Fn soupcall_clear>.  The E<.Va "
"which> argument again specifies whether the sending or receiving upcall is "
"to be cleared, with E<.Dv SO_RCV> or E<.Dv SO_SND>."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/socket.9:377
#, no-wrap
msgid "Socket Destructor Callback"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:384
msgid ""
"A kernel system can use the E<.Fn sodtor_set> function to set a destructor "
"for a socket.  The destructor is called when the socket is is about to be "
"freed.  The destructor is called before the protocol detach routine.  The "
"destructor can serve as a callback to initiate additional cleanup actions."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/socket.9:384
#, no-wrap
msgid "Socket I/O"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:428
msgid ""
"The E<.Fn soreceive> function is equivalent to the E<.Xr recvmsg 2> system "
"call, and attempts to receive bytes of data from the socket E<.Fa so>, "
"optionally blocking awaiting for data if none is ready to read.  Data may be "
"retrieved directly to kernel or user memory via the E<.Fa uio> argument, or "
"as an mbuf chain returned to the caller via E<.Fa mp0>, avoiding a data "
"copy.  The E<.Fa uio> must always be E<.Pf non- Dv NULL>.  If E<.Fa mp0> is "
"E<.Pf non- Dv NULL>, only the E<.Fa uio_resid> of E<.Fa uio> is used.  The "
"caller may optionally retrieve a socket address on a protocol with the E<.Dv "
"PR_ADDR> capability by providing storage via E<.Pf non- Dv NULL> E<.Fa psa> "
"argument.  The caller may optionally retrieve control data mbufs via a E<.Pf "
"non- Dv NULL> E<.Fa controlp> argument.  Optional flags may be passed to "
"E<.Fn soreceive> via a E<.Pf non- Dv NULL> E<.Fa flagsp> argument, and use "
"the same flag name space as the E<.Xr recvmsg 2> system call."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:463
msgid ""
"The E<.Fn sosend> function is equivalent to the E<.Xr sendmsg 2> system "
"call, and attempts to send bytes of data via the socket E<.Fa so>, "
"optionally blocking if data cannot be immediately sent.  Data may be sent "
"directly from kernel or user memory via the E<.Fa uio> argument, or as an "
"mbuf chain via E<.Fa top>, avoiding a data copy.  Only one of the E<.Fa uio> "
"or E<.Fa top> pointers may be E<.Pf non- Dv NULL>.  An optional destination "
"address may be specified via a E<.Pf non- Dv NULL> E<.Fa addr> argument, "
"which may result in an implicit connect if supported by the protocol.  The "
"caller may optionally send control data mbufs via a E<.Pf non- Dv NULL> "
"E<.Fa control> argument.  Flags may be passed to E<.Fn sosend> using the "
"E<.Fa flags> argument, and use the same flag name space as the E<.Xr sendmsg "
"2> system call."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:470
msgid ""
"Kernel callers running in E<.Xr ithread 9> context, or with a mutex held, "
"will wish to use non-blocking sockets and pass the E<.Dv MSG_DONTWAIT> flag "
"in order to prevent these functions from sleeping."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:488
msgid ""
"A socket can be queried for readability, writability, out-of-band data, or "
"end-of-file using E<.Fn sopoll>.  The possible values for E<.Va events> are "
"as for E<.Xr poll 2>, with symbolic values E<.Dv POLLIN>, E<.Dv POLLPRI>, "
"E<.Dv POLLOUT>, E<.Dv POLLRDNORM>, E<.Dv POLLWRNORM>, E<.Dv POLLRDBAND>, and "
"E<.Dv POLLINGEOF> taken from"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/socket.9:488
#, no-wrap
msgid "sys/poll.h ."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:493
msgid ""
"Calls to E<.Fn soaccept> pass through to the protocol's accept routine to "
"accept an incoming connection."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/socket.9:493
#, no-wrap
msgid "Socket Utility Functions"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:498
msgid ""
"The uid of a socket's credential may be compared against a E<.Va uid> with "
"E<.Fn socheckuid>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:503
msgid ""
"A copy of an existing E<.Vt struct sockaddr> may be made using E<.Fn "
"sodupsockaddr>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:508
msgid ""
"Protocol implementations notify the socket layer of the arrival of "
"out-of-band data using E<.Fn sohasoutofband>, so that the socket layer can "
"notify socket consumers of the available data."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:516
msgid ""
"An E<.Dq external-format> version of a E<.Vt struct socket> can be created "
"using E<.Fn sotoxsocket>, suitable for isolating user code from changes in "
"the kernel structure."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man9/socket.9:516
#, no-wrap
msgid "Protocol Implementations"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:534
msgid ""
"Protocols must supply an implementation for E<.Fn solisten>; such protocol "
"implementations can call back into the socket layer using E<.Fn "
"solisten_proto_check> and E<.Fn solisten_proto> to check and set the "
"socket-layer listen state.  These callbacks are provided so that the "
"protocol implementation can order the socket layer and protocol locks as "
"necessary.  Protocols must supply an implementation of E<.Fn soreceive>; the "
"functions E<.Fn soreceive_stream>, E<.Fn soreceive_dgram>, and E<.Fn "
"soreceive_generic> are supplied for use by such implementations."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:542
msgid ""
"Protocol implementations can use E<.Fn sonewconn> to create a socket and "
"attach protocol state to that socket.  This can be used to create new "
"sockets available for E<.Fn soaccept> on a listen socket.  The returned "
"socket has a reference count of zero."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:547
msgid ""
"Protocols must supply an implementation for E<.Fn sopoll>; E<.Fn "
"sopoll_generic> is provided for the use by protocol implementations."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:554
msgid ""
"The functions E<.Fn sosend_dgram> and E<.Fn sosend_generic> are supplied to "
"assist in protocol implementations of E<.Fn sosend>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:561
msgid ""
"When a protocol creates a new socket structure, it is necessary to reserve "
"socket buffer space for that socket, by calling E<.Fn soreserve>.  The rough "
"inverse of this reservation is performed by E<.Fn sorflush>, which is called "
"automatically by the socket framework."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:577
msgid ""
"When a protocol needs to wake up threads waiting for the socket to become "
"ready to read or write, variants of E<.Fn sowakeup> are used.  The E<.Fn "
"sowakeup> function should not be called directly by protocol code, instead "
"use the wrappers E<.Fn sorwakeup>, E<.Fn sorwakeup_locked>, E<.Fn "
"sowwakeup>, and E<.Fn sowwakeup_locked> for readers and writers, with the "
"corresponding socket buffer lock not already locked, or already held, "
"respectively."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:585
msgid ""
"The functions E<.Fn sooptcopyin> and E<.Fn sooptcopyout> are useful for "
"transferring E<.Vt struct sockopt> data between user and kernel code."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/socket.9:585
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:599
msgid ""
"E<.Xr bind 2>, E<.Xr close 2>, E<.Xr connect 2>, E<.Xr getsockopt 2>, E<.Xr "
"recv 2>, E<.Xr send 2>, E<.Xr setsockopt 2>, E<.Xr shutdown 2>, E<.Xr socket "
"2>, E<.Xr ng_ksocket 4>, E<.Xr ithread 9>, E<.Xr msleep 9>, E<.Xr ucred 9>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/socket.9:599
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:606
msgid ""
"The E<.Xr socket 2> system call appeared in E<.Bx 4.2>.  This manual page "
"was introduced in E<.Fx 7.0>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/socket.9:606
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:611
msgid ""
"This manual page was written by E<.An Robert Watson> and E<.An Benjamin "
"Kaduk>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/socket.9:611
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:622
msgid ""
"The use of explicitly passed credentials, credentials hung from explicitly "
"passed threads, the credential on E<.Dv curthread>, and the cached "
"credential from socket creation time is inconsistent, and may lead to "
"unexpected behaviour.  It is possible that several of the E<.Fa td> "
"arguments should be E<.Fa cred> arguments, or simply not be present at all."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:628
msgid ""
"The caller may need to manually clear E<.Dv SS_ISCONNECTING> if E<.Fn "
"soconnect> returns an error."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:636
msgid ""
"The E<.Dv MSG_DONTWAIT> flag is not implemented for E<.Fn sosend>, and may "
"not always work with E<.Fn soreceive> when zero copy sockets are enabled."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:639
msgid ""
"This manual page does not describe how to register socket upcalls or monitor "
"a socket for readability/writability without using blocking I/O."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/socket.9:648
msgid ""
"The E<.Fn soref> and E<.Fn sorele> functions are not described, and in most "
"cases should not be used, due to confusing and potentially incorrect "
"interactions when E<.Fn sorele> is last called after E<.Fn soclose>."
msgstr ""
