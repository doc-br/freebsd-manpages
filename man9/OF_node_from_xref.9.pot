# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/OF_node_from_xref.9:28
#, no-wrap
msgid "April 9, 2018"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/OF_node_from_xref.9:29
#, no-wrap
msgid "OF_NODE_FROM_XREF 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/OF_node_from_xref.9:31
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/OF_node_from_xref.9:34
msgid "E<.Nm OF_node_from_xref>, E<.Nm OF_xref_from_node>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/OF_node_from_xref.9:34
#, no-wrap
msgid "convert between kernel phandle and effective phandle"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/OF_node_from_xref.9:35
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/OF_node_from_xref.9:36
#, no-wrap
msgid "dev/ofw/ofw_bus.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/OF_node_from_xref.9:37
#, no-wrap
msgid "dev/ofw/ofw_bus_subr.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/OF_node_from_xref.9:42
msgid ""
"E<.Ft phandle_t> E<.Fn OF_node_from_xref \"phandle_t xref\"> E<.Ft "
"phandle_t> E<.Fn OF_xref_from_node \"phandle_t node\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/OF_node_from_xref.9:42
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/OF_node_from_xref.9:68
msgid ""
"Some OpenFirmware implementations (FDT, IBM) have a concept of effective "
"phandle or xrefs.  They are used to cross-reference device tree nodes.  For "
"instance, a framebuffer controller may refer to a GPIO controller and pin "
"that controls the backlight.  In this example, the GPIO node would have a "
"cell (32-bit integer)  property with a reserved name like \"phandle\" or "
"\"linux,phandle\" whose value uniquely identifies the node.  The actual name "
"depends on the implementation.  The framebuffer node would have a property "
"with the name described by device bindings (device-specific set of "
"properties).  It can be a cell property or a combined property with one part "
"of it being a cell.  The value of the framebuffer node's property would be "
"the same as the value of the GPIO \"phandle\" property so it can be said "
"that the framebuffer node refers to the GPIO node.  The kernel uses internal "
"logic to assign unique identifiers to the device tree nodes, and these "
"values do not match the values of \"phandle\" properties.  E<.Fn "
"OF_node_from_xref> and E<.Fn OF_xref_from_node> are used to perform "
"conversion between these two kinds of node identifiers."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/OF_node_from_xref.9:75
msgid ""
"E<.Fn OF_node_from_xref> returns the kernel phandle for the effective "
"phandle E<.Fa xref>.  If one cannot be found or the OpenFirmware "
"implementation does not support effective phandles, the function returns the "
"input value."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/OF_node_from_xref.9:82
msgid ""
"E<.Fn OF_xref_from_xref> returns the effective phandle for the kernel "
"phandle E<.Fa xref>.  If one cannot be found or the OpenFirmware "
"implementation does not support effective phandles, the function returns the "
"input value."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/OF_node_from_xref.9:82
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/OF_node_from_xref.9:86
#, no-wrap
msgid ""
"    phandle_t panelnode, panelxref;\n"
"    char *model;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/OF_node_from_xref.9:89
#, no-wrap
msgid ""
"    if (OF_getencprop(node, \"lcd-panel\", &panelxref) E<lt>= 0)\n"
"        return;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/OF_node_from_xref.9:93
#, no-wrap
msgid ""
"    panelnode = OF_node_from_xref(panelxref);\n"
"    if (OF_getprop_alloc(hdminode, \"model\", (void **)&model) E<lt>= 0)\n"
"        return;\n"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/OF_node_from_xref.9:94
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/OF_node_from_xref.9:97
msgid "E<.Xr OF_device_from_xref 9> E<.Xr OF_device_register_xref 9>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/OF_node_from_xref.9:97
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/OF_node_from_xref.9:100
msgid ""
"E<.An -nosplit> This manual page was written by E<.An Oleksandr Tymoshenko "
"Aq Mt gonzo@FreeBSD.org>."
msgstr ""
