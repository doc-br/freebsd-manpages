# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:29-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/dnv.9:28
#, no-wrap
msgid "July 26, 2016"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/dnv.9:29
#, no-wrap
msgid "DNV 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/dnv.9:31
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/dnv.9:34
msgid "E<.Nm dnvlist_get>, E<.Nm dnvlist_take>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/dnv.9:34
#, no-wrap
msgid "API for getting name/value pairs. Nonexistent pairs do not raise an error."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/dnv.9:35
#, no-wrap
msgid "LIBRARY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/dnv.9:37
msgid "E<.Lb libnv>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/dnv.9:37
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/dnv.9:38
#, no-wrap
msgid "sys/dnv.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/dnv.9:63
msgid ""
"E<.Ft bool> E<.Fn dnvlist_get_bool \"const nvlist_t *nvl\" \"const char "
"*name\" \"bool defval\"> E<.Ft uint64_t> E<.Fn dnvlist_get_number \"const "
"nvlist_t *nvl\" \"const char *name\" \"uint64_t defval\"> E<.Ft char *> "
"E<.Fn dnvlist_get_string \"const nvlist_t *nvl\" \"const char *name\" "
"\"const char *defval\"> E<.Ft nvlist_t *> E<.Fn dnvlist_get_nvlist \"const "
"nvlist_t *nvl\" \"const char *name\" \"nvlist_t *defval\"> E<.Ft int> E<.Fn "
"dnvlist_get_descriptor \"const nvlist_t *nvl\" \"const char *name\" \"int "
"defval\"> E<.Ft void *> E<.Fn dnvlist_get_binary \"const nvlist_t *nvl\" "
"\"const char *name\" \"size_t *sizep\" \"void *defval\" \"size_t defsize\"> "
"E<.Ft bool> E<.Fn dnvlist_take_bool \"const nvlist_t *nvl\" \"const char "
"*name\" \"bool defval\"> E<.Ft uint64_t> E<.Fn dnvlist_take_number \"const "
"nvlist_t *nvl\" \"const char *name\" \"uint64_t defval\"> E<.Ft char *> "
"E<.Fn dnvlist_take_string \"const nvlist_t *nvl\" \"const char *name\" "
"\"const char *defval\"> E<.Ft nvlist_t *> E<.Fn dnvlist_take_nvlist \"const "
"nvlist_t *nvl\" \"const char *name\" \"nvlist_t *defval\"> E<.Ft int> E<.Fn "
"dnvlist_take_descriptor \"const nvlist_t *nvl\" \"const char *name\" \"int "
"defval\"> E<.Ft void *> E<.Fn dnvlist_take_binary \"const nvlist_t *nvl\" "
"\"const char *name\" \"size_t *sizep\" \"void *defval\" \"size_t defsize\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/dnv.9:63
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/dnv.9:70
msgid ""
"The E<.Nm libnv> library permits easy management of name/value pairs and can "
"send and receive them over sockets.  For more information, also see E<.Xr nv "
"9>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/dnv.9:82
msgid ""
"The E<.Nm dnvlist_get> family of functions returns the value associated with "
"the specified name.  If an element of the specified name does not exist, the "
"function returns the value provided in E<.Fa defval>.  Returned strings, "
"nvlists, descriptors, binaries, or arrays must not be modified by the user.  "
"They still belong to the nvlist.  If the nvlist is in an error state, "
"attempts to use any of these functions will cause the program to abort."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/dnv.9:99
msgid ""
"The E<.Nm dnvlist_take> family of functions returns the value associated "
"with the specified name and removes the element from the nvlist.  If an "
"element of the supplied name does not exist, the value provided in E<.Nm "
"defval> is returned.  When the value is a string, binary, or array value, "
"the caller is responsible for freeing returned memory with E<.Fn free 3>.  "
"When the value is an nvlist, the caller is responsible for destroying the "
"returned nvlist with E<.Fn nvlist_destroy>.  When the value is a descriptor, "
"the caller is responsible for closing the returned descriptor with E<.Fn "
"close 2>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/dnv.9:99
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/dnv.9:103
msgid "E<.Xr close 2>, E<.Xr free 3>, E<.Xr nv 9>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/dnv.9:103
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/dnv.9:108
msgid "The E<.Nm dnv> API appeared in E<.Fx 11.0>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/dnv.9:108
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/dnv.9:116
msgid ""
"E<.An -nosplit> The E<.Nm dnv> API was implemented by E<.An Pawel Jakub "
"Dawidek Aq Mt pawel@dawidek.net> under sponsorship from the FreeBSD "
"Foundation.  This manual page was written by E<.An Adam Starak Aq Mt "
"starak.adam@gmail.com>"
msgstr ""
