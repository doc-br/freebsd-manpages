# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man9/ktr.9:26
#, no-wrap
msgid "November 30, 2008"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man9/ktr.9:27
#, no-wrap
msgid "KTR 9"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ktr.9:29
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:31
msgid "E<.Nm CTR0 , CTR1 , CTR2 , CTR3 , CTR4 , CTR5>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man9/ktr.9:31
#, no-wrap
msgid "kernel tracing facility"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ktr.9:32
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ktr.9:33
#, no-wrap
msgid "sys/param.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ktr.9:34
#, no-wrap
msgid "sys/ktr.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:55
msgid ""
"E<.Vt \"extern int ktr_cpumask\">; E<.Vt \"extern int ktr_entries\">; E<.Vt "
"\"extern int ktr_extend\">; E<.Vt \"extern int ktr_mask\">; E<.Vt \"extern "
"int ktr_verbose\">; E<.Vt \"extern struct ktr_entry ktr_buf[]\">; E<.Ft "
"void> E<.Fn CTR0 \"u_int mask\" \"char *format\"> E<.Ft void> E<.Fn CTR1 "
"\"u_int mask\" \"char *format\" \"arg1\"> E<.Ft void> E<.Fn CTR2 \"u_int "
"mask\" \"char *format\" \"arg1\" \"arg2\"> E<.Ft void> E<.Fn CTR3 \"u_int "
"mask\" \"char *format\" \"arg1\" \"arg2\" \"arg3\"> E<.Ft void> E<.Fn CTR4 "
"\"u_int mask\" \"char *format\" \"arg1\" \"arg2\" \"arg3\" \"arg4\"> E<.Ft "
"void> E<.Fn CTR5 \"u_int mask\" \"char *format\" \"arg1\" \"arg2\" \"arg3\" "
"\"arg4\" \"arg5\"> E<.Ft void> E<.Fn CTR6 \"u_int mask\" \"char *format\" "
"\"arg1\" \"arg2\" \"arg3\" \"arg4\" \"arg5\" \"arg6\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ktr.9:55
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:65
msgid ""
"KTR provides a circular buffer of events that can be logged in a E<.Xr "
"printf 9> style fashion.  These events can then be dumped with E<.Xr ddb 4>, "
"E<.Xr gdb 1> or E<.Xr ktrdump 8>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:72
msgid ""
"Events are created and logged in the kernel via the E<.Dv CTR Ns Ar x> "
"macros.  The first parameter is a mask of event types E<.Pq Dv KTR_*> "
"defined in"
msgstr ""

#. type: In
#: /usr/src/share/man/man9/ktr.9:72
#, no-wrap
msgid "sys/ktr.h ."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:88
msgid ""
"The event will be logged only if any of the event types specified in E<.Fa "
"mask> are enabled in the global event mask stored in E<.Va ktr_mask>.  The "
"E<.Fa format> argument is a E<.Xr printf 9> style format string used to "
"build the text of the event log message.  Following the E<.Fa format> string "
"are zero to five arguments referenced by E<.Fa format>.  Each event is "
"logged with a file name and source line number of the originating CTR call, "
"and a timestamp in addition to the log message."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:93
msgid ""
"The event is stored in the circular buffer with supplied arguments as is, "
"and formatting is done at the dump time.  Do not use pointers to the objects "
"with limited lifetime, for instance, strings, because the pointer may become "
"invalid when buffer is printed."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:96
msgid ""
"Note that the different macros differ only in the number of arguments each "
"one takes, as indicated by its name."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:104
msgid ""
"The E<.Va ktr_entries> variable contains the number of entries in the E<.Va "
"ktr_buf> array.  These variables are mostly useful for post-mortem crash "
"dump tools to locate the base of the circular trace buffer and its length."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:108
msgid "The E<.Va ktr_mask> variable contains the run time mask of events to log."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:112
msgid "The CPU event mask is stored in the E<.Va ktr_cpumask> variable."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:117
msgid ""
"The E<.Va ktr_verbose> variable stores the verbose flag that controls "
"whether events are logged to the console in addition to the event buffer."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ktr.9:117
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:121
msgid ""
"This example demonstrates the use of tracepoints at the E<.Dv KTR_PROC> "
"logging level."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:137
#, no-wrap
msgid ""
"void\n"
"mi_switch()\n"
"{\n"
"\t...\n"
"\t/*\n"
"\t * Pick a new current process and record its start time.\n"
"\t */\n"
"\t...\n"
"\tCTR3(KTR_PROC, \"mi_switch: old proc %p (pid %d)\", p, p-E<gt>p_pid);\n"
"\t...\n"
"\tcpu_switch();\n"
"\t...\n"
"\tCTR3(KTR_PROC, \"mi_switch: new proc %p (pid %d)\", p, p-E<gt>p_pid);\n"
"\t...\n"
"}\n"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ktr.9:138
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:141
msgid "E<.Xr ktr 4>, E<.Xr ktrdump 8>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ktr.9:141
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:146
msgid ""
"The KTR kernel tracing facility first appeared in E<.Bsx 3.0> and was "
"imported into E<.Fx 5.0>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man9/ktr.9:146
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:152
msgid ""
"Currently there is one global buffer shared among all CPUs.  It might be "
"profitable at some point in time to use per-CPU buffers instead so that if "
"one CPU halts or starts spinning, then the log messages it emitted just "
"prior to halting or spinning will not be drowned out by events from the "
"other CPUs."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man9/ktr.9:161
msgid ""
"The arguments given in E<.Fn CTRx> macros are stored as E<.Vt u_long>, so do "
"not pass arguments larger than size of an E<.Vt u_long> type.  For example "
"passing 64bit arguments on 32bit architectures will give incorrect results."
msgstr ""
