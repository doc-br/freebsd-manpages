# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:32-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/contrib/libarchive/libarchive/tar.5:28
#, no-wrap
msgid "December 27, 2016"
msgstr ""

#. type: Dt
#: /usr/src/contrib/libarchive/libarchive/tar.5:29
#, no-wrap
msgid "TAR 5"
msgstr ""

#. type: Sh
#: /usr/src/contrib/libarchive/libarchive/tar.5:31
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:33
msgid "E<.Nm tar>"
msgstr ""

#. type: Nd
#: /usr/src/contrib/libarchive/libarchive/tar.5:33
#, no-wrap
msgid "format of tape archive files"
msgstr ""

#. type: Sh
#: /usr/src/contrib/libarchive/libarchive/tar.5:34
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:43
msgid ""
"The E<.Nm> archive format collects any number of files, directories, and "
"other file system objects (symbolic links, device nodes, etc.) into a single "
"stream of bytes.  The format was originally designed to be used with tape "
"drives that operate with fixed-size blocks, but is widely used as a general "
"packaging mechanism."
msgstr ""

#. type: Ss
#: /usr/src/contrib/libarchive/libarchive/tar.5:43
#, no-wrap
msgid "General Format"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:52
msgid ""
"A E<.Nm> archive consists of a series of 512-byte records.  Each file system "
"object requires a header record which stores basic metadata (pathname, "
"owner, permissions, etc.) and zero or more records containing any file "
"data.  The end of the archive is indicated by two records consisting "
"entirely of zero bytes."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:71
msgid ""
"For compatibility with tape drives that use fixed block sizes, programs that "
"read or write tar files always read or write a fixed number of records with "
"each I/O operation.  These E<.Dq blocks> are always a multiple of the record "
"size.  The maximum block size supported by early implementations was 10240 "
"bytes or 20 records.  This is still the default for most implementations "
"although block sizes of 1MiB (2048 records) or larger are commonly used with "
"modern high-speed tape drives.  (Note: the terms E<.Dq block> and E<.Dq "
"record> here are not entirely standard; this document follows the convention "
"established by John Gilmore in documenting E<.Nm pdtar>.)"
msgstr ""

#. type: Ss
#: /usr/src/contrib/libarchive/libarchive/tar.5:71
#, no-wrap
msgid "Old-Style Archive Format"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:79
msgid ""
"The original tar archive format has been extended many times to include "
"additional information that various implementors found necessary.  This "
"section describes the variant implemented by the tar command included in "
"E<.At v7>, which seems to be the earliest widely-used version of the tar "
"program."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:83
msgid "The header record for an old-style E<.Nm> archive consists of the following:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:96
#, no-wrap
msgid ""
"struct header_old_tar {\n"
"\tchar name[100];\n"
"\tchar mode[8];\n"
"\tchar uid[8];\n"
"\tchar gid[8];\n"
"\tchar size[12];\n"
"\tchar mtime[12];\n"
"\tchar checksum[8];\n"
"\tchar linkflag[1];\n"
"\tchar linkname[100];\n"
"\tchar pad[255];\n"
"};\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:98
msgid "All unused bytes in the header record are filled with nulls."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:99
#, no-wrap
msgid "Va name"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:106
msgid ""
"Pathname, stored as a null-terminated string.  Early tar implementations "
"only stored regular files (including hardlinks to those files).  One common "
"early convention used a trailing \"/\" character to indicate a directory "
"name, allowing directory permissions and owner information to be archived "
"and restored."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:106
#, no-wrap
msgid "Va mode"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:108
msgid "File mode, stored as an octal number in ASCII."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:108
#, no-wrap
msgid "Va uid , Va gid"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:110
msgid "User id and group id of owner, as octal numbers in ASCII."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:110
#, no-wrap
msgid "Va size"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:117
msgid ""
"Size of file, as octal number in ASCII.  For regular files only, this "
"indicates the amount of data that follows the header.  In particular, this "
"field was ignored by early tar implementations when extracting hardlinks.  "
"Modern writers should always store a zero length for hardlink entries."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:117
#, no-wrap
msgid "Va mtime"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:123
msgid ""
"Modification time of file, as an octal number in ASCII.  This indicates the "
"number of seconds since the start of the epoch, 00:00:00 UTC January 1, "
"1970.  Note that negative values should be avoided here, as they are handled "
"inconsistently."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:123
#, no-wrap
msgid "Va checksum"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:134
msgid ""
"Header checksum, stored as an octal number in ASCII.  To compute the "
"checksum, set the checksum field to all spaces, then sum all bytes in the "
"header using unsigned arithmetic.  This field should be stored as six octal "
"digits followed by a null and a space character.  Note that many early "
"implementations of tar used signed arithmetic for the checksum field, which "
"can cause interoperability problems when transferring archives between "
"systems.  Modern robust readers compute the checksum both ways and accept "
"the header if either computation matches."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:134
#, no-wrap
msgid "Va linkflag , Va linkname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:148
msgid ""
"In order to preserve hardlinks and conserve tape, a file with multiple links "
"is only written to the archive the first time it is encountered.  The next "
"time it is encountered, the E<.Va linkflag> is set to an ASCII E<.Sq 1> and "
"the E<.Va linkname> field holds the first name under which this file "
"appears.  (Note that regular files have a null value in the E<.Va linkflag> "
"field.)"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:164
msgid ""
"Early tar implementations varied in how they terminated these fields.  The "
"tar command in E<.At v7> used the following conventions (this is also "
"documented in early BSD manpages): the pathname must be null-terminated; the "
"mode, uid, and gid fields must end in a space and a null byte; the size and "
"mtime fields must end in a space; the checksum is terminated by a null and a "
"space.  Early implementations filled the numeric fields with leading "
"spaces.  This seems to have been common practice until the E<.St "
"-p1003.1-88> standard was released.  For best portability, modern "
"implementations should fill the numeric fields with leading zeros."
msgstr ""

#. type: Ss
#: /usr/src/contrib/libarchive/libarchive/tar.5:164
#, no-wrap
msgid "Pre-POSIX Archives"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:173
msgid ""
"An early draft of E<.St -p1003.1-88> served as the basis for John Gilmore's "
"E<.Nm pdtar> program and many system implementations from the late 1980s and "
"early 1990s.  These archives generally follow the POSIX ustar format "
"described below with the following variations:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:179
msgid ""
"The magic value consists of the five characters E<.Dq ustar> followed by a "
"space.  The version field contains a space character followed by a null."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:182
msgid ""
"The numeric fields are generally filled with leading spaces (not leading "
"zeros as recommended in the final standard)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:185
msgid ""
"The prefix field is often not used, limiting pathnames to the 100 characters "
"of old-style archives."
msgstr ""

#. type: Ss
#: /usr/src/contrib/libarchive/libarchive/tar.5:186
#, no-wrap
msgid "POSIX ustar Archives"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:198
msgid ""
"E<.St -p1003.1-88> defined a standard tar file format to be read and written "
"by compliant implementations of E<.Xr tar 1>.  This format is often called "
"the E<.Dq ustar> format, after the magic value used in the header.  (The "
"name is an acronym for E<.Dq Unix Standard TAR>.)  It extends the historic "
"format with new fields:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:218
#, no-wrap
msgid ""
"struct header_posix_ustar {\n"
"\tchar name[100];\n"
"\tchar mode[8];\n"
"\tchar uid[8];\n"
"\tchar gid[8];\n"
"\tchar size[12];\n"
"\tchar mtime[12];\n"
"\tchar checksum[8];\n"
"\tchar typeflag[1];\n"
"\tchar linkname[100];\n"
"\tchar magic[6];\n"
"\tchar version[2];\n"
"\tchar uname[32];\n"
"\tchar gname[32];\n"
"\tchar devmajor[8];\n"
"\tchar devminor[8];\n"
"\tchar prefix[155];\n"
"\tchar pad[12];\n"
"};\n"
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:220 /usr/src/contrib/libarchive/libarchive/tar.5:583
#, no-wrap
msgid "Va typeflag"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:225
msgid ""
"Type of entry.  POSIX extended the earlier E<.Va linkflag> field with "
"several new type values:"
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:226
#, no-wrap
msgid "Dq 0"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:229
msgid ""
"Regular file.  NUL should be treated as a synonym, for compatibility "
"purposes."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:229
#, no-wrap
msgid "Dq 1"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:231
msgid "Hard link."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:231
#, no-wrap
msgid "Dq 2"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:233
msgid "Symbolic link."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:233
#, no-wrap
msgid "Dq 3"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:235
msgid "Character device node."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:235
#, no-wrap
msgid "Dq 4"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:237
msgid "Block device node."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:237
#, no-wrap
msgid "Dq 5"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:239
msgid "Directory."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:239
#, no-wrap
msgid "Dq 6"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:241
msgid "FIFO node."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:241
#, no-wrap
msgid "Dq 7"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:243
msgid "Reserved."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:243
#, no-wrap
msgid "Other"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:251
msgid ""
"A POSIX-compliant implementation must treat any unrecognized typeflag value "
"as a regular file.  In particular, writers should ensure that all entries "
"have a valid filename so that they can be restored by readers that do not "
"support the corresponding extension.  Uppercase letters \"A\" through \"Z\" "
"are reserved for custom extensions.  Note that sockets and whiteout entries "
"are not archivable."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:262
msgid ""
"It is worth noting that the E<.Va size> field, in particular, has different "
"meanings depending on the type.  For regular files, of course, it indicates "
"the amount of data following the header.  For directories, it may be used to "
"indicate the total size of all files in the directory, for use by operating "
"systems that pre-allocate directory space.  For all other types, it should "
"be set to zero by writers and ignored by readers."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:262 /usr/src/contrib/libarchive/libarchive/tar.5:671
#, no-wrap
msgid "Va magic"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:267
msgid ""
"Contains the magic value E<.Dq ustar> followed by a NUL byte to indicate "
"that this is a POSIX standard archive.  Full compliance requires the uname "
"and gname fields be properly set."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:267 /usr/src/contrib/libarchive/libarchive/tar.5:676
#, no-wrap
msgid "Va version"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:272
msgid ""
"Version.  This should be E<.Dq 00> (two copies of the ASCII digit zero) for "
"POSIX standard archives."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:272
#, no-wrap
msgid "Va uname , Va gname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:277
msgid ""
"User and group names, as null-terminated ASCII strings.  These should be "
"used in preference to the uid/gid values when they are set and the "
"corresponding names exist on the system."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:277
#, no-wrap
msgid "Va devmajor , Va devminor"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:279
msgid "Major and minor numbers for character device or block device entry."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:279
#, no-wrap
msgid "Va name , Va prefix"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:292
msgid ""
"If the pathname is too long to fit in the 100 bytes provided by the standard "
"format, it can be split at any E<.Pa /> character with the first portion "
"going into the prefix field.  If the prefix field is not empty, the reader "
"will prepend the prefix value and a E<.Pa /> character to the regular name "
"field to obtain the full pathname.  The standard does not require a trailing "
"E<.Pa /> character on directory names, though most implementations still "
"include this for compatibility reasons."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:296
msgid "Note that all unused bytes must be set to E<.Dv NUL>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:322
msgid ""
"Field termination is specified slightly differently by POSIX than by "
"previous implementations.  The E<.Va magic>, E<.Va uname>, and E<.Va gname> "
"fields must have a trailing E<.Dv NUL>.  The E<.Va pathname>, E<.Va "
"linkname>, and E<.Va prefix> fields must have a trailing E<.Dv NUL> unless "
"they fill the entire field.  (In particular, it is possible to store a "
"256-character pathname if it happens to have a E<.Pa /> as the 156th "
"character.)  POSIX requires numeric fields to be zero-padded in the front, "
"and requires them to be terminated with either space or E<.Dv NUL> "
"characters."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:326
msgid ""
"Currently, most tar implementations comply with the ustar format, "
"occasionally extending it by adding new fields to the blank area at the end "
"of the header record."
msgstr ""

#. type: Ss
#: /usr/src/contrib/libarchive/libarchive/tar.5:326
#, no-wrap
msgid "Numeric Extensions"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:330
msgid ""
"There have been several attempts to extend the range of sizes or times "
"supported by modifying how numbers are stored in the header."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:338
msgid ""
"One obvious extension to increase the size of files is to eliminate the "
"terminating characters from the various numeric fields.  For example, the "
"standard only allows the size field to contain 11 octal digits, reserving "
"the twelfth byte for a trailing NUL character.  Allowing 12 octal digits "
"allows file sizes up to 64 GB."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:355
msgid ""
"Another extension, utilized by GNU tar, star, and other newer E<.Nm> "
"implementations, permits binary numbers in the standard numeric fields.  "
"This is flagged by setting the high bit of the first byte.  The remainder of "
"the field is treated as a signed twos-complement value.  This permits 95-bit "
"values for the length and time fields and 63-bit values for the uid, gid, "
"and device numbers.  In particular, this provides a consistent way to handle "
"negative time values.  GNU tar supports this extension for the length, "
"mtime, ctime, and atime fields.  Joerg Schilling's star program and the "
"libarchive library support this extension for all numeric fields.  Note that "
"this extension is largely obsoleted by the extended attribute record "
"provided by the pax interchange format."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:359
msgid ""
"Another early GNU extension allowed base-64 values rather than octal.  This "
"extension was short-lived and is no longer supported by any implementation."
msgstr ""

#. type: Ss
#: /usr/src/contrib/libarchive/libarchive/tar.5:359
#, no-wrap
msgid "Pax Interchange Format"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:377
msgid ""
"There are many attributes that cannot be portably stored in a POSIX ustar "
"archive.  E<.St -p1003.1-2001> defined a E<.Dq pax interchange format> that "
"uses two new types of entries to hold text-formatted metadata that applies "
"to following entries.  Note that a pax interchange format archive is a ustar "
"archive in every respect.  The new data is stored in ustar-compatible "
"archive entries that use the E<.Dq x> or E<.Dq g> typeflag.  In particular, "
"older implementations that do not fully support these extensions will "
"extract the metadata into regular files, where the metadata can be examined "
"as necessary."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:391
msgid ""
"An entry in a pax interchange format archive consists of one or two standard "
"ustar entries, each with its own header and data.  The first optional entry "
"stores the extended attributes for the following entry.  This optional first "
"entry has an \"x\" typeflag and a size field that indicates the total size "
"of the extended attributes.  The extended attributes themselves are stored "
"as a series of text-format lines encoded in the portable UTF-8 encoding.  "
"Each line consists of a decimal number, a space, a key string, an equals "
"sign, a value string, and a new line.  The decimal number indicates the "
"length of the entire line, including the initial length field and the "
"trailing newline.  An example of such a field is:"
msgstr ""

#. type: Dl
#: /usr/src/contrib/libarchive/libarchive/tar.5:391
#, no-wrap
msgid "25 ctime=1084839148.1212\\en"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:398
msgid ""
"Keys in all lowercase are standard keys.  Vendors can add their own keys by "
"prefixing them with an all uppercase vendor name and a period.  Note that, "
"unlike the historic header, numeric values are stored using decimal, not "
"octal.  A description of some common keys follows:"
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:399
#, no-wrap
msgid "Cm atime , Cm ctime , Cm mtime"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:402
msgid ""
"File access, inode change, and modification times.  These fields can be "
"negative or include a decimal point and a fractional value."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:402
#, no-wrap
msgid "Cm hdrcharset"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:423
msgid ""
"The character set used by the pax extension values.  By default, all textual "
"values in the pax extended attributes are assumed to be in UTF-8, including "
"pathnames, user names, and group names.  In some cases, it is not possible "
"to translate local conventions into UTF-8.  If this key is present and the "
"value is the six-character ASCII string E<.Dq BINARY>, then all textual "
"values are assumed to be in a platform-dependent multi-byte encoding.  Note "
"that there are only two valid values for this key: E<.Dq BINARY> or E<.Dq "
"ISO-IR\\ 10646\\ 2000\\ UTF-8>.  No other values are permitted by the "
"standard, and the latter value should generally not be used as it is the "
"default when this key is not specified.  In particular, this flag should not "
"be used as a general mechanism to allow filenames to be stored in arbitrary "
"encodings."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:423
#, no-wrap
msgid "Cm uname , Cm uid , Cm gname , Cm gid"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:428
msgid ""
"User name, group name, and numeric UID and GID values.  The user name and "
"group name stored here are encoded in UTF8 and can thus include non-ASCII "
"characters.  The UID and GID fields can be of arbitrary length."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:428
#, no-wrap
msgid "Cm linkpath"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:431
msgid ""
"The full path of the linked-to file.  Note that this is encoded in UTF8 and "
"can thus include non-ASCII characters."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:431
#, no-wrap
msgid "Cm path"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:434
msgid ""
"The full pathname of the entry.  Note that this is encoded in UTF8 and can "
"thus include non-ASCII characters."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:434
#, no-wrap
msgid "Cm realtime.* , Cm security.*"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:436
msgid "These keys are reserved and may be used for future standardization."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:436
#, no-wrap
msgid "Cm size"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:440
msgid ""
"The size of the file.  Note that there is no length limit on this field, "
"allowing conforming archives to store files much larger than the historic "
"8GB limit."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:440
#, no-wrap
msgid "Cm SCHILY.*"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:444
msgid ""
"Vendor-specific attributes used by Joerg Schilling's E<.Nm star> "
"implementation."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:444
#, no-wrap
msgid "Cm SCHILY.acl.access , Cm SCHILY.acl.default, Cm SCHILY.acl.ace"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:452
msgid ""
"Stores the access, default and NFSv4 ACLs as textual strings in a format "
"that is an extension of the format specified by POSIX.1e draft 17.  In "
"particular, each user or group access specification can include an "
"additional colon-separated field with the numeric UID or GID.  This allows "
"ACLs to be restored on systems that may not have complete user or group "
"information available (such as when NIS/YP or LDAP services are temporarily "
"unavailable)."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:452
#, no-wrap
msgid "Cm SCHILY.devminor , Cm SCHILY.devmajor"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:454
msgid "The full minor and major numbers for device nodes."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:454
#, no-wrap
msgid "Cm SCHILY.fflags"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:456
msgid "The file flags."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:456
#, no-wrap
msgid "Cm SCHILY.realsize"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:459
msgid "The full size of the file on disk.  XXX explain? XXX"
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:459
#, no-wrap
msgid "Cm SCHILY.dev, Cm SCHILY.ino , Cm SCHILY.nlinks"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:466
msgid ""
"The device number, inode number, and link count for the entry.  In "
"particular, note that a pax interchange format archive using Joerg "
"Schilling's E<.Cm SCHILY.*> extensions can store all of the data from E<.Va "
"struct stat>."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:466
#, no-wrap
msgid "Cm LIBARCHIVE.*"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:470
msgid ""
"Vendor-specific attributes used by the E<.Nm libarchive> library and "
"programs that use it."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:470
#, no-wrap
msgid "Cm LIBARCHIVE.creationtime"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:476
msgid ""
"The time when the file was created.  (This should not be confused with the "
"POSIX E<.Dq ctime> attribute, which refers to the time when the file "
"metadata was last changed.)"
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:476
#, no-wrap
msgid "Cm LIBARCHIVE.xattr. Ns Ar namespace Ns . Ns Ar key"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:492
msgid ""
"Libarchive stores POSIX.1e-style extended attributes using keys of this "
"form.  The E<.Ar key> value is URL-encoded: All non-ASCII characters and the "
"two special characters E<.Dq => and E<.Dq %> are encoded as E<.Dq %> "
"followed by two uppercase hexadecimal digits.  The value of this key is the "
"extended attribute value encoded in base 64.  XXX Detail the base-64 format "
"here XXX"
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:492
#, no-wrap
msgid "Cm VENDOR.*"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:494
msgid "XXX document other vendor-specific extensions XXX"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:508
msgid ""
"Any values stored in an extended attribute override the corresponding values "
"in the regular tar header.  Note that compliant readers should ignore the "
"regular fields when they are overridden.  This is important, as existing "
"archivers are known to store non-compliant values in the standard header "
"fields in this situation.  There are no limits on length for any of these "
"fields.  In particular, numeric fields can be arbitrarily large.  All text "
"fields are encoded in UTF8.  Compliant writers should store only portable "
"7-bit ASCII characters in the standard ustar header and use extended "
"attributes whenever a text value contains non-ASCII characters."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:522
msgid ""
"In addition to the E<.Cm x> entry described above, the pax interchange "
"format also supports a E<.Cm g> entry.  The E<.Cm g> entry is identical in "
"format, but specifies attributes that serve as defaults for all subsequent "
"archive entries.  The E<.Cm g> entry is not widely used."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:535
msgid ""
"Besides the new E<.Cm x> and E<.Cm g> entries, the pax interchange format "
"has a few other minor variations from the earlier ustar format.  The most "
"troubling one is that hardlinks are permitted to have data following them.  "
"This allows readers to restore any hardlink to a file without having to "
"rewind the archive to find an earlier entry.  However, it creates "
"complications for robust readers, as it is no longer clear whether or not "
"they should ignore the size field for hardlink entries."
msgstr ""

#. type: Ss
#: /usr/src/contrib/libarchive/libarchive/tar.5:535
#, no-wrap
msgid "GNU Tar Archives"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:551
msgid ""
"The GNU tar program started with a pre-POSIX format similar to that "
"described earlier and has extended it using several different mechanisms: It "
"added new fields to the empty space in the header (some of which was later "
"used by POSIX for conflicting purposes); it allowed the header to be "
"continued over multiple records; and it defined new entries that modify "
"following entries (similar in principle to the E<.Cm x> entry described "
"above, but each GNU special entry is single-purpose, unlike the "
"general-purpose E<.Cm x> entry).  As a result, GNU tar archives are not "
"POSIX compatible, although more lenient POSIX-compliant readers can "
"successfully extract most GNU tar archives."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:581
#, no-wrap
msgid ""
"struct header_gnu_tar {\n"
"\tchar name[100];\n"
"\tchar mode[8];\n"
"\tchar uid[8];\n"
"\tchar gid[8];\n"
"\tchar size[12];\n"
"\tchar mtime[12];\n"
"\tchar checksum[8];\n"
"\tchar typeflag[1];\n"
"\tchar linkname[100];\n"
"\tchar magic[6];\n"
"\tchar version[2];\n"
"\tchar uname[32];\n"
"\tchar gname[32];\n"
"\tchar devmajor[8];\n"
"\tchar devminor[8];\n"
"\tchar atime[12];\n"
"\tchar ctime[12];\n"
"\tchar offset[12];\n"
"\tchar longnames[4];\n"
"\tchar unused[1];\n"
"\tstruct {\n"
"\t\tchar offset[12];\n"
"\t\tchar numbytes[12];\n"
"\t} sparse[4];\n"
"\tchar isextended[1];\n"
"\tchar realsize[12];\n"
"\tchar pad[17];\n"
"};\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:586
msgid ""
"GNU tar uses the following special entry types, in addition to those defined "
"by POSIX:"
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:587
#, no-wrap
msgid "7"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:591
msgid ""
"GNU tar treats type \"7\" records identically to type \"0\" records, except "
"on one obscure RTOS where they are used to indicate the pre-allocation of a "
"contiguous file on disk."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:591
#, no-wrap
msgid "D"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:605
msgid ""
"This indicates a directory entry.  Unlike the POSIX-standard \"5\" typeflag, "
"the header is followed by data records listing the names of files in this "
"directory.  Each name is preceded by an ASCII \"Y\" if the file is stored in "
"this archive or \"N\" if the file is not stored in this archive.  Each name "
"is terminated with a null, and an extra null marks the end of the name "
"list.  The purpose of this entry is to support incremental backups; a "
"program restoring from such an archive may wish to delete files on disk that "
"did not exist in the directory when the archive was made."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:610
msgid ""
"Note that the \"D\" typeflag specifically violates POSIX, which requires "
"that unrecognized typeflags be restored as normal files.  In this case, "
"restoring the \"D\" entry as a file could interfere with subsequent creation "
"of the like-named directory."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:610
#, no-wrap
msgid "K"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:612
msgid "The data for this entry is a long linkname for the following regular entry."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:612
#, no-wrap
msgid "L"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:614
msgid "The data for this entry is a long pathname for the following regular entry."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:614
#, no-wrap
msgid "M"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:639
msgid ""
"This is a continuation of the last file on the previous volume.  GNU "
"multi-volume archives guarantee that each volume begins with a valid entry "
"header.  To ensure this, a file may be split, with part stored at the end of "
"one volume, and part stored at the beginning of the next volume.  The \"M\" "
"typeflag indicates that this entry continues an existing file.  Such entries "
"can only occur as the first or second entry in an archive (the latter only "
"if the first entry is a volume label).  The E<.Va size> field specifies the "
"size of this entry.  The E<.Va offset> field at bytes 369-380 specifies the "
"offset where this file fragment begins.  The E<.Va realsize> field specifies "
"the total size of the file (which must equal E<.Va size> plus E<.Va "
"offset>).  When extracting, GNU tar checks that the header file name is the "
"one it is expecting, that the header offset is in the correct sequence, and "
"that the sum of offset and size is equal to realsize."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:639
#, no-wrap
msgid "N"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:653
msgid ""
"Type \"N\" records are no longer generated by GNU tar.  They contained a "
"list of files to be renamed or symlinked after extraction; this was "
"originally used to support long names.  The contents of this record are a "
"text description of the operations to be done, in the form E<.Dq Rename %s "
"to %s\\en> or E<.Dq Symlink %s to %s\\en>; in either case, both filenames "
"are escaped using K&R C syntax.  Due to security concerns, \"N\" records are "
"now generally ignored when reading archives."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:653
#, no-wrap
msgid "S"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:665
msgid ""
"This is a E<.Dq sparse> regular file.  Sparse files are stored as a series "
"of fragments.  The header contains a list of fragment offset/length pairs.  "
"If more than four such entries are required, the header is extended as "
"necessary with E<.Dq extra> header extensions (an older format that is no "
"longer used), or E<.Dq sparse> extensions."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:665
#, no-wrap
msgid "V"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:670
msgid ""
"The E<.Va name> field should be interpreted as a tape/volume header name.  "
"This entry should generally be ignored on extraction."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:676
msgid ""
"The magic field holds the five characters E<.Dq ustar> followed by a space.  "
"Note that POSIX ustar archives have a trailing null."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:680
msgid ""
"The version field holds a space character followed by a null.  Note that "
"POSIX ustar archives use two copies of the ASCII digit E<.Dq 0>."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:680
#, no-wrap
msgid "Va atime , Va ctime"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:684
msgid ""
"The time the file was last accessed and the time of last change of file "
"information, stored in octal as with E<.Va mtime>."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:684
#, no-wrap
msgid "Va longnames"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:686
msgid "This field is apparently no longer used."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:686
#, no-wrap
msgid "Sparse Va offset / Va numbytes"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:695
msgid ""
"Each such structure specifies a single fragment of a sparse file.  The two "
"fields store values as octal numbers.  The fragments are each padded to a "
"multiple of 512 bytes in the archive.  On extraction, the list of fragments "
"is collected from the header (including any extension headers), and the data "
"is then read and written to the file at appropriate offsets."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:695
#, no-wrap
msgid "Va isextended"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:701
msgid ""
"If this is set to non-zero, the header will be followed by additional E<.Dq "
"sparse header> records.  Each such record contains information about as many "
"as 21 additional sparse blocks as shown here:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:710
#, no-wrap
msgid ""
"struct gnu_sparse_header {\n"
"\tstruct {\n"
"\t\tchar offset[12];\n"
"\t\tchar numbytes[12];\n"
"\t} sparse[21];\n"
"\tchar    isextended[1];\n"
"\tchar    padding[7];\n"
"};\n"
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:711
#, no-wrap
msgid "Va realsize"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:721
msgid ""
"A binary representation of the file's complete size, with a much larger "
"range than the POSIX file size.  In particular, with E<.Cm M> type files, "
"the current entry is only a portion of the file.  In that case, the POSIX "
"size field will indicate the size of this entry; the E<.Va realsize> field "
"will indicate the total size of the file."
msgstr ""

#. type: Ss
#: /usr/src/contrib/libarchive/libarchive/tar.5:722
#, no-wrap
msgid "GNU tar pax archives"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:737
msgid ""
"GNU tar 1.14 (XXX check this XXX) and later will write pax interchange "
"format archives when you specify the E<.Fl -posix> flag.  This format "
"follows the pax interchange format closely, using some E<.Cm SCHILY> tags "
"and introducing new keywords to store sparse file information.  There have "
"been three iterations of the sparse file support, referred to as E<.Dq 0.0>, "
"E<.Dq 0.1>, and E<.Dq 1.0>."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:738
#, no-wrap
msgid ""
"Cm GNU.sparse.numblocks , Cm GNU.sparse.offset , Cm GNU.sparse.numbytes , Cm "
"GNU.sparse.size"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:756
msgid ""
"The E<.Dq 0.0> format used an initial E<.Cm GNU.sparse.numblocks> attribute "
"to indicate the number of blocks in the file, a pair of E<.Cm "
"GNU.sparse.offset> and E<.Cm GNU.sparse.numbytes> to indicate the offset and "
"size of each block, and a single E<.Cm GNU.sparse.size> to indicate the full "
"size of the file.  This is not the same as the size in the tar header "
"because the latter value does not include the size of any holes.  This "
"format required that the order of attributes be preserved and relied on "
"readers accepting multiple appearances of the same attribute names, which is "
"not officially permitted by the standards."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:756
#, no-wrap
msgid "Cm GNU.sparse.map"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:766
msgid ""
"The E<.Dq 0.1> format used a single attribute that stored a comma-separated "
"list of decimal numbers.  Each pair of numbers indicated the offset and "
"size, respectively, of a block of data.  This does not work well if the "
"archive is extracted by an archiver that does not recognize this extension, "
"since many pax implementations simply discard unrecognized attributes."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:766
#, no-wrap
msgid ""
"Cm GNU.sparse.major , Cm GNU.sparse.minor , Cm GNU.sparse.name , Cm "
"GNU.sparse.realsize"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:784
msgid ""
"The E<.Dq 1.0> format stores the sparse block map in one or more 512-byte "
"blocks prepended to the file data in the entry body.  The pax attributes "
"indicate the existence of this map (via the E<.Cm GNU.sparse.major> and "
"E<.Cm GNU.sparse.minor> fields)  and the full size of the file.  The E<.Cm "
"GNU.sparse.name> holds the true name of the file.  To avoid confusion, the "
"name stored in the regular tar header is a modified name so that extraction "
"errors will be apparent to users."
msgstr ""

#. type: Ss
#: /usr/src/contrib/libarchive/libarchive/tar.5:785
#, no-wrap
msgid "Solaris Tar"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:787
msgid "XXX More Details Needed XXX"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:792
msgid ""
"Solaris tar (beginning with SunOS XXX 5.7 ?? XXX) supports an E<.Dq "
"extended> format that is fundamentally similar to pax interchange format, "
"with the following differences:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:803
msgid ""
"Extended attributes are stored in an entry whose type is E<.Cm X>, not E<.Cm "
"x>, as used by pax interchange format.  The detailed format of this entry "
"appears to be the same as detailed above for the E<.Cm x> entry."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:813
msgid ""
"An additional E<.Cm A> header is used to store an ACL for the following "
"regular entry.  The body of this entry contains a seven-digit octal number "
"followed by a zero byte, followed by the textual ACL description.  The octal "
"value is the number of ACL entries plus a constant that indicates the ACL "
"type: 01000000 for POSIX.1e ACLs and 03000000 for NFSv4 ACLs."
msgstr ""

#. type: Ss
#: /usr/src/contrib/libarchive/libarchive/tar.5:814
#, no-wrap
msgid "AIX Tar"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:816
msgid "XXX More details needed XXX"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:828
msgid ""
"AIX Tar uses a ustar-formatted header with the type E<.Cm A> for storing "
"coded ACL information.  Unlike the Solaris format, AIX tar writes this "
"header after the regular file body to which it applies.  The pathname in "
"this header is either E<.Cm NFS4> or E<.Cm AIXC> to indicate the type of ACL "
"stored.  The actual ACL is stored in platform-specific binary format."
msgstr ""

#. type: Ss
#: /usr/src/contrib/libarchive/libarchive/tar.5:828
#, no-wrap
msgid "Mac OS X Tar"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:848
msgid ""
"The tar distributed with Apple's Mac OS X stores most regular files as two "
"separate files in the tar archive.  The two files have the same name except "
"that the first one has E<.Dq ._> prepended to the last path element.  This "
"special file stores an AppleDouble-encoded binary blob with additional "
"metadata about the second file, including ACL, extended attributes, and "
"resources.  To recreate the original file on disk, each separate file can be "
"extracted and the Mac OS X E<.Fn copyfile> function can be used to unpack "
"the separate metadata file and apply it to th regular file.  Conversely, the "
"same function provides a E<.Dq pack> option to encode the extended metadata "
"from a file into a separate file whose contents can then be put into a tar "
"archive."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:855
msgid ""
"Note that the Apple extended attributes interact badly with long filenames.  "
"Since each file is stored with the full name, a separate set of extensions "
"needs to be included in the archive for each one, doubling the overhead "
"required for files with long names."
msgstr ""

#. type: Ss
#: /usr/src/contrib/libarchive/libarchive/tar.5:855
#, no-wrap
msgid "Summary of tar type codes"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:859
msgid ""
"The following list is a condensed summary of the type codes used in tar "
"header records generated by different tar implementations.  More details "
"about specific implementations can be found above:"
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:860
#, no-wrap
msgid "NUL"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:862
msgid "Early tar programs stored a zero byte for regular files."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:862
#, no-wrap
msgid "Cm 0"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:864
msgid "POSIX standard type code for a regular file."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:864
#, no-wrap
msgid "Cm 1"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:866
msgid "POSIX standard type code for a hard link description."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:866
#, no-wrap
msgid "Cm 2"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:868
msgid "POSIX standard type code for a symbolic link description."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:868
#, no-wrap
msgid "Cm 3"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:870
msgid "POSIX standard type code for a character device node."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:870
#, no-wrap
msgid "Cm 4"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:872
msgid "POSIX standard type code for a block device node."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:872
#, no-wrap
msgid "Cm 5"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:874
msgid "POSIX standard type code for a directory."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:874
#, no-wrap
msgid "Cm 6"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:876
msgid "POSIX standard type code for a FIFO."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:876 /usr/src/contrib/libarchive/libarchive/tar.5:878
#, no-wrap
msgid "Cm 7"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:878
msgid "POSIX reserved."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:880
msgid "GNU tar used for pre-allocated files on some systems."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:880 /usr/src/contrib/libarchive/libarchive/tar.5:882
#, no-wrap
msgid "Cm A"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:882
msgid "Solaris tar ACL description stored prior to a regular file header."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:884
msgid "AIX tar ACL description stored after the file body."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:884
#, no-wrap
msgid "Cm D"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:886
msgid "GNU tar directory dump."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:886
#, no-wrap
msgid "Cm K"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:888
msgid "GNU tar long linkname for the following header."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:888
#, no-wrap
msgid "Cm L"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:890
msgid "GNU tar long pathname for the following header."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:890
#, no-wrap
msgid "Cm M"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:892
msgid ""
"GNU tar multivolume marker, indicating the file is a continuation of a file "
"from the previous volume."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:892
#, no-wrap
msgid "Cm N"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:894
msgid "GNU tar long filename support.  Deprecated."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:894
#, no-wrap
msgid "Cm S"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:896
msgid "GNU tar sparse regular file."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:896
#, no-wrap
msgid "Cm V"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:898
msgid "GNU tar tape/volume header name."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:898
#, no-wrap
msgid "Cm X"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:900
msgid "Solaris tar general-purpose extension header."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:900
#, no-wrap
msgid "Cm g"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:902
msgid "POSIX pax interchange format global extensions."
msgstr ""

#. type: It
#: /usr/src/contrib/libarchive/libarchive/tar.5:902
#, no-wrap
msgid "Cm x"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:904
msgid "POSIX pax interchange format per-file extensions."
msgstr ""

#. type: Sh
#: /usr/src/contrib/libarchive/libarchive/tar.5:905
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:909
msgid "E<.Xr ar 1>, E<.Xr pax 1>, E<.Xr tar 1>"
msgstr ""

#. type: Sh
#: /usr/src/contrib/libarchive/libarchive/tar.5:909
#, no-wrap
msgid "STANDARDS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:922
msgid ""
"The E<.Nm tar> utility is no longer a part of POSIX or the Single Unix "
"Standard.  It last appeared in E<.St -susv2>.  It has been supplanted in "
"subsequent standards by E<.Xr pax 1>.  The ustar format is currently part of "
"the specification for the E<.Xr pax 1> utility.  The pax interchange file "
"format is new with E<.St -p1003.1-2001>."
msgstr ""

#. type: Sh
#: /usr/src/contrib/libarchive/libarchive/tar.5:922
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:942
msgid ""
"A E<.Nm tar> command appeared in Seventh Edition Unix, which was released in "
"January, 1979.  It replaced the E<.Nm tp> program from Fourth Edition Unix "
"which in turn replaced the E<.Nm tap> program from First Edition Unix.  John "
"Gilmore's E<.Nm pdtar> public-domain implementation (circa 1987) was highly "
"influential and formed the basis of E<.Nm GNU tar> (circa 1988).  Joerg "
"Shilling's E<.Nm star> archiver is another open-source (CDDL) archiver "
"(originally developed circa 1985) which features complete support for pax "
"interchange format."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/libarchive/libarchive/tar.5:948
msgid ""
"This documentation was written as part of the E<.Nm libarchive> and E<.Nm "
"bsdtar> project by E<.An Tim Kientzle Aq kientzle@FreeBSD.org>."
msgstr ""
