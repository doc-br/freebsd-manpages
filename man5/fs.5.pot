# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:29-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man5/fs.5:31
#, no-wrap
msgid "January 16, 2017"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man5/fs.5:32
#, no-wrap
msgid "FS 5"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man5/fs.5:34
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:37
msgid "E<.Nm fs>, E<.Nm inode>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man5/fs.5:37
#, no-wrap
msgid "format of file system volume"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man5/fs.5:38
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:39
#, no-wrap
msgid "sys/param.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:40
#, no-wrap
msgid "ufs/ffs/fs.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:42
#, no-wrap
msgid "sys/types.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:43
#, no-wrap
msgid "sys/lock.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:44
#, no-wrap
msgid "sys/extattr.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:45
#, no-wrap
msgid "sys/acl.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:46
#, no-wrap
msgid "ufs/ufs/quota.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:47
#, no-wrap
msgid "ufs/ufs/dinode.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:48
#, no-wrap
msgid "ufs/ufs/extattr.h"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man5/fs.5:49
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:51
msgid "The files"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:51
#, no-wrap
msgid "fs.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:53
msgid "and"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:53
#, no-wrap
msgid "inode.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:57
msgid ""
"declare several structures, defined variables and macros which are used to "
"create and manage the underlying format of file system objects on random "
"access devices (disks)."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:67
msgid ""
"The block size and number of blocks which comprise a file system are "
"parameters of the file system.  Sectors beginning at E<.Dv BBLOCK> and "
"continuing for E<.Dv BBSIZE> are used for a disklabel and for some hardware "
"primary and secondary bootstrapping programs."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:76
msgid ""
"The actual file system begins at sector E<.Dv SBLOCK> with the E<.Em "
"super-block> that is of size E<.Dv SBLOCKSIZE>.  The following structure "
"describes the super-block and is from the file"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:76
#, no-wrap
msgid "ufs/ffs/fs.h :"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:184
#, no-wrap
msgid ""
"/*\n"
" * Super block for an FFS filesystem.\n"
" */\n"
"struct fs {\n"
"\tint32_t\t fs_firstfield;\t   /* historic filesystem linked list, */\n"
"\tint32_t\t fs_unused_1;      /*     used for incore super blocks */\n"
"\tint32_t\t fs_sblkno;        /* offset of super-block in filesys */\n"
"\tint32_t\t fs_cblkno;        /* offset of cyl-block in filesys */\n"
"\tint32_t\t fs_iblkno;        /* offset of inode-blocks in filesys */\n"
"\tint32_t\t fs_dblkno;        /* offset of first data after cg */\n"
"\tint32_t\t fs_old_cgoffset;  /* cylinder group offset in cylinder */\n"
"\tint32_t\t fs_old_cgmask;    /* used to calc mod fs_ntrak */\n"
"\tint32_t  fs_old_time;      /* last time written */\n"
"\tint32_t\t fs_old_size;      /* number of blocks in fs */\n"
"\tint32_t\t fs_old_dsize;     /* number of data blocks in fs */\n"
"\tint32_t\t fs_ncg;           /* number of cylinder groups */\n"
"\tint32_t\t fs_bsize;         /* size of basic blocks in fs */\n"
"\tint32_t\t fs_fsize;         /* size of frag blocks in fs */\n"
"\tint32_t\t fs_frag;          /* number of frags in a block in fs */\n"
"/* these are configuration parameters */\n"
"\tint32_t\t fs_minfree;       /* minimum percentage of free blocks */\n"
"\tint32_t\t fs_old_rotdelay;  /* num of ms for optimal next block */\n"
"\tint32_t\t fs_old_rps;       /* disk revolutions per second */\n"
"/* these fields can be computed from the others */\n"
"\tint32_t\t fs_bmask;         /* ``blkoff'' calc of blk offsets */\n"
"\tint32_t\t fs_fmask;         /* ``fragoff'' calc of frag offsets */\n"
"\tint32_t\t fs_bshift;        /* ``lblkno'' calc of logical blkno */\n"
"\tint32_t\t fs_fshift;        /* ``numfrags'' calc number of frags */\n"
"/* these are configuration parameters */\n"
"\tint32_t\t fs_maxcontig;     /* max number of contiguous blks */\n"
"\tint32_t\t fs_maxbpg;        /* max number of blks per cyl group */\n"
"/* these fields can be computed from the others */\n"
"\tint32_t\t fs_fragshift;     /* block to frag shift */\n"
"\tint32_t\t fs_fsbtodb;       /* fsbtodb and dbtofsb shift constant */\n"
"\tint32_t\t fs_sbsize;        /* actual size of super block */\n"
"\tint32_t\t fs_spare1[2];     /* old fs_csmask */\n"
"\t                           /* old fs_csshift */\n"
"\tint32_t\t fs_nindir;        /* value of NINDIR */\n"
"\tint32_t\t fs_inopb;         /* value of INOPB */\n"
"\tint32_t\t fs_old_nspf;      /* value of NSPF */\n"
"/* yet another configuration parameter */\n"
"\tint32_t\t fs_optim;         /* optimization preference, see below */\n"
"\tint32_t\t fs_old_npsect;    /* # sectors/track including spares */\n"
"\tint32_t\t fs_old_interleave; /* hardware sector interleave */\n"
"\tint32_t\t fs_old_trackskew; /* sector 0 skew, per track */\n"
"\tint32_t\t fs_id[2];         /* unique filesystem id */\n"
"/* sizes determined by number of cylinder groups and their sizes */\n"
"\tint32_t\t fs_old_csaddr;\t   /* blk addr of cyl grp summary area */\n"
"\tint32_t\t fs_cssize;        /* size of cyl grp summary area */\n"
"\tint32_t\t fs_cgsize;        /* cylinder group size */\n"
"\tint32_t\t fs_spare2;        /* old fs_ntrak */\n"
"\tint32_t\t fs_old_nsect;     /* sectors per track */\n"
"\tint32_t  fs_old_spc;       /* sectors per cylinder */\n"
"\tint32_t\t fs_old_ncyl;      /* cylinders in filesystem */\n"
"\tint32_t\t fs_old_cpg;       /* cylinders per group */\n"
"\tint32_t\t fs_ipg;           /* inodes per group */\n"
"\tint32_t\t fs_fpg;           /* blocks per group * fs_frag */\n"
"/* this data must be re-computed after crashes */\n"
"\tstruct\tcsum fs_old_cstotal; /* cylinder summary information */\n"
"/* these fields are cleared at mount time */\n"
"\tint8_t   fs_fmod;          /* super block modified flag */\n"
"\tint8_t   fs_clean;         /* filesystem is clean flag */\n"
"\tint8_t \t fs_ronly;         /* mounted read-only flag */\n"
"\tint8_t   fs_old_flags;     /* old FS_ flags */\n"
"\tu_char\t fs_fsmnt[MAXMNTLEN]; /* name mounted on */\n"
"\tu_char\t fs_volname[MAXVOLLEN]; /* volume name */\n"
"\tuint64_t fs_swuid;         /* system-wide uid */\n"
"\tint32_t  fs_pad;           /* due to alignment of fs_swuid */\n"
"/* these fields retain the current block allocation info */\n"
"\tint32_t\t fs_cgrotor;       /* last cg searched */\n"
"\tvoid \t*fs_ocsp[NOCSPTRS]; /* padding; was list of fs_cs buffers */\n"
"\tuint8_t *fs_contigdirs;    /* # of contiguously allocated dirs */\n"
"\tstruct\tcsum *fs_csp;      /* cg summary info buffer for fs_cs */\n"
"\tint32_t\t*fs_maxcluster;    /* max cluster in each cyl group */\n"
"\tu_int\t*fs_active;        /* used by snapshots to track fs */\n"
"\tint32_t\t fs_old_cpc;       /* cyl per cycle in postbl */\n"
"\tint32_t\t fs_maxbsize;      /* maximum blocking factor permitted */\n"
"\tint64_t\t fs_unrefs;        /* number of unreferenced inodes */\n"
"\tint64_t\t fs_sparecon64[16]; /* old rotation block list head */\n"
"\tint64_t\t fs_sblockloc;     /* byte offset of standard superblock */\n"
"\tstruct\tcsum_total fs_cstotal;  /* cylinder summary information */\n"
"\tufs_time_t fs_time;        /* last time written */\n"
"\tint64_t\t fs_size;          /* number of blocks in fs */\n"
"\tint64_t\t fs_dsize;         /* number of data blocks in fs */\n"
"\tufs2_daddr_t fs_csaddr;    /* blk addr of cyl grp summary area */\n"
"\tint64_t\t fs_pendingblocks; /* blocks in process of being freed */\n"
"\tint32_t\t fs_pendinginodes; /* inodes in process of being freed */\n"
"\tint32_t\t fs_snapinum[FSMAXSNAP]; /* list of snapshot inode numbers */\n"
"\tint32_t\t fs_avgfilesize;   /* expected average file size */\n"
"\tint32_t\t fs_avgfpdir;      /* expected # of files per directory */\n"
"\tint32_t\t fs_save_cgsize;   /* save real cg size to use fs_bsize */\n"
"\tint32_t\t fs_sparecon32[26]; /* reserved for future constants */\n"
"\tint32_t  fs_flags;         /* see FS_ flags below */\n"
"\tint32_t\t fs_contigsumsize; /* size of cluster summary array */\n"
"\tint32_t\t fs_maxsymlinklen; /* max length of an internal symlink */\n"
"\tint32_t\t fs_old_inodefmt;  /* format of on-disk inodes */\n"
"\tuint64_t fs_maxfilesize;   /* maximum representable file size */\n"
"\tint64_t\t fs_qbmask;        /* ~fs_bmask for use with 64-bit size */\n"
"\tint64_t\t fs_qfmask;        /* ~fs_fmask for use with 64-bit size */\n"
"\tint32_t\t fs_state;         /* validate fs_clean field */\n"
"\tint32_t\t fs_old_postblformat; /* format of positional layout tables */\n"
"\tint32_t\t fs_old_nrpos;     /* number of rotational positions */\n"
"\tint32_t\t fs_spare5[2];     /* old fs_postbloff */\n"
"\t                           /* old fs_rotbloff */\n"
"\tint32_t\t fs_magic;         /* magic number */\n"
"};\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:193
#, no-wrap
msgid ""
"/*\n"
" * Filesystem identification\n"
" */\n"
"#define\tFS_UFS1_MAGIC\t0x011954    /* UFS1 fast filesystem magic number "
"*/\n"
"#define\tFS_UFS2_MAGIC\t0x19540119  /* UFS2 fast filesystem magic number "
"*/\n"
"#define\tFS_OKAY\t\t0x7c269d38  /* superblock checksum */\n"
"#define FS_42INODEFMT\t-1      /* 4.2BSD inode format */\n"
"#define FS_44INODEFMT\t2       /* 4.4BSD inode format */\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:199
#, no-wrap
msgid ""
"/*\n"
" * Preference for optimization.\n"
" */\n"
"#define FS_OPTTIME\t0\t/* minimize allocation time */\n"
"#define FS_OPTSPACE\t1\t/* minimize disk fragmentation */\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:204
msgid ""
"Each disk drive contains some number of file systems.  A file system "
"consists of a number of cylinder groups.  Each cylinder group has inodes and "
"data."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:214
msgid ""
"A file system is described by its super-block, which in turn describes the "
"cylinder groups.  The super-block is critical data and is replicated in each "
"cylinder group to protect against catastrophic loss.  This is done at file "
"system creation time and the critical super-block data does not change, so "
"the copies need not be referenced further unless disaster strikes."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:227
msgid ""
"Addresses stored in inodes are capable of addressing fragments of `blocks'.  "
"File system blocks of at most size E<.Dv MAXBSIZE> can be optionally broken "
"into 2, 4, or 8 pieces, each of which is addressable; these pieces may be "
"E<.Dv DEV_BSIZE>, or some multiple of a E<.Dv DEV_BSIZE> unit."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:240
msgid ""
"Large files consist of exclusively large data blocks.  To avoid undue wasted "
"disk space, the last data block of a small file is allocated as only as many "
"fragments of a large block as are necessary.  The file system format retains "
"only a single pointer to such a fragment, which is a piece of a single large "
"block that has been divided.  The size of such a fragment is determinable "
"from information in the inode, using the E<.Fn blksize fs ip lbn> macro."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:243
msgid ""
"The file system records space availability at the fragment level; to "
"determine block availability, aligned fragments are examined."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:250
msgid ""
"The root inode is the root of the file system.  Inode 0 cannot be used for "
"normal purposes and historically bad blocks were linked to inode 1, thus the "
"root inode is 2 (inode 1 is no longer used for this purpose, however "
"numerous dump tapes make this assumption, so we are stuck with it)."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:266
msgid ""
"The E<.Fa fs_minfree> element gives the minimum acceptable percentage of "
"file system blocks that may be free.  If the freelist drops below this level "
"only the super-user may continue to allocate blocks.  The E<.Fa fs_minfree> "
"element may be set to 0 if no reserve of free blocks is deemed necessary, "
"however severe performance degradations will be observed if the file system "
"is run at greater than 90% full; thus the default value of E<.Fa fs_minfree> "
"is 8%."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:271
msgid ""
"Empirically the best trade-off between block fragmentation and overall disk "
"utilization at a loading of 90% comes with a fragmentation of 8, thus the "
"default fragment size is an eighth of the block size."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:283
msgid ""
"The element E<.Fa fs_optim> specifies whether the file system should try to "
"minimize the time spent allocating blocks, or if it should attempt to "
"minimize the space fragmentation on the disk.  If the value of fs_minfree "
"(see above) is less than 8%, then the file system defaults to optimizing for "
"space to avoid running out of full sized blocks.  If the value of minfree is "
"greater than or equal to 8%, fragmentation is unlikely to be problematical, "
"and the file system defaults to optimizing for time."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:291
msgid ""
"E<.Em Cylinder group related limits>: Each cylinder keeps track of the "
"availability of blocks at different rotational positions, so that sequential "
"blocks can be laid out with minimum rotational latency.  With the default of "
"8 distinguished rotational positions, the resolution of the summary "
"information is 2ms for a typical 3600 rpm drive."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:301
msgid ""
"The element E<.Fa fs_old_rotdelay> gives the minimum number of milliseconds "
"to initiate another disk transfer on the same cylinder.  It is used in "
"determining the rotationally optimal layout for disk blocks within a file; "
"the default value for E<.Fa fs_old_rotdelay> is 2ms."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:307
msgid ""
"Each file system has a statically allocated number of inodes.  An inode is "
"allocated for each E<.Dv NBPI> bytes of disk space.  The inode allocation "
"strategy is extremely conservative."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:323
msgid ""
"E<.Dv MINBSIZE> is the smallest allowable block size.  With a E<.Dv "
"MINBSIZE> of 4096 it is possible to create files of size 2^32 with only two "
"levels of indirection.  E<.Dv MINBSIZE> must be big enough to hold a "
"cylinder group block, thus changes to E<.Pq Fa struct cg> must keep its size "
"within E<.Dv MINBSIZE>.  Note that super-blocks are never more than size "
"E<.Dv SBLOCKSIZE>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:334
msgid ""
"The path name on which the file system is mounted is maintained in E<.Fa "
"fs_fsmnt>.  E<.Dv MAXMNTLEN> defines the amount of space allocated in the "
"super-block for this name.  The limit on the amount of summary information "
"per file system is defined by E<.Dv MAXCSBUFS>.  For a 4096 byte block size, "
"it is currently parameterized for a maximum of two million cylinders."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:342
msgid ""
"Per cylinder group information is summarized in blocks allocated from the "
"first cylinder group's data blocks.  These blocks are read in from E<.Fa "
"fs_csaddr> (size E<.Fa fs_cssize>)  in addition to the super-block."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:349
msgid ""
"E<.Sy N.B.>: E<.Fn sizeof \"struct csum\"> must be a power of two in order "
"for the E<.Fn fs_cs> macro to work."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:367
msgid ""
"The E<.Em \"Super-block for a file system\">: The size of the rotational "
"layout tables is limited by the fact that the super-block is of size E<.Dv "
"SBLOCKSIZE>.  The size of these tables is E<.Em inversely> proportional to "
"the block size of the file system.  The size of the tables is increased when "
"sector sizes are not powers of two, as this increases the number of "
"cylinders included before the rotational pattern repeats E<.Pq Fa fs_cpc>.  "
"The size of the rotational layout tables is derived from the number of bytes "
"remaining in E<.Pq Fa struct fs>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:374
msgid ""
"The number of blocks of data per cylinder group is limited because cylinder "
"groups are at most one block.  The inode and free block tables must fit into "
"a single block after deducting space for the cylinder group structure E<.Pq "
"Fa struct cg>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:386
msgid ""
"The E<.Em Inode>: The inode is the focus of all file activity in the E<.Ux> "
"file system.  There is a unique inode allocated for each active file, each "
"current directory, each mounted-on file, text file, and the root.  An inode "
"is `named' by its device/i-number pair.  For further information, see the "
"include file"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/fs.5:386
#, no-wrap
msgid "ufs/ufs/inode.h ."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:389
msgid "The format of an external attribute is defined by the extattr structure:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:399
#, no-wrap
msgid ""
"struct extattr {\n"
"\tuint32_t ea_length;\t    /* length of this attribute */\n"
"\tuint8_t\tea_namespace;\t    /* name space of this attribute */\n"
"\tuint8_t\tea_contentpadlen;   /* bytes of padding at end of attribute */\n"
"\tuint8_t\tea_namelength;\t    /* length of attribute name */\n"
"\tchar\tea_name[1];\t    /* attribute name (NOT nul-terminated) */\n"
"\t/* padding, if any, to align attribute content to 8 byte boundary */\n"
"\t/* extended attribute content follows */\n"
"};\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:403
msgid ""
"Several macros are defined to manipulate these structures.  Each macro takes "
"a pointer to an extattr structure."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/fs.5:404
#, no-wrap
msgid "Dv EXTATTR_NEXT(eap)"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:407
msgid "Returns a pointer to the next extended attribute following E<.Fa eap>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/fs.5:407
#, no-wrap
msgid "Dv EXTATTR_CONTENT(eap)"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:410
msgid ""
"Returns a pointer to the extended attribute content referenced by E<.Fa "
"eap>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/fs.5:410
#, no-wrap
msgid "Dv EXTATTR_CONTENT_SIZE(eap)"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:413
msgid "Returns the size of the extended attribute content referenced by E<.Fa eap>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:416
msgid "The following code identifies an ACL:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:425
#, no-wrap
msgid ""
"\tif (eap-E<gt>ea_namespace == EXTATTR_NAMESPACE_SYSTEM &&\n"
"            eap-E<gt>ea_namelength == "
"sizeof(POSIX1E_ACL_ACCESS_EXTATTR_NAME) - 1 &&\n"
"\t    strncmp(eap-E<gt>ea_name, POSIX1E_ACL_ACCESS_EXTATTR_NAME,\n"
"             sizeof(POSIX1E_ACL_ACCESS_EXTATTR_NAME) - 1) == 0) {\n"
"\t\taclp = EXTATTR_CONTENT(eap);\n"
"\t\tacllen = EXTATTR_CONTENT_SIZE(eap);\n"
"\t\t...\n"
"\t}\n"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man5/fs.5:426
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/fs.5:431
msgid ""
"A super-block structure named filsys appeared in E<.At v6>.  The file system "
"described in this manual appeared in E<.Bx 4.2>."
msgstr ""
