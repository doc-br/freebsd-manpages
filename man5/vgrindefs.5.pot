# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:33-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/usr.bin/vgrind/vgrindefs.5:31
#, no-wrap
msgid "June 6, 1993"
msgstr ""

#. type: Dt
#: /usr/src/usr.bin/vgrind/vgrindefs.5:32
#, no-wrap
msgid "VGRINDEFS 5"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/vgrind/vgrindefs.5:34
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:36
msgid "E<.Nm vgrindefs>"
msgstr ""

#. type: Nd
#: /usr/src/usr.bin/vgrind/vgrindefs.5:36
#, no-wrap
msgid "language definition data base for"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:38
msgid "E<.Xr vgrind 1>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/vgrind/vgrindefs.5:38
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:40
msgid "E<.Nm>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/vgrind/vgrindefs.5:40
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:49
msgid ""
"The E<.Nm> file contains all language definitions for E<.Xr vgrind 1>.  The "
"data base is very similar to E<.Xr termcap 5>."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/vgrind/vgrindefs.5:49
#, no-wrap
msgid "FIELDS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:51
msgid "The following table names and describes each field."
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:52
#, no-wrap
msgid "Sy \"Name\tType\tDescription\""
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:53
#, no-wrap
msgid "ab\tstr\tregular expression for the start of an alternate comment"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:54
#, no-wrap
msgid "ae\tstr\tregular expression for the end of an alternate comment"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:55
#, no-wrap
msgid "pb\tstr\tregular expression for start of a procedure"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:56
#, no-wrap
msgid "bb\tstr\tregular expression for start of a lexical block"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:57
#, no-wrap
msgid "be\tstr\tregular expression for the end of a lexical block"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:58
#, no-wrap
msgid "cb\tstr\tregular expression for the start of a comment"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:59
#, no-wrap
msgid "ce\tstr\tregular expression for the end of a comment"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:60
#, no-wrap
msgid "sb\tstr\tregular expression for the start of a string"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:61
#, no-wrap
msgid "se\tstr\tregular expression for the end of a string"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:62
#, no-wrap
msgid "lb\tstr\tregular expression for the start of a character constant"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:63
#, no-wrap
msgid "le\tstr\tregular expression for the end of a character constant"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:64
#, no-wrap
msgid "nc\tstr\tregular expression for a non-comment (see below)"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:65
#, no-wrap
msgid "tl\tbool\tpresent means procedures are only defined at the top lexical level"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:66
#, no-wrap
msgid "oc\tbool\tpresent means upper and lower case are equivalent"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:67
#, no-wrap
msgid "kw\tstr\ta list of keywords separated by spaces"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:79
msgid ""
"Non-comments are required to describe a certain context where a sequence "
"that would normally start a comment loses its special meaning.  A typical "
"example for this can be found in Perl, where comments are normally starting "
"with E<.Ql #>, while the string E<.Ql $#> is an operator on an array."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/vgrind/vgrindefs.5:79
#, no-wrap
msgid "REGULAR EXPRESSIONS"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:92
msgid ""
"E<.Nm Vgrindefs> uses regular expression which are very similar to those of "
"E<.Xr ex 1> and E<.Xr lex 1>.  The characters `^', `$', `:' and `\\e' are "
"reserved characters and must be \"quoted\" with a preceding E<.Ql \\e> if "
"they are to be included as normal characters.  The metasymbols and their "
"meanings are:"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:93
#, no-wrap
msgid "$"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:95
msgid "the end of a line"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:95
#, no-wrap
msgid "\\&^"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:97
msgid "the beginning of a line"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:97
#, no-wrap
msgid "\\ed"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:99
msgid "a delimiter (space, tab, newline, start of line)"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:99
#, no-wrap
msgid "\\ea"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:101
msgid "matches any string of symbols (like .* in lex)"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:101
#, no-wrap
msgid "\\ep"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:105
msgid ""
"matches any alphanumeric name.  In a procedure definition (pb) the string "
"that matches this symbol is used as the procedure name."
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:105
#, no-wrap
msgid "()"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:107
msgid "grouping"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:107
#, no-wrap
msgid "\\&|"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:109
msgid "alternation"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:109
#, no-wrap
msgid "?"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:111
msgid "last item is optional"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:111
#, no-wrap
msgid "\\ee"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:116
msgid ""
"preceding any string means that the string will not match an input string if "
"the input string is preceded by an escape character (\\e).  This is "
"typically used for languages (like C) which can include the string delimiter "
"in a string by escaping it."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:122
msgid ""
"Unlike other regular expressions in the system, these match words and not "
"characters.  Hence something like \"(tramp|steamer)flies?\" would match "
"\"tramp\", \"steamer\", \"trampflies\", or \"steamerflies\"."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/vgrind/vgrindefs.5:122
#, no-wrap
msgid "KEYWORD LIST"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:128
msgid ""
"The keyword list is just a list of keywords in the language separated by "
"spaces.  If the \"oc\" boolean is specified, indicating that upper and lower "
"case are equivalent, then all the keywords should be specified in lower "
"case."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/vgrind/vgrindefs.5:128
#, no-wrap
msgid "FILES"
msgstr ""

#. type: It
#: /usr/src/usr.bin/vgrind/vgrindefs.5:130
#, no-wrap
msgid "Pa /usr/share/misc/vgrindefs"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:132
msgid "File containing terminal descriptions."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/vgrind/vgrindefs.5:133
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:136
msgid ""
"The following entry, which describes the C language, is typical of a "
"language entry."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:145
#, no-wrap
msgid ""
"C|c::pb=^\\ed?*?\\ed?\\ep\\ed?\\e(\\ea?\\e):bb={:be=}:cb=/*:ce=*/:sb=\":se=\\ee\":\\e\n"
":lb=':le=\\ee':tl:\\e\n"
":kw=asm auto break case char continue default do double else enum\\e\n"
"extern float for fortran goto if int long register return short\\e\n"
"sizeof static struct switch typedef union unsigned while #define\\e\n"
"#else #endif #if #ifdef #ifndef #include #undef # define else endif\\e\n"
"if ifdef ifndef include undef:\n"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:152
msgid ""
"Note that the first field is just the language name (and any variants of "
"it).  Thus the C language could be specified to E<.Xr vgrind 1> as \"c\" or "
"\"C\"."
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:163
msgid ""
"Entries may continue onto multiple lines by giving a \\e as the last "
"character of a line.  Capabilities in E<.Nm> are of two types: Boolean "
"capabilities which indicate that the language has some particular feature "
"and string capabilities which give a regular expression or keyword list."
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/vgrind/vgrindefs.5:163
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:166
msgid "E<.Xr troff 1>, E<.Xr vgrind 1>"
msgstr ""

#. type: Sh
#: /usr/src/usr.bin/vgrind/vgrindefs.5:166
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/usr.bin/vgrind/vgrindefs.5:170
msgid "The E<.Nm> file format appeared in E<.Bx 4.2>."
msgstr ""
