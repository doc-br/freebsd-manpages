# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:29-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man5/elf.5:27
#, no-wrap
msgid "December 18, 2005"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man5/elf.5:28
#, no-wrap
msgid "ELF 5"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man5/elf.5:30
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:32
msgid "E<.Nm elf>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man5/elf.5:32
#, no-wrap
msgid "format of ELF executable binary files"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man5/elf.5:33
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/elf.5:34 /usr/src/share/man/man5/elf.5:37 /usr/src/share/man/man5/elf.5:54
#, no-wrap
msgid "elf.h"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man5/elf.5:35
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:37
msgid "The header file"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:42
msgid ""
"defines the format of ELF executable binary files.  Amongst these files are "
"normal executable files, relocatable object files, core files and shared "
"libraries."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:51
msgid ""
"An executable file using the ELF file format consists of an ELF header, "
"followed by a program header table or a section header table, or both.  The "
"ELF header is always at offset zero of the file.  The program header table "
"and the section header table's offset in the file are defined in the ELF "
"header.  The two tables describe the rest of the particularities of the "
"file."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:54
msgid ""
"Applications which wish to process ELF binary files for their native "
"architecture only should include"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:63
msgid ""
"in their source code.  These applications should need to refer to all the "
"types and structures by their generic names E<.Dq Elf_xxx> and to the macros "
"by E<.Dq ELF_xxx>.  Applications written this way can be compiled on any "
"architecture, regardless whether the host is 32-bit or 64-bit."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:66
msgid ""
"Should an application need to process ELF files of an unknown architecture "
"then the application needs to include both"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/elf.5:66
#, no-wrap
msgid "sys/elf32.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:68
msgid "and"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/elf.5:68
#, no-wrap
msgid "sys/elf64.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:70
msgid "instead of"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/elf.5:70
#, no-wrap
msgid "elf.h ."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:79
msgid ""
"Furthermore, all types and structures need to be identified by either E<.Dq "
"Elf32_xxx> or E<.Dq Elf64_xxx>.  The macros need to be identified by E<.Dq "
"ELF32_xxx> or E<.Dq ELF64_xxx>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:81
msgid "Whatever the system's architecture is, it will always include"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/elf.5:81
#, no-wrap
msgid "sys/elf_common.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:83
msgid "as well as"
msgstr ""

#. type: In
#: /usr/src/share/man/man5/elf.5:83
#, no-wrap
msgid "sys/elf_generic.h ."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:88
msgid ""
"These header files describe the above mentioned headers as C structures and "
"also include structures for dynamic sections, relocation sections and symbol "
"tables."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:90
msgid "The following types are being used for 32-bit architectures:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:97
#, no-wrap
msgid ""
"Elf32_Addr\tUnsigned 32-bit program address\n"
"Elf32_Half\tUnsigned 16-bit field\n"
"Elf32_Lword\tUnsigned 64-bit field\n"
"Elf32_Off\tUnsigned 32-bit file offset\n"
"Elf32_Sword\tSigned 32-bit field or integer\n"
"Elf32_Word\tUnsigned 32-bit field or integer\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:100
msgid "For 64-bit architectures we have the following types:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:109
#, no-wrap
msgid ""
"Elf64_Addr\tUnsigned 64-bit program address\n"
"Elf64_Half\tUnsigned 16-bit field\n"
"Elf64_Lword\tUnsigned 64-bit field\n"
"Elf64_Off\tUnsigned 64-bit file offset\n"
"Elf64_Sword\tSigned 32-bit field\n"
"Elf64_Sxword\tSigned 64-bit field or integer\n"
"Elf64_Word\tUnsigned 32-bit field\n"
"Elf64_Xword\tUnsigned 64-bit field or integer\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:117
msgid ""
"All data structures that the file format defines follow the E<.Dq natural> "
"size and alignment guidelines for the relevant class.  If necessary, data "
"structures contain explicit padding to ensure 4-byte alignment for 4-byte "
"objects, to force structure sizes to a multiple of 4, etc."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:119
msgid "The ELF header is described by the type Elf32_Ehdr or Elf64_Ehdr:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:136
#, no-wrap
msgid ""
"typedef struct {\n"
"        unsigned char   e_ident[EI_NIDENT];\n"
"        Elf32_Half      e_type;\n"
"        Elf32_Half      e_machine;\n"
"        Elf32_Word      e_version;\n"
"        Elf32_Addr      e_entry;\n"
"        Elf32_Off       e_phoff;\n"
"        Elf32_Off       e_shoff;\n"
"        Elf32_Word      e_flags;\n"
"        Elf32_Half      e_ehsize;\n"
"        Elf32_Half      e_phentsize;\n"
"        Elf32_Half      e_phnum;\n"
"        Elf32_Half      e_shentsize;\n"
"        Elf32_Half      e_shnum;\n"
"        Elf32_Half      e_shstrndx;\n"
"} Elf32_Ehdr;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:154
#, no-wrap
msgid ""
"typedef struct {\n"
"\tunsigned char   e_ident[EI_NIDENT];\n"
"\tElf64_Half      e_type;\n"
"\tElf64_Half      e_machine;\n"
"\tElf64_Word      e_version;\n"
"\tElf64_Addr      e_entry;\n"
"\tElf64_Off       e_phoff;\n"
"\tElf64_Off       e_shoff;\n"
"\tElf64_Word      e_flags;\n"
"\tElf64_Half      e_ehsize;\n"
"\tElf64_Half      e_phentsize;\n"
"\tElf64_Half      e_phnum;\n"
"\tElf64_Half      e_shentsize;\n"
"\tElf64_Half      e_shnum;\n"
"\tElf64_Half      e_shstrndx;\n"
"} Elf64_Ehdr;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:157
msgid "The fields have the following meanings:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:159
#, no-wrap
msgid "Dv e_ident"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:168
msgid ""
"This array of bytes specifies to interpret the file, independent of the "
"processor or the file's remaining contents.  Within this array everything is "
"named by macros, which start with the prefix E<.Sy EI_> and may contain "
"values which start with the prefix E<.Sy ELF>.  The following macros are "
"defined:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:170
#, no-wrap
msgid "Dv EI_MAG0"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:174
msgid "The first byte of the magic number.  It must be filled with E<.Sy ELFMAG0>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:174
#, no-wrap
msgid "Dv EI_MAG1"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:178
msgid "The second byte of the magic number.  It must be filled with E<.Sy ELFMAG1>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:178
#, no-wrap
msgid "Dv EI_MAG2"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:182
msgid "The third byte of the magic number.  It must be filled with E<.Sy ELFMAG2>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:182
#, no-wrap
msgid "Dv EI_MAG3"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:186
msgid "The fourth byte of the magic number.  It must be filled with E<.Sy ELFMAG3>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:186
#, no-wrap
msgid "Dv EI_CLASS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:188
msgid "The fifth byte identifies the architecture for this binary:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:190
#, no-wrap
msgid "Dv ELFCLASSNONE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:192
msgid "This class is invalid."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:192
#, no-wrap
msgid "Dv ELFCLASS32"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:196
msgid ""
"This defines the 32-bit architecture.  It supports machines with files and "
"virtual address spaces up to 4 Gigabytes."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:196
#, no-wrap
msgid "Dv ELFCLASS64"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:198
msgid "This defines the 64-bit architecture."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:199
#, no-wrap
msgid "Dv EI_DATA"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:203
msgid ""
"The sixth byte specifies the data encoding of the processor-specific data in "
"the file.  Currently these encodings are supported:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:205
#, no-wrap
msgid "Dv ELFDATANONE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:207
msgid "Unknown data format."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:207
#, no-wrap
msgid "Dv ELFDATA2LSB"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:209
msgid "Two's complement, little-endian."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:209
#, no-wrap
msgid "Dv ELFDATA2MSB"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:211
msgid "Two's complement, big-endian."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:212
#, no-wrap
msgid "Dv EI_VERSION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:214
msgid "The version number of the ELF specification:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:216 /usr/src/share/man/man5/elf.5:333
#, no-wrap
msgid "Dv EV_NONE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:218
msgid "Invalid version."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:218 /usr/src/share/man/man5/elf.5:335
#, no-wrap
msgid "Dv EV_CURRENT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:220
msgid "Current version."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:221
#, no-wrap
msgid "Dv EI_OSABI"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:228
msgid ""
"This byte identifies the operating system and ABI to which the object is "
"targeted.  Some fields in other ELF structures have flags and values that "
"have platform specific meanings; the interpretation of those fields is "
"determined by the value of this byte.  The following values are currently "
"defined:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:230
#, no-wrap
msgid "Dv ELFOSABI_SYSV"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:232
msgid "UNIX System V ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:232
#, no-wrap
msgid "Dv ELFOSABI_HPUX"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:234
msgid "HP-UX operating system ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:234
#, no-wrap
msgid "Dv ELFOSABI_NETBSD"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:237
msgid "E<.Nx> operating system ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:237
#, no-wrap
msgid "Dv ELFOSABI_LINUX"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:239
msgid "GNU/Linux operating system ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:239
#, no-wrap
msgid "Dv ELFOSABI_HURD"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:241
msgid "GNU/Hurd operating system ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:241
#, no-wrap
msgid "Dv ELFOSABI_86OPEN"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:243
msgid "86Open Common IA32 ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:243
#, no-wrap
msgid "Dv ELFOSABI_SOLARIS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:245
msgid "Solaris operating system ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:245
#, no-wrap
msgid "Dv ELFOSABI_MONTEREY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:247
msgid "Monterey project ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:247
#, no-wrap
msgid "Dv ELFOSABI_IRIX"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:249
msgid "IRIX operating system ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:249
#, no-wrap
msgid "Dv ELFOSABI_FREEBSD"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:252
msgid "E<.Fx> operating system ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:252
#, no-wrap
msgid "Dv ELFOSABI_TRU64"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:254
msgid "TRU64 UNIX operating system ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:254
#, no-wrap
msgid "Dv ELFOSABI_ARM"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:256
msgid "ARM architecture ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:256
#, no-wrap
msgid "Dv ELFOSABI_STANDALONE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:258
msgid "Standalone (embedded) ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:259
#, no-wrap
msgid "Dv EI_ABIVERSION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:266
msgid ""
"This byte identifies the version of the ABI to which the object is "
"targeted.  This field is used to distinguish among incompatible versions of "
"an ABI.  The interpretation of this version number is dependent on the ABI "
"identified by the EI_OSABI field.  Applications conforming to this "
"specification use the value 0."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:266
#, no-wrap
msgid "Dv EI_PAD"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:273
msgid ""
"Start of padding.  These bytes are reserved and set to zero.  Programs which "
"read them should ignore them.  The value for EI_PAD will change in the "
"future if currently unused bytes are given meanings."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:273
#, no-wrap
msgid "Dv EI_BRAND"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:275
msgid "Start of architecture identification."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:275
#, no-wrap
msgid "Dv EI_NIDENT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:277
msgid "The size of the e_ident array."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:279
#, no-wrap
msgid "Dv e_type"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:281
msgid "This member of the structure identifies the object file type:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:283
#, no-wrap
msgid "Dv ET_NONE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:285
msgid "An unknown type."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:285
#, no-wrap
msgid "Dv ET_REL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:287
msgid "A relocatable file."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:287
#, no-wrap
msgid "Dv ET_EXEC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:289
msgid "An executable file."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:289
#, no-wrap
msgid "Dv ET_DYN"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:291
msgid "A shared object."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:291
#, no-wrap
msgid "Dv ET_CORE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:293
msgid "A core file."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:295
#, no-wrap
msgid "Dv e_machine"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:297
msgid "This member specifies the required architecture for an individual file:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:299
#, no-wrap
msgid "Dv EM_NONE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:301
msgid "An unknown machine."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:301
#, no-wrap
msgid "Dv EM_M32"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:303
msgid "AT&T WE 32100."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:303
#, no-wrap
msgid "Dv EM_SPARC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:305
msgid "Sun Microsystems SPARC."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:305
#, no-wrap
msgid "Dv EM_386"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:307
msgid "Intel 80386."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:307
#, no-wrap
msgid "Dv EM_68K"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:309
msgid "Motorola 68000."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:309
#, no-wrap
msgid "Dv EM_88K"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:311
msgid "Motorola 88000."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:311
#, no-wrap
msgid "Dv EM_486"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:313
msgid "Intel 80486."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:313
#, no-wrap
msgid "Dv EM_860"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:315
msgid "Intel 80860."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:315
#, no-wrap
msgid "Dv EM_MIPS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:317
msgid "MIPS RS3000 (big-endian only)."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:317
#, no-wrap
msgid "Dv EM_MIPS_RS4_BE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:319
msgid "MIPS RS4000 (big-endian only)."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:319
#, no-wrap
msgid "Dv EM_SPARC64"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:321
msgid "SPARC v9 64-bit unofficial."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:321
#, no-wrap
msgid "Dv EM_PARISC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:323
msgid "HPPA."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:323
#, no-wrap
msgid "Dv EM_PPC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:325
msgid "PowerPC."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:325
#, no-wrap
msgid "Dv EM_ALPHA"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:327
msgid "Compaq [DEC] Alpha."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:329
#, no-wrap
msgid "Dv e_version"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:331
msgid "This member identifies the file version:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:335
msgid "Invalid version"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:337
msgid "Current version"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:338
#, no-wrap
msgid "Dv e_entry"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:343
msgid ""
"This member gives the virtual address to which the system first transfers "
"control, thus starting the process.  If the file has no associated entry "
"point, this member holds zero."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:343
#, no-wrap
msgid "Dv e_phoff"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:347
msgid ""
"This member holds the program header table's file offset in bytes.  If the "
"file has no program header table, this member holds zero."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:347
#, no-wrap
msgid "Dv e_shoff"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:351
msgid ""
"This member holds the section header table's file offset in bytes.  If the "
"file has no section header table this member holds zero."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:351
#, no-wrap
msgid "Dv e_flags"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:356
msgid ""
"This member holds processor-specific flags associated with the file.  Flag "
"names take the form EF_`machine_flag'.  Currently no flags have been "
"defined."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:356
#, no-wrap
msgid "Dv e_ehsize"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:358
msgid "This member holds the ELF header's size in bytes."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:358
#, no-wrap
msgid "Dv e_phentsize"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:361
msgid ""
"This member holds the size in bytes of one entry in the file's program "
"header table; all entries are the same size."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:361
#, no-wrap
msgid "Dv e_phnum"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:380
msgid ""
"This member holds the number of entries in the program header table.  If the "
"file is using extended program header numbering, then the E<.Sy e_phnum> "
"member will contain the value E<.Dv PN_XNUM> and the actual number of "
"program header table entries will be stored in the E<.Sy sh_info> member of "
"the section header at index E<.Dv SHN_UNDEF>.  The product of E<.Sy "
"e_phentsize> and the number of program header table entries gives the "
"program header table's size in bytes.  If a file has no program header, "
"E<.Sy e_phnum> holds the value zero."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:380
#, no-wrap
msgid "Dv e_shentsize"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:384
msgid ""
"This member holds a sections header's size in bytes.  A section header is "
"one entry in the section header table; all entries are the same size."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:384
#, no-wrap
msgid "Dv e_shnum"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:401
msgid ""
"This member holds the number of entries in the section header table.  If the "
"file is using extended section numbering, then the E<.Sy e_shnum> member "
"will be zero and the actual section number will be stored in the E<.Sy "
"sh_size> member of the section header at index E<.Dv SHN_UNDEF>.  If a file "
"has no section header table, both the E<.Sy e_shnum> and the E<.Sy e_shoff> "
"fields of the ELF header will be zero.  The product of E<.Sy e_shentsize> "
"and the number of sections in the file gives the section header table's size "
"in bytes."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:401
#, no-wrap
msgid "Dv e_shstrndx"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:414
msgid ""
"This member holds the section header table index of the entry associated "
"with the section name string table.  If extended section numbering is being "
"used, this field will hold the value E<.Sy SHN_XINDEX>, and the actual "
"section header table index will be present in the E<.Sy sh_link> field of "
"the section header entry at index E<.Dv SHN_UNDEF>.  If the file has no "
"section name string table, this member holds the value E<.Sy SHN_UNDEF>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:431
msgid ""
"An executable or shared object file's program header table is an array of "
"structures, each describing a segment or other information the system needs "
"to prepare the program for execution.  An object file E<.Em segment> "
"contains one or more E<.Em sections>.  Program headers are meaningful only "
"for executable and shared object files.  A file specifies its own program "
"header size with the ELF header's E<.Sy e_phentsize> and E<.Sy e_phnum> "
"members.  As with the Elf executable header, the program header also has "
"different versions depending on the architecture:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:442
#, no-wrap
msgid ""
"typedef struct {\n"
"        Elf32_Word      p_type;\n"
"        Elf32_Off       p_offset;\n"
"        Elf32_Addr      p_vaddr;\n"
"        Elf32_Addr      p_paddr;\n"
"        Elf32_Word      p_filesz;\n"
"        Elf32_Word      p_memsz;\n"
"        Elf32_Word      p_flags;\n"
"        Elf32_Word      p_align;\n"
"} Elf32_Phdr;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:454
#, no-wrap
msgid ""
"typedef struct {\n"
"        Elf64_Word      p_type;\n"
"        Elf64_Word      p_flags;\n"
"        Elf64_Off       p_offset;\n"
"        Elf64_Addr      p_vaddr;\n"
"        Elf64_Addr      p_paddr;\n"
"        Elf64_Xword     p_filesz;\n"
"        Elf64_Xword     p_memsz;\n"
"        Elf64_Xword     p_align;\n"
"} Elf64_Phdr;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:460
msgid ""
"The main difference between the 32-bit and the 64-bit program header lies "
"only in the location of a E<.Sy p_flags> member in the total struct."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:462
#, no-wrap
msgid "Dv p_type"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:465
msgid ""
"This member of the Phdr struct tells what kind of segment this array element "
"describes or how to interpret the array element's information."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:467
#, no-wrap
msgid "Dv PT_NULL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:470
msgid ""
"The array element is unused and the other members' values are undefined.  "
"This lets the program header have ignored entries."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:470
#, no-wrap
msgid "Dv PT_LOAD"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:490
msgid ""
"The array element specifies a loadable segment, described by E<.Sy p_filesz> "
"and E<.Sy p_memsz>.  The bytes from the file are mapped to the beginning of "
"the memory segment.  If the segment's memory size E<.Pq Sy p_memsz> is "
"larger than the file size E<.Pq Sy p_filesz>, the E<.Dq extra> bytes are "
"defined to hold the value 0 and to follow the segment's initialized area.  "
"The file size may not be larger than the memory size.  Loadable segment "
"entries in the program header table appear in ascending order, sorted on the "
"E<.Sy p_vaddr> member."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:490
#, no-wrap
msgid "Dv PT_DYNAMIC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:492
msgid "The array element specifies dynamic linking information."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:492
#, no-wrap
msgid "Dv PT_INTERP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:501
msgid ""
"The array element specifies the location and size of a null-terminated path "
"name to invoke as an interpreter.  This segment type is meaningful only for "
"executable files (though it may occur for shared objects).  However it may "
"not occur more than once in a file.  If it is present it must precede any "
"loadable segment entry."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:501
#, no-wrap
msgid "Dv PT_NOTE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:503
msgid "The array element specifies the location and size for auxiliary information."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:503
#, no-wrap
msgid "Dv PT_SHLIB"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:507
msgid ""
"This segment type is reserved but has unspecified semantics.  Programs that "
"contain an array element of this type do not conform to the ABI."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:507
#, no-wrap
msgid "Dv PT_PHDR"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:515
msgid ""
"The array element, if present, specifies the location and size of the "
"program header table itself, both in the file and in the memory image of the "
"program.  This segment type may not occur more than once in a file.  "
"Moreover, it may only occur if the program header table is part of the "
"memory image of the program.  If it is present it must precede any loadable "
"segment entry."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:515
#, no-wrap
msgid "Dv PT_LOPROC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:519
msgid ""
"This value up to and including E<.Sy PT_HIPROC> are reserved for "
"processor-specific semantics."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:519
#, no-wrap
msgid "Dv PT_HIPROC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:523
msgid ""
"This value down to and including E<.Sy PT_LOPROC> are reserved for "
"processor-specific semantics."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:525
#, no-wrap
msgid "Dv p_offset"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:528
msgid ""
"This member holds the offset from the beginning of the file at which the "
"first byte of the segment resides."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:528
#, no-wrap
msgid "Dv p_vaddr"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:531
msgid ""
"This member holds the virtual address at which the first byte of the segment "
"resides in memory."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:531
#, no-wrap
msgid "Dv p_paddr"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:538
msgid ""
"On systems for which physical addressing is relevant, this member is "
"reserved for the segment's physical address.  Under E<.Bx> this member is "
"not used and must be zero."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:538
#, no-wrap
msgid "Dv p_filesz"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:541
msgid ""
"This member holds the number of bytes in the file image of the segment.  It "
"may be zero."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:541
#, no-wrap
msgid "Dv p_memsz"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:544
msgid ""
"This member holds the number of bytes in the memory image of the segment.  "
"It may be zero."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:544
#, no-wrap
msgid "Dv p_flags"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:546
msgid "This member holds flags relevant to the segment:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:548
#, no-wrap
msgid "Dv PF_X"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:550
msgid "An executable segment."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:550
#, no-wrap
msgid "Dv PF_W"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:552
msgid "A writable segment."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:552
#, no-wrap
msgid "Dv PF_R"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:554
msgid "A readable segment."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:565
msgid ""
"A text segment commonly has the flags E<.Sy PF_X> and E<.Sy PF_R>.  A data "
"segment commonly has E<.Sy PF_X>, E<.Sy PF_W> and E<.Sy PF_R>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:565
#, no-wrap
msgid "Dv p_align"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:582
msgid ""
"This member holds the value to which the segments are aligned in memory and "
"in the file.  Loadable process segments must have congruent values for E<.Sy "
"p_vaddr> and E<.Sy p_offset>, modulo the page size.  Values of zero and one "
"mean no alignment is required.  Otherwise, E<.Sy p_align> should be a "
"positive, integral power of two, and E<.Sy p_vaddr> should equal E<.Sy "
"p_offset>, modulo E<.Sy p_align>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:596
msgid ""
"An file's section header table lets one locate all the file's sections.  The "
"section header table is an array of Elf32_Shdr or Elf64_Shdr structures.  "
"The ELF header's E<.Sy e_shoff> member gives the byte offset from the "
"beginning of the file to the section header table.  E<.Sy e_shnum> holds the "
"number of entries the section header table contains.  E<.Sy e_shentsize> "
"holds the size in bytes of each entry."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:602
msgid ""
"A section header table index is a subscript into this array.  Some section "
"header table indices are reserved.  An object file does not have sections "
"for these special indices:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:604
#, no-wrap
msgid "Dv SHN_UNDEF"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:612
msgid ""
"This value marks an undefined, missing, irrelevant, or otherwise meaningless "
"section reference.  For example, a symbol E<.Dq defined> relative to section "
"number E<.Sy SHN_UNDEF> is an undefined symbol."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:612
#, no-wrap
msgid "Dv SHN_LORESERVE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:614
msgid "This value specifies the lower bound of the range of reserved indices."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:614
#, no-wrap
msgid "Dv SHN_LOPROC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:618
msgid ""
"This value up to and including E<.Sy SHN_HIPROC> are reserved for "
"processor-specific semantics."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:618
#, no-wrap
msgid "Dv SHN_HIPROC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:622
msgid ""
"This value down to and including E<.Sy SHN_LOPROC> are reserved for "
"processor-specific semantics."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:622
#, no-wrap
msgid "Dv SHN_ABS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:628
msgid ""
"This value specifies absolute values for the corresponding reference.  For "
"example, symbols defined relative to section number E<.Sy SHN_ABS> have "
"absolute values and are not affected by relocation."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:628
#, no-wrap
msgid "Dv SHN_COMMON"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:631
msgid ""
"Symbols defined relative to this section are common symbols, such as FORTRAN "
"COMMON or unallocated C external variables."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:631
#, no-wrap
msgid "Dv SHN_HIRESERVE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:641
msgid ""
"This value specifies the upper bound of the range of reserved indices.  The "
"system reserves indices between E<.Sy SHN_LORESERVE> and E<.Sy "
"SHN_HIRESERVE>, inclusive.  The section header table does not contain "
"entries for the reserved indices."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:644
msgid "The section header has the following structure:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:657
#, no-wrap
msgid ""
"typedef struct {\n"
"\tElf32_Word      sh_name;\n"
"\tElf32_Word      sh_type;\n"
"\tElf32_Word      sh_flags;\n"
"\tElf32_Addr      sh_addr;\n"
"\tElf32_Off       sh_offset;\n"
"\tElf32_Word      sh_size;\n"
"\tElf32_Word      sh_link;\n"
"\tElf32_Word      sh_info;\n"
"\tElf32_Word      sh_addralign;\n"
"\tElf32_Word      sh_entsize;\n"
"} Elf32_Shdr;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:671
#, no-wrap
msgid ""
"typedef struct {\n"
"\tElf64_Word      sh_name;\n"
"\tElf64_Word      sh_type;\n"
"\tElf64_Xword     sh_flags;\n"
"\tElf64_Addr      sh_addr;\n"
"\tElf64_Off       sh_offset;\n"
"\tElf64_Xword     sh_size;\n"
"\tElf64_Word      sh_link;\n"
"\tElf64_Word      sh_info;\n"
"\tElf64_Xword     sh_addralign;\n"
"\tElf64_Xword     sh_entsize;\n"
"} Elf64_Shdr;\n"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:674
#, no-wrap
msgid "Dv sh_name"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:679
msgid ""
"This member specifies the name of the section.  Its value is an index into "
"the section header string table section, giving the location of a "
"null-terminated string."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:679
#, no-wrap
msgid "Dv sh_type"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:681
msgid "This member categorizes the section's contents and semantics."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:683
#, no-wrap
msgid "Dv SHT_NULL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:689
msgid ""
"This value marks the section header as inactive.  It does not have an "
"associated section.  Other members of the section header have undefined "
"values."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:689
#, no-wrap
msgid "Dv SHT_PROGBITS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:692
msgid ""
"The section holds information defined by the program, whose format and "
"meaning are determined solely by the program."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:692
#, no-wrap
msgid "Dv SHT_SYMTAB"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:704
msgid ""
"This section holds a symbol table.  Typically, E<.Sy SHT_SYMTAB> provides "
"symbols for link editing, though it may also be used for dynamic linking.  "
"As a complete symbol table, it may contain many symbols unnecessary for "
"dynamic linking.  An object file can also contain a E<.Sy SHN_DYNSYM> "
"section."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:704
#, no-wrap
msgid "Dv SHT_STRTAB"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:708
msgid ""
"This section holds a string table.  An object file may have multiple string "
"table sections."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:708
#, no-wrap
msgid "Dv SHT_RELA"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:715
msgid ""
"This section holds relocation entries with explicit addends, such as type "
"E<.Sy Elf32_Rela> for the 32-bit class of object files.  An object may have "
"multiple relocation sections."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:715
#, no-wrap
msgid "Dv SHT_HASH"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:721
msgid ""
"This section holds a symbol hash table.  All object participating in dynamic "
"linking must contain a symbol hash table.  An object file may have only one "
"hash table."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:721
#, no-wrap
msgid "Dv SHT_DYNAMIC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:725
msgid ""
"This section holds information for dynamic linking.  An object file may have "
"only one dynamic section."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:725
#, no-wrap
msgid "Dv SHT_NOTE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:727
msgid "This section holds information that marks the file in some way."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:727
#, no-wrap
msgid "Dv SHT_NOBITS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:734
msgid ""
"A section of this type occupies no space in the file but otherwise resembles "
"E<.Sy SHN_PROGBITS>.  Although this section contains no bytes, the E<.Sy "
"sh_offset> member contains the conceptual file offset."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:734
#, no-wrap
msgid "Dv SHT_REL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:741
msgid ""
"This section holds relocation offsets without explicit addends, such as type "
"E<.Sy Elf32_Rel> for the 32-bit class of object files.  An object file may "
"have multiple relocation sections."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:741
#, no-wrap
msgid "Dv SHT_SHLIB"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:743
msgid "This section is reserved but has unspecified semantics."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:743
#, no-wrap
msgid "Dv SHT_DYNSYM"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:749
msgid ""
"This section holds a minimal set of dynamic linking symbols.  An object file "
"can also contain a E<.Sy SHN_SYMTAB> section."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:749
#, no-wrap
msgid "Dv SHT_LOPROC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:753
msgid ""
"This value up to and including E<.Sy SHT_HIPROC> are reserved for "
"processor-specific semantics."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:753
#, no-wrap
msgid "Dv SHT_HIPROC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:757
msgid ""
"This value down to and including E<.Sy SHT_LOPROC> are reserved for "
"processor-specific semantics."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:757
#, no-wrap
msgid "Dv SHT_LOUSER"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:760
msgid ""
"This value specifies the lower bound of the range of indices reserved for "
"application programs."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:760
#, no-wrap
msgid "Dv SHT_HIUSER"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:769
msgid ""
"This value specifies the upper bound of the range of indices reserved for "
"application programs.  Section types between E<.Sy SHT_LOUSER> and E<.Sy "
"SHT_HIUSER> may be used by the application, without conflicting with current "
"or future system-defined section types."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:771
#, no-wrap
msgid "Dv sh_flags"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:782
msgid ""
"Sections support one-bit flags that describe miscellaneous attributes.  If a "
"flag bit is set in E<.Sy sh_flags>, the attribute is E<.Dq on> for the "
"section.  Otherwise, the attribute is E<.Dq off> or does not apply.  "
"Undefined attributes are set to zero."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:784
#, no-wrap
msgid "Dv SHF_WRITE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:787
msgid "This section contains data that should be writable during process execution."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:787
#, no-wrap
msgid "Dv SHF_ALLOC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:793
msgid ""
"The section occupies memory during process execution.  Some control sections "
"do not reside in the memory image of an object file.  This attribute is off "
"for those sections."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:793
#, no-wrap
msgid "Dv SHF_EXECINSTR"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:795
msgid "The section contains executable machine instructions."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:795
#, no-wrap
msgid "Dv SHF_MASKPROC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:798
msgid ""
"All bits included in this mask are reserved for processor-specific "
"semantics."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:800
#, no-wrap
msgid "Dv sh_addr"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:804
msgid ""
"If the section will appear in the memory image of a process, this member "
"holds the address at which the section's first byte should reside.  "
"Otherwise, the member contains zero."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:804
#, no-wrap
msgid "Dv sh_offset"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:812
msgid ""
"This member's value holds the byte offset from the beginning of the file to "
"the first byte in the section.  One section type, E<.Sy SHT_NOBITS>, "
"occupies no space in the file, and its E<.Sy sh_offset> member locates the "
"conceptual placement in the file."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:812
#, no-wrap
msgid "Dv sh_size"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:823
msgid ""
"This member holds the section's size in bytes.  Unless the section type is "
"E<.Sy SHT_NOBITS>, the section occupies E<.Sy sh_size> bytes in the file.  A "
"section of type E<.Sy SHT_NOBITS> may have a non-zero size, but it occupies "
"no space in the file."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:823
#, no-wrap
msgid "Dv sh_link"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:826
msgid ""
"This member holds a section header table index link, whose interpretation "
"depends on the section type."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:826
#, no-wrap
msgid "Dv sh_info"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:829
msgid ""
"This member holds extra information, whose interpretation depends on the "
"section type."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:829
#, no-wrap
msgid "Dv sh_addralign"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:841
msgid ""
"Some sections have address alignment constraints.  If a section holds a "
"doubleword, the system must ensure doubleword alignment for the entire "
"section.  That is, the value of E<.Sy sh_addr> must be congruent to zero, "
"modulo the value of E<.Sy sh_addralign>.  Only zero and positive integral "
"powers of two are allowed.  Values of zero or one mean the section has no "
"alignment constraints."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:841
#, no-wrap
msgid "Dv sh_entsize"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:846
msgid ""
"Some sections hold a table of fixed-sized entries, such as a symbol table.  "
"For such a section, this member gives the size in bytes for each entry.  "
"This member contains zero if the section does not hold a table of fixed-size "
"entries."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:849
msgid "Various sections hold program and control information:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:850
#, no-wrap
msgid ".bss"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:862
msgid ""
"(Block Started by Symbol)  This section holds uninitialized data that "
"contributes to the program's memory image.  By definition, the system "
"initializes the data with zeros when the program begins to run.  This "
"section is of type E<.Sy SHT_NOBITS>.  The attributes types are E<.Sy "
"SHF_ALLOC> and E<.Sy SHF_WRITE>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:862
#, no-wrap
msgid ".comment"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:867
msgid ""
"This section holds version control information.  This section is of type "
"E<.Sy SHT_PROGBITS>.  No attribute types are used."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:867
#, no-wrap
msgid ".data"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:876 /usr/src/share/man/man5/elf.5:885
msgid ""
"This section holds initialized data that contribute to the program's memory "
"image.  This section is of type E<.Sy SHT_PROGBITS>.  The attribute types "
"are E<.Sy SHF_ALLOC> and E<.Sy SHF_WRITE>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:876
#, no-wrap
msgid ".data1"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:885
#, no-wrap
msgid ".debug"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:892
msgid ""
"This section holds information for symbolic debugging.  The contents are "
"unspecified.  This section is of type E<.Sy SHT_PROGBITS>.  No attribute "
"types are used."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:892
#, no-wrap
msgid ".dynamic"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:904
msgid ""
"This section holds dynamic linking information.  The section's attributes "
"will include the E<.Sy SHF_ALLOC> bit.  Whether the E<.Sy SHF_WRITE> bit is "
"set is processor-specific.  This section is of type E<.Sy SHT_DYNAMIC>.  See "
"the attributes above."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:904
#, no-wrap
msgid ".dynstr"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:911
msgid ""
"This section holds strings needed for dynamic linking, most commonly the "
"strings that represent the names associated with symbol table entries.  This "
"section is of type E<.Sy SHT_STRTAB>.  The attribute type used is E<.Sy "
"SHF_ALLOC>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:911
#, no-wrap
msgid ".dynsym"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:917
msgid ""
"This section holds the dynamic linking symbol table.  This section is of "
"type E<.Sy SHT_DYNSYM>.  The attribute used is E<.Sy SHF_ALLOC>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:917
#, no-wrap
msgid ".fini"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:928
msgid ""
"This section holds executable instructions that contribute to the process "
"termination code.  When a program exits normally the system arranges to "
"execute the code in this section.  This section is of type E<.Sy "
"SHT_PROGBITS>.  The attributes used are E<.Sy SHF_ALLOC> and E<.Sy "
"SHF_EXECINSTR>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:928
#, no-wrap
msgid ".got"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:933
msgid ""
"This section holds the global offset table.  This section is of type E<.Sy "
"SHT_PROGBITS>.  The attributes are processor-specific."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:933
#, no-wrap
msgid ".hash"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:939
msgid ""
"This section holds a symbol hash table.  This section is of type E<.Sy "
"SHT_HASH>.  The attribute used is E<.Sy SHF_ALLOC>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:939
#, no-wrap
msgid ".init"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:950
msgid ""
"This section holds executable instructions that contribute to the process "
"initialization code.  When a program starts to run the system arranges to "
"execute the code in this section before calling the main program entry "
"point.  This section is of type E<.Sy SHT_PROGBITS>.  The attributes used "
"are E<.Sy SHF_ALLOC> and E<.Sy SHF_EXECINSTR>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:950
#, no-wrap
msgid ".interp"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:960
msgid ""
"This section holds the pathname of a program interpreter.  If the file has a "
"loadable segment that includes the section, the section's attributes will "
"include the E<.Sy SHF_ALLOC> bit.  Otherwise, that bit will be off.  This "
"section is of type E<.Sy SHT_PROGBITS>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:960
#, no-wrap
msgid ".line"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:967
msgid ""
"This section holds line number information for symbolic debugging, which "
"describes the correspondence between the program source and the machine "
"code.  The contents are unspecified.  This section is of type E<.Sy "
"SHT_PROGBITS>.  No attribute types are used."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:967
#, no-wrap
msgid ".note"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:974
msgid ""
"This section holds information in the E<.Dq Note Section> format described "
"below.  This section is of type E<.Sy SHT_NOTE>.  No attribute types are "
"used."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:974
#, no-wrap
msgid ".plt"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:979
msgid ""
"This section holds the procedure linkage table.  This section is of type "
"E<.Sy SHT_PROGBITS>.  The attributes are processor-specific."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:979
#, no-wrap
msgid ".relNAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:997
msgid ""
"This section holds relocation information as described below.  If the file "
"has a loadable segment that includes relocation, the section's attributes "
"will include the E<.Sy SHF_ALLOC> bit.  Otherwise the bit will be off.  By "
"convention, E<.Dq NAME> is supplied by the section to which the relocations "
"apply.  Thus a relocation section for E<.Sy .text> normally would have the "
"name E<.Sy .rel.text>.  This section is of type E<.Sy SHT_REL>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:997
#, no-wrap
msgid ".relaNAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1015
msgid ""
"This section holds relocation information as described below.  If the file "
"has a loadable segment that includes relocation, the section's attributes "
"will include the E<.Sy SHF_ALLOC> bit.  Otherwise the bit will be off.  By "
"convention, E<.Dq NAME> is supplied by the section to which the relocations "
"apply.  Thus a relocation section for E<.Sy .text> normally would have the "
"name E<.Sy .rela.text>.  This section is of type E<.Sy SHT_RELA>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1015
#, no-wrap
msgid ".rodata"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1022
msgid ""
"This section holds read-only data that typically contributes to a "
"non-writable segment in the process image.  This section is of type E<.Sy "
"SHT_PROGBITS>.  The attribute used is E<.Sy SHF_ALLOC>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1022
#, no-wrap
msgid ".rodata1"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1029
msgid ""
"This section hold read-only data that typically contributes to a "
"non-writable segment in the process image.  This section is of type E<.Sy "
"SHT_PROGBITS>.  The attribute used is E<.Sy SHF_ALLOC>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1029
#, no-wrap
msgid ".shstrtab"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1034
msgid ""
"This section holds section names.  This section is of type E<.Sy "
"SHT_STRTAB>.  No attribute types are used."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1034
#, no-wrap
msgid ".strtab"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1045
msgid ""
"This section holds strings, most commonly the strings that represent the "
"names associated with symbol table entries.  If the file has a loadable "
"segment that includes the symbol string table, the section's attributes will "
"include the E<.Sy SHF_ALLOC> bit.  Otherwise the bit will be off.  This "
"section is of type E<.Sy SHT_STRTAB>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1045
#, no-wrap
msgid ".symtab"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1055
msgid ""
"This section holds a symbol table.  If the file has a loadable segment that "
"includes the symbol table, the section's attributes will include the E<.Sy "
"SHF_ALLOC> bit.  Otherwise the bit will be off.  This section is of type "
"E<.Sy SHT_SYMTAB>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1055
#, no-wrap
msgid ".text"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1065
msgid ""
"This section holds the E<.Dq text>, or executable instructions, of a "
"program.  This section is of type E<.Sy SHT_PROGBITS>.  The attributes used "
"are E<.Sy SHF_ALLOC> and E<.Sy SHF_EXECINSTR>."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1065
#, no-wrap
msgid ".jcr"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1068
msgid "This section holds information about Java classes that must be registered."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1068
#, no-wrap
msgid ".eh_frame"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1070
msgid "This section holds information used for C++ exception-handling."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1082
msgid ""
"String table sections hold null-terminated character sequences, commonly "
"called strings.  The object file uses these strings to represent symbol and "
"section names.  One references a string as an index into the string table "
"section.  The first byte, which is index zero, is defined to hold a null "
"character.  Similarly, a string table's last byte is defined to hold a null "
"character, ensuring null termination for all strings."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1087
msgid ""
"An object file's symbol table holds information needed to locate and "
"relocate a program's symbolic definitions and references.  A symbol table "
"index is a subscript into this array."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1096
#, no-wrap
msgid ""
"typedef struct {\n"
"\tElf32_Word      st_name;\n"
"\tElf32_Addr      st_value;\n"
"\tElf32_Word      st_size;\n"
"\tunsigned char   st_info;\n"
"\tunsigned char   st_other;\n"
"\tElf32_Half      st_shndx;\n"
"} Elf32_Sym;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1106
#, no-wrap
msgid ""
"typedef struct {\n"
"\tElf64_Word      st_name;\n"
"\tunsigned char   st_info;\n"
"\tunsigned char   st_other;\n"
"\tElf64_Half      st_shndx;\n"
"\tElf64_Addr      st_value;\n"
"\tElf64_Xword     st_size;\n"
"} Elf64_Sym;\n"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1109
#, no-wrap
msgid "Dv st_name"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1116
msgid ""
"This member holds an index into the object file's symbol string table, which "
"holds character representations of the symbol names.  If the value is "
"non-zero, it represents a string table index that gives the symbol name.  "
"Otherwise, the symbol table has no name."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1116
#, no-wrap
msgid "Dv st_value"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1118
msgid "This member gives the value of the associated symbol."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1118
#, no-wrap
msgid "Dv st_size"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1122
msgid ""
"Many symbols have associated sizes.  This member holds zero if the symbol "
"has no size or an unknown size."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1122
#, no-wrap
msgid "Dv st_info"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1124
msgid "This member specifies the symbol's type and binding attributes:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1126
#, no-wrap
msgid "Dv STT_NOTYPE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1128
msgid "The symbol's type is not defined."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1128
#, no-wrap
msgid "Dv STT_OBJECT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1130
msgid "The symbol is associated with a data object."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1130
#, no-wrap
msgid "Dv STT_FUNC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1132
msgid "The symbol is associated with a function or other executable code."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1132
#, no-wrap
msgid "Dv STT_SECTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1138
msgid ""
"The symbol is associated with a section.  Symbol table entries of this type "
"exist primarily for relocation and normally have E<.Sy STB_LOCAL> bindings."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1138
#, no-wrap
msgid "Dv STT_FILE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1148
msgid ""
"By convention the symbol's name gives the name of the source file associated "
"with the object file.  A file symbol has E<.Sy STB_LOCAL> bindings, its "
"section index is E<.Sy SHN_ABS>, and it precedes the other E<.Sy STB_LOCAL> "
"symbols of the file, if it is present."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1148
#, no-wrap
msgid "Dv STT_LOPROC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1152
msgid ""
"This value up to and including E<.Sy STT_HIPROC> are reserved for "
"processor-specific semantics."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1152
#, no-wrap
msgid "Dv STT_HIPROC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1156
msgid ""
"This value down to and including E<.Sy STT_LOPROC> are reserved for "
"processor-specific semantics."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1159
#, no-wrap
msgid "Dv STB_LOCAL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1164
msgid ""
"Local symbols are not visible outside the object file containing their "
"definition.  Local symbols of the same name may exist in multiple file "
"without interfering with each other."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1164
#, no-wrap
msgid "Dv STB_GLOBAL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1169
msgid ""
"Global symbols are visible to all object files being combined.  One file's "
"definition of a global symbol will satisfy another file's undefined "
"reference to the same symbol."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1169
#, no-wrap
msgid "Dv STB_WEAK"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1172
msgid ""
"Weak symbols resemble global symbols, but their definitions have lower "
"precedence."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1172
#, no-wrap
msgid "Dv STB_LOPROC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1176
msgid ""
"This value up to and including E<.Sy STB_HIPROC> are reserved for "
"processor-specific semantics."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1176
#, no-wrap
msgid "Dv STB_HIPROC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1180
msgid ""
"This value down to and including E<.Sy STB_LOPROC> are reserved for "
"processor-specific semantics."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1182
msgid "There are macros for packing and unpacking the binding and type fields:"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1184 /usr/src/share/man/man5/elf.5:1190 /usr/src/share/man/man5/elf.5:1196
#, no-wrap
msgid "Xo"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1190
msgid ""
"E<.Fn ELF32_ST_BIND info> E<.Xc> or E<.Fn ELF64_ST_BIND info> extract a "
"binding from an st_info value."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1196
msgid ""
"E<.Fn ELF64_ST_TYPE info> E<.Xc> or E<.Fn ELF32_ST_TYPE info> extract a type "
"from an st_info value."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1202
msgid ""
"E<.Fn ELF32_ST_INFO bind type> E<.Xc> or E<.Fn ELF64_ST_INFO bind type> "
"convert a binding and a type into an st_info value."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1205
#, no-wrap
msgid "Dv st_other"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1207
msgid "This member currently holds zero and has no defined meaning."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1207
#, no-wrap
msgid "Dv st_shndx"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1213
msgid ""
"Every symbol table entry is E<.Dq defined> in relation to some section.  "
"This member holds the relevant section header table index."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1222
msgid ""
"Relocation is the process of connecting symbolic references with symbolic "
"definitions.  Relocatable files must have information that describes how to "
"modify their section contents, thus allowing executable and shared object "
"files to hold the right information for a process' program image.  "
"Relocation entries are these data."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1224
msgid "Relocation structures that do not need an addend:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1229
#, no-wrap
msgid ""
"typedef struct {\n"
"\tElf32_Addr      r_offset;\n"
"\tElf32_Word      r_info;\n"
"} Elf32_Rel;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1235
#, no-wrap
msgid ""
"typedef struct {\n"
"\tElf64_Addr      r_offset;\n"
"\tElf64_Xword     r_info;\n"
"} Elf64_Rel;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1238
msgid "Relocation structures that need an addend:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1244
#, no-wrap
msgid ""
"typedef struct {\n"
"\tElf32_Addr      r_offset;\n"
"\tElf32_Word      r_info;\n"
"\tElf32_Sword     r_addend;\n"
"} Elf32_Rela;\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1251
#, no-wrap
msgid ""
"typedef struct {\n"
"\tElf64_Addr      r_offset;\n"
"\tElf64_Xword     r_info;\n"
"\tElf64_Sxword    r_addend;\n"
"} Elf64_Rela;\n"
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1254
#, no-wrap
msgid "Dv r_offset"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1261
msgid ""
"This member gives the location at which to apply the relocation action.  For "
"a relocatable file, the value is the byte offset from the beginning of the "
"section to the storage unit affected by the relocation.  For an executable "
"file or shared object, the value is the virtual address of the storage unit "
"affected by the relocation."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1261
#, no-wrap
msgid "Dv r_info"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1275
msgid ""
"This member gives both the symbol table index with respect to which the "
"relocation must be made and the type of relocation to apply.  Relocation "
"types are processor-specific.  When the text refers to a relocation entry's "
"relocation type or symbol table index, it means the result of applying E<.Sy "
"ELF_[32|64]_R_TYPE> or E<.Sy ELF[32|64]_R_SYM>, respectively to the entry's "
"E<.Sy r_info> member."
msgstr ""

#. type: It
#: /usr/src/share/man/man5/elf.5:1275
#, no-wrap
msgid "Dv r_addend"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1278
msgid ""
"This member specifies a constant addend used to compute the value to be "
"stored into the relocatable field."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man5/elf.5:1279
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1301
msgid ""
"E<.Xr as 1>, E<.Xr gdb 1>, E<.Xr ld 1>, E<.Xr objdump 1>, E<.Xr readelf 1>, "
"E<.Xr execve 2>, E<.Xr ar 5>, E<.Xr core 5> E<.Rs> E<.%A Hewlett Packard> "
"E<.%B Elf-64 Object File Format> E<.Re> E<.Rs> E<.%A Santa Cruz Operation> "
"E<.%B System V Application Binary Interface> E<.Re> E<.Rs> E<.%A Unix System "
"Laboratories> E<.%T Object Files> E<.%B \"Executable and Linking Format "
"(ELF)\"> E<.Re>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man5/elf.5:1301
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1307
msgid ""
"The ELF header files made their appearance in E<.Fx 2.2.6>.  ELF in itself "
"first appeared in E<.At V>.  The ELF format is an adopted standard."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man5/elf.5:1307
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man5/elf.5:1313
msgid ""
"This manual page was written by E<.An Jeroen Ruigrok van der Werven Aq Mt "
"asmodai@FreeBSD.org> with inspiration from BSDi's E<.Bsx> E<.Nm> manpage."
msgstr ""
