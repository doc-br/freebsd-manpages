# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:32-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1
#, no-wrap
msgid "2015-03-02"
msgstr ""

#. type: Dt
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2
#, no-wrap
msgid "BINUTILS 7"
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:6
msgid "E<.Nm binutils>"
msgstr ""

#. type: Nd
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:6
#, no-wrap
msgid "GNU Binary Utilities"
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:7
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:10
msgid ""
"This brief manual contains documentation for the GNU binary utilities "
"version \"2.17.50 [FreeBSD] 2007-07-03\":"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:14
msgid ""
"This document is distributed under the terms of the GNU Free Documentation "
"License. A copy of the license is included in the section entitled \"GNU "
"Free Documentation License\"."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:15
#, no-wrap
msgid "ar"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:19
#, no-wrap
msgid ""
"ar [-]p[mod [relpos] [count]] archive [member...]\n"
"ar -M [ E<lt>mri-script ]\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:29
msgid ""
"The GNU E<.Xr ar> program creates, modifies, and extracts from archives. An "
"E<.Em archive> is a single file holding a collection of other files in a "
"structure that makes it possible to retrieve the original individual files "
"(called E<.Em members> of the archive)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:32
msgid ""
"The original files' contents, mode (permissions), timestamp, owner, and "
"group are preserved in the archive, and can be restored on extraction."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:42
msgid ""
"GNU E<.Xr ar> can maintain archives whose members have names of any length; "
"however, depending on how E<.Xr ar> is configured on your system, a limit on "
"member-name length may be imposed for compatibility with archive formats "
"maintained with other tools. If it exists, the limit is often 15 characters "
"(typical of formats related to a.out)  or 16 characters (typical of formats "
"related to coff)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:48
msgid ""
"E<.Xr ar> is considered a binary utility because archives of this sort are "
"most often used as E<.Em libraries> holding commonly needed subroutines."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:60
msgid ""
"E<.Xr ar> creates an index to the symbols defined in relocatable object "
"modules in the archive when you specify the modifier E<.Li s>.  Once "
"created, this index is updated in the archive whenever E<.Xr ar> makes a "
"change to its contents (save for the E<.Li q> update operation). An archive "
"with such an index speeds up linking to the library, and allows routines in "
"the library to call each other without regard to their placement in the "
"archive."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:70
msgid ""
"You may use E<.Li nm -s> or E<.Li nm --print-armap> to list this index "
"table. If an archive lacks the table, another form of E<.Xr ar> called E<.Xr "
"ranlib> can be used to add just the table."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:80
msgid ""
"GNU E<.Xr ar> is designed to be compatible with two different "
"facilities. You can control its activity using command-line options, like "
"the different varieties of E<.Xr ar> on Unix systems; or, if you specify the "
"single command-line option E<.Op -M>, you can control it with a script "
"supplied via standard input, like the MRI \\(lqlibrarian\\(rq program."
msgstr ""

#. type: Ss
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:81
#, no-wrap
msgid "Controlling Xr ar on the Command Line"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:84
#, no-wrap
msgid "ar [-X32_64] [-]p[mod [relpos] [count]] archive [member...]\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:95
msgid ""
"When you use E<.Xr ar> in the Unix style, E<.Xr ar> insists on at least two "
"arguments to execute: one keyletter specifying the E<.Em operation> "
"(optionally accompanied by other keyletters specifying E<.Em modifiers>), "
"and the archive name to act on."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:99
msgid ""
"Most operations can also accept further E<.Va member> arguments, specifying "
"particular files to operate on."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:107
msgid ""
"GNU E<.Xr ar> allows you to mix the operation code E<.Va p> and modifier "
"flags E<.Va mod> in any order, within the first command-line argument."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:109
msgid "If you wish, you may begin the first command-line argument with a dash."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:114
msgid ""
"The E<.Va p> keyletter specifies what operation to execute; it may be any of "
"the following, but you must specify only one of them:"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:116
#, no-wrap
msgid "d"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:121
msgid ""
"E<.Em Delete> modules from the archive. Specify the names of modules to be "
"deleted as E<.Va member> \\&...; the archive is untouched if you specify no "
"files to delete."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:127
msgid ""
"If you specify the E<.Li v> modifier, E<.Xr ar> lists each module as it is "
"deleted."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:128
#, no-wrap
msgid "m"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:132
msgid "Use this operation to E<.Em move> members in an archive."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:135
msgid ""
"The ordering of members in an archive can make a difference in how programs "
"are linked using the library, if a symbol is defined in more than one "
"member."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:148
msgid ""
"If no modifiers are used with E<.Li m>, any members you name in the E<.Va "
"member> arguments are moved to the E<.Em end> of the archive; you can use "
"the E<.Li a>, E<.Li b>, or E<.Li i> modifiers to move them to a specified "
"place instead."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:149
#, no-wrap
msgid "p"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:155
msgid ""
"E<.Em Print> the specified members of the archive, to the standard output "
"file. If the E<.Li v> modifier is specified, show the member name before "
"copying its contents to standard output."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:159
msgid ""
"If you specify no E<.Va member> arguments, all the files in the archive are "
"printed."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:160
#, no-wrap
msgid "q"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:167
msgid ""
"E<.Em Quick append>; Historically, add the files E<.Va member> \\&...to the "
"end of E<.Va archive>, without checking for replacement."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:176
msgid ""
"The modifiers E<.Li a>, E<.Li b>, and E<.Li i> do E<.Em not> affect this "
"operation; new members are always placed at the end of the archive."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:182
msgid "The modifier E<.Li v> makes E<.Xr ar> list each file as it is appended."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:189
msgid ""
"Since the point of this operation is speed, the archive's symbol table index "
"is not updated, even if it already existed; you can use E<.Li ar s> or E<.Xr "
"ranlib> explicitly to update the symbol table index."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:197
msgid ""
"However, too many different systems assume quick append rebuilds the index, "
"so GNU E<.Xr ar> implements E<.Li q> as a synonym for E<.Li r>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:198
#, no-wrap
msgid "r"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:209
msgid ""
"Insert the files E<.Va member> \\&...into E<.Va archive> (with E<.Em "
"replacement>).  This operation differs from E<.Li q> in that any previously "
"existing members are deleted if their names match those being added."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:216
msgid ""
"If one of the files named in E<.Va member> \\&...does not exist, E<.Xr ar> "
"displays an error message, and leaves undisturbed any existing members of "
"the archive matching that name."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:224
msgid ""
"By default, new members are added at the end of the file; but you may use "
"one of the modifiers E<.Li a>, E<.Li b>, or E<.Li i> to request placement "
"relative to some existing member."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:233
msgid ""
"The modifier E<.Li v> used with this operation elicits a line of output for "
"each file inserted, along with one of the letters E<.Li a> or E<.Li r> to "
"indicate whether the file was appended (no old member deleted) or replaced."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:234
#, no-wrap
msgid "t"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:246
msgid ""
"Display a E<.Em table> listing the contents of E<.Va archive>, or those of "
"the files listed in E<.Va member> \\&...that are present in the "
"archive. Normally only the member name is shown; if you also want to see the "
"modes (permissions), timestamp, owner, group, and size, you can request that "
"by also specifying the E<.Li v> modifier."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:250
msgid "If you do not specify a E<.Va member>, all files in the archive are listed."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:259
msgid ""
"If there is more than one file with the same name (say, E<.Li fie>)  in an "
"archive (say E<.Li b.a>), E<.Li ar t b.a fie> lists only the first instance; "
"to see them all, you must ask for a complete listing---in our example, E<.Li "
"ar t b.a>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:260
#, no-wrap
msgid "x"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:269
msgid ""
"E<.Em Extract> members (named E<.Va member>)  from the archive. You can use "
"the E<.Li v> modifier with this operation, to request that E<.Xr ar> list "
"each name as it extracts it."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:273
msgid ""
"If you do not specify a E<.Va member>, all files in the archive are "
"extracted."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:280
msgid ""
"A number of modifiers ( E<.Va mod>)  may immediately follow the E<.Va p> "
"keyletter, to specify variations on an operation's behavior:"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:282
#, no-wrap
msgid "a"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:292
msgid ""
"Add new files E<.Em after> an existing member of the archive. If you use the "
"modifier E<.Li a>, the name of an existing archive member must be present as "
"the E<.Va relpos> argument, before the E<.Va archive> specification."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:293
#, no-wrap
msgid "b"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:304
msgid ""
"Add new files E<.Em before> an existing member of the archive. If you use "
"the modifier E<.Li b>, the name of an existing archive member must be "
"present as the E<.Va relpos> argument, before the E<.Va archive> "
"specification. (same as E<.Li i>)."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:305
#, no-wrap
msgid "c"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:312
msgid ""
"E<.Em Create> the archive. The specified E<.Va archive> is always created if "
"it did not exist, when you request an update. But a warning is issued unless "
"you specify in advance that you expect to create it, by using this modifier."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:313
#, no-wrap
msgid "f"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:322
msgid ""
"Truncate names in the archive. GNU E<.Xr ar> will normally permit file names "
"of any length. This will cause it to create archives which are not "
"compatible with the native E<.Xr ar> program on some systems. If this is a "
"concern, the E<.Li f> modifier may be used to truncate file names when "
"putting them in the archive."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:323
#, no-wrap
msgid "i"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:334
msgid ""
"Insert new files E<.Em before> an existing member of the archive. If you use "
"the modifier E<.Li i>, the name of an existing archive member must be "
"present as the E<.Va relpos> argument, before the E<.Va archive> "
"specification. (same as E<.Li b>)."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:335
#, no-wrap
msgid "l"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:337
msgid "This modifier is accepted but not used."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:338 /usr/src/contrib/binutils/binutils/doc/binutils.7:733
#, no-wrap
msgid "N"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:345
msgid ""
"Uses the E<.Va count> parameter. This is used if there are multiple entries "
"in the archive with the same name. Extract or delete instance E<.Va count> "
"of the given name from the archive."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:346
#, no-wrap
msgid "o"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:351
msgid ""
"Preserve the E<.Em original> dates of members when extracting them. If you "
"do not specify this modifier, files extracted from the archive are stamped "
"with the time of extraction."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:352
#, no-wrap
msgid "P"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:360
msgid ""
"Use the full path name when matching names in the archive. GNU E<.Xr ar> can "
"not create an archive with a full path name (such archives are not POSIX "
"complaint), but other archive creators can. This option will cause GNU E<.Xr "
"ar> to match file names using a complete path name, which can be convenient "
"when extracting a single file from an archive created by another tool."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:361
#, no-wrap
msgid "s"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:369
msgid ""
"Write an object-file index into the archive, or update an existing one, even "
"if no other change is made to the archive. You may use this modifier flag "
"either with any operation, or alone. Running E<.Li ar s> on an archive is "
"equivalent to running E<.Li ranlib> on it."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:370 /usr/src/contrib/binutils/binutils/doc/binutils.7:739
#, no-wrap
msgid "S"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:380
msgid ""
"Do not generate an archive symbol table. This can speed up building a large "
"library in several steps. The resulting archive can not be used with the "
"linker.  In order to build a symbol table, you must omit the E<.Li S> "
"modifier on the last execution of E<.Li ar>, or you must run E<.Li ranlib> "
"on the archive."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:381
#, no-wrap
msgid "u"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:396
msgid ""
"Normally, E<.Li ar r> \\&...inserts all files listed into the archive. If "
"you would like to insert E<.Em only> those of the files you list that are "
"newer than existing members of the same names, use this modifier. The E<.Li "
"u> modifier is allowed only for the operation E<.Li r> (replace). In "
"particular, the combination E<.Li qu> is not allowed, since checking the "
"timestamps would lose any speed advantage from the operation E<.Li q>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:397
#, no-wrap
msgid "v"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:404
msgid ""
"This modifier requests the E<.Em verbose> version of an operation. Many "
"operations display additional information, such as filenames processed, when "
"the modifier E<.Li v> is appended."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:405 /usr/src/contrib/binutils/binutils/doc/binutils.7:748
#, no-wrap
msgid "V"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:408
msgid "This modifier shows the version number of E<.Xr ar>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:423
msgid ""
"E<.Xr ar> ignores an initial option spelt E<.Li -X32_64>, for compatibility "
"with AIX. The behaviour produced by this option is the default for GNU E<.Xr "
"ar>.  E<.Xr ar> does not support any of the other E<.Li -X> options; in "
"particular, it does not support E<.Op -X32> which is the default for AIX "
"E<.Xr ar>."
msgstr ""

#. type: Ss
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:424
#, no-wrap
msgid "Controlling Xr ar with a Script"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:427
#, no-wrap
msgid "ar -M [ E<lt>script ]\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:445
msgid ""
"If you use the single command-line option E<.Li -M> with E<.Xr ar>, you can "
"control its operation with a rudimentary command language. This form of "
"E<.Xr ar> operates interactively if standard input is coming directly from a "
"terminal.  During interactive use, E<.Xr ar> prompts for input (the prompt "
"is E<.Li AR E<gt>>), and continues executing even after errors. If you "
"redirect standard input to a script file, no prompts are issued, and E<.Xr "
"ar> abandons execution (with a nonzero exit code) on any error."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:455
msgid ""
"The E<.Xr ar> command language is E<.Em not> designed to be equivalent to "
"the command-line options; in fact, it provides somewhat less control over "
"archives. The only purpose of the command language is to ease the transition "
"to GNU E<.Xr ar> for developers who already have scripts written for the MRI "
"\\(lqlibrarian\\(rq program."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:459
msgid "The syntax for the E<.Xr ar> command language is straightforward:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:466
msgid ""
"commands are recognized in upper or lower case; for example, E<.Li LIST> is "
"the same as E<.Li list>.  In the following descriptions, commands are shown "
"in upper case for clarity."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:469
msgid "a single command may appear on each line; it is the first word on the line."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:472
msgid "empty lines are allowed, and have no effect."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:479
msgid ""
"comments are allowed; text after either of the characters E<.Li *> or "
"E<.Li>; is ignored."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:485
msgid ""
"Whenever you use a list of names as part of the argument to an E<.Xr ar> "
"command, you can separate the individual names with either commas or "
"blanks.  Commas are shown in the explanations below, for clarity."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:492
msgid ""
"E<.Li +> is used as a line continuation character; if E<.Li +> appears at "
"the end of a line, the text on the following line is considered part of the "
"current command."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:499
msgid ""
"Here are the commands you can use in E<.Xr ar> scripts, or when using E<.Xr "
"ar> interactively. Three of them have special significance:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:506
msgid ""
"E<.Li OPEN> or E<.Li CREATE> specify a E<.Em current archive>, which is a "
"temporary file required for most of the other commands."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:511
msgid ""
"E<.Li SAVE> commits the changes so far specified by the script. Prior to "
"E<.Li SAVE>, commands affect only the temporary copy of the current archive."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:513
#, no-wrap
msgid "ADDLIB Va archive"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:514
#, no-wrap
msgid "ADDLIB Va archive ( Va module, Va module, ... Va module)"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:522
msgid ""
"Add all the contents of E<.Va archive> (or, if specified, each named E<.Va "
"module> from E<.Va archive>)  to the current archive."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:527 /usr/src/contrib/binutils/binutils/doc/binutils.7:537 /usr/src/contrib/binutils/binutils/doc/binutils.7:567 /usr/src/contrib/binutils/binutils/doc/binutils.7:609 /usr/src/contrib/binutils/binutils/doc/binutils.7:624 /usr/src/contrib/binutils/binutils/doc/binutils.7:646 /usr/src/contrib/binutils/binutils/doc/binutils.7:668
msgid "Requires prior use of E<.Li OPEN> or E<.Li CREATE>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:528
#, no-wrap
msgid "ADDMOD Va member, Va member, ... Va member"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:532
msgid "Add each named E<.Va member> as a module in the current archive."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:538
#, no-wrap
msgid "CLEAR"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:543
msgid ""
"Discard the contents of the current archive, canceling the effect of any "
"operations since the last E<.Li SAVE>.  May be executed (with no effect) "
"even if no current archive is specified."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:544
#, no-wrap
msgid "CREATE Va archive"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:556
msgid ""
"Creates an archive, and makes it the current archive (required for many "
"other commands). The new archive is created with a temporary name; it is not "
"actually saved as E<.Va archive> until you use E<.Li SAVE>.  You can "
"overwrite existing archives; similarly, the contents of any existing file "
"named E<.Va archive> will not be destroyed until E<.Li SAVE>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:557
#, no-wrap
msgid "DELETE Va module, Va module, ... Va module"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:562
msgid ""
"Delete each listed E<.Va module> from the current archive; equivalent to "
"E<.Li ar -d Va archive Va module ... Va module>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:568
#, no-wrap
msgid "DIRECTORY Va archive ( Va module, ... Va module)"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:569
#, no-wrap
msgid "DIRECTORY Va archive ( Va module, ... Va module) Va outputfile"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:581
msgid ""
"List each named E<.Va module> present in E<.Va archive>.  The separate "
"command E<.Li VERBOSE> specifies the form of the output: when verbose output "
"is off, output is like that of E<.Li ar -t Va archive Va module...>.  When "
"verbose output is on, the listing is like E<.Li ar -tv Va archive Va "
"module...>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:587
msgid ""
"Output normally goes to the standard output stream; however, if you specify "
"E<.Va outputfile> as a final argument, E<.Xr ar> directs the output to that "
"file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:588
#, no-wrap
msgid "END"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:597
msgid ""
"Exit from E<.Xr ar>, with a E<.Li 0> exit code to indicate successful "
"completion. This command does not save the output file; if you have changed "
"the current archive since the last E<.Li SAVE> command, those changes are "
"lost."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:598
#, no-wrap
msgid "EXTRACT Va module, Va module, ... Va module"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:604
msgid ""
"Extract each named E<.Va module> from the current archive, writing them into "
"the current directory as separate files. Equivalent to E<.Li ar -x Va "
"archive Va module...>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:610
#, no-wrap
msgid "LIST"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:619
msgid ""
"Display full contents of the current archive, in \\(lqverbose\\(rq style "
"regardless of the state of E<.Li VERBOSE>.  The effect is like E<.Li ar tv "
"Va archive>.  (This single command is a GNU E<.Xr ar> enhancement, rather "
"than present for MRI compatibility.)"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:625
#, no-wrap
msgid "OPEN Va archive"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:632
msgid ""
"Opens an existing archive for use as the current archive (required for many "
"other commands). Any changes as the result of subsequent commands will not "
"actually affect E<.Va archive> until you next use E<.Li SAVE>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:633
#, no-wrap
msgid "REPLACE Va module, Va module, ... Va module"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:641
msgid ""
"In the current archive, replace each existing E<.Va module> (named in the "
"E<.Li REPLACE> arguments) from files in the current working directory. To "
"execute this command without errors, both the file, and the module in the "
"current archive, must exist."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:647
#, no-wrap
msgid "VERBOSE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:655
msgid ""
"Toggle an internal flag governing the output from E<.Li DIRECTORY>.  When "
"the flag is on, E<.Li DIRECTORY> output matches output from E<.Li ar -tv> "
"\\&...\\&."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:656
#, no-wrap
msgid "SAVE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:663
msgid ""
"Commit your changes to the current archive, and actually save it as a file "
"with the name specified in the last E<.Li CREATE> or E<.Li OPEN> command."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:670
#, no-wrap
msgid "nm"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:682
#, no-wrap
msgid ""
"nm [-a|--debug-syms] [-g|--extern-only]\n"
"   [-B] [-C|--demangle[=style]] [-D|--dynamic]\n"
"   [-S|--print-size] [-s|--print-armap]\n"
"   [-A|-o|--print-file-name][--special-syms]\n"
"   [-n|-v|--numeric-sort] [-p|--no-sort]\n"
"   [-r|--reverse-sort] [--size-sort] [-u|--undefined-only]\n"
"   [-t radix|--radix=radix] [-P|--portability]\n"
"   [--target=bfdname] [-fformat|--format=format]\n"
"   [--defined-only] [-l|--line-numbers] [--no-demangle]\n"
"   [-V|--version] [-X 32_64] [--help]  [objfile...]\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:692
msgid ""
"GNU E<.Xr nm> lists the symbols from object files E<.Va objfile> "
"\\&...\\&. If no object files are listed as arguments, E<.Xr nm> assumes the "
"file E<.Pa a.out>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:696
msgid "For each symbol, E<.Xr nm> shows:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:701
msgid ""
"The symbol value, in the radix selected by options (see below), or "
"hexadecimal by default."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:706
msgid ""
"The symbol type. At least the following types are used; others are, as well, "
"depending on the object file format. If lowercase, the symbol is local; if "
"uppercase, the symbol is global (external)."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:708
#, no-wrap
msgid "A"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:710
msgid "The symbol's value is absolute, and will not be changed by further linking."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:711
#, no-wrap
msgid "B"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:713
msgid "The symbol is in the uninitialized data section (known as BSS)."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:714
#, no-wrap
msgid "C"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:720
msgid ""
"The symbol is common. Common symbols are uninitialized data. When linking, "
"multiple common symbols may appear with the same name. If the symbol is "
"defined anywhere, the common symbols are treated as undefined "
"references. For more details on common symbols, see the discussion of "
"--warn-common in Options,,Linker options,ld.info,The GNU linker."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:721
#, no-wrap
msgid "D"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:723
msgid "The symbol is in the initialized data section."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:724
#, no-wrap
msgid "G"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:728
msgid ""
"The symbol is in an initialized data section for small objects. Some object "
"file formats permit more efficient access to small data objects, such as a "
"global int variable as opposed to a large global array."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:729
#, no-wrap
msgid "I"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:732
msgid ""
"The symbol is an indirect reference to another symbol. This is a GNU "
"extension to the a.out object file format which is rarely used."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:735
msgid "The symbol is a debugging symbol."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:736
#, no-wrap
msgid "R"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:738
msgid "The symbol is in a read only data section."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:741
msgid "The symbol is in an uninitialized data section for small objects."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:742
#, no-wrap
msgid "T"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:744
msgid "The symbol is in the text (code) section."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:745
#, no-wrap
msgid "U"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:747
msgid "The symbol is undefined."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:753
msgid ""
"The symbol is a weak object. When a weak defined symbol is linked with a "
"normal defined symbol, the normal defined symbol is used with no error. When "
"a weak undefined symbol is linked and the symbol is not defined, the value "
"of the weak symbol becomes zero with no error."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:754
#, no-wrap
msgid "W"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:761
msgid ""
"The symbol is a weak symbol that has not been specifically tagged as a weak "
"object symbol. When a weak defined symbol is linked with a normal defined "
"symbol, the normal defined symbol is used with no error. When a weak "
"undefined symbol is linked and the symbol is not defined, the value of the "
"symbol is determined in a system-specific manner without error. On some "
"systems, uppercase indicates that a default value has been specified."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:762 /usr/src/contrib/binutils/binutils/doc/binutils.7:2438
#, no-wrap
msgid "-"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:767
msgid ""
"The symbol is a stabs symbol in an a.out object file. In this case, the next "
"values printed are the stabs other field, the stabs desc field, and the stab "
"type. Stabs symbols are used to hold debugging information. For more "
"information, see Top,Stabs,Stabs Overview,stabs.info, The \\(lqstabs\\(rq "
"debug format."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:768
#, no-wrap
msgid "?"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:770
msgid "The symbol type is unknown, or object file format specific."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:774
msgid "The symbol name."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:777 /usr/src/contrib/binutils/binutils/doc/binutils.7:2967
msgid ""
"The long and short forms of options, shown here as alternatives, are "
"equivalent."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:779 /usr/src/contrib/binutils/binutils/doc/binutils.7:2312 /usr/src/contrib/binutils/binutils/doc/binutils.7:3185 /usr/src/contrib/binutils/binutils/doc/binutils.7:3855 /usr/src/contrib/binutils/binutils/doc/binutils.7:4126
#, no-wrap
msgid "-A"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:780 /usr/src/contrib/binutils/binutils/doc/binutils.7:2364 /usr/src/contrib/binutils/binutils/doc/binutils.7:2456 /usr/src/contrib/binutils/binutils/doc/binutils.7:3247
#, no-wrap
msgid "-o"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:781 /usr/src/contrib/binutils/binutils/doc/binutils.7:2443
#, no-wrap
msgid "--print-file-name"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:785
msgid ""
"Precede each symbol by the name of the input file (or archive member) in "
"which it was found, rather than identifying the input file once only, before "
"all of its symbols."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:786 /usr/src/contrib/binutils/binutils/doc/binutils.7:1812 /usr/src/contrib/binutils/binutils/doc/binutils.7:2436 /usr/src/contrib/binutils/binutils/doc/binutils.7:3181 /usr/src/contrib/binutils/binutils/doc/binutils.7:3819 /usr/src/contrib/binutils/binutils/doc/binutils.7:4056
#, no-wrap
msgid "-a"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:787
#, no-wrap
msgid "--debug-syms"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:789
msgid ""
"Display all symbols, even debugger-only symbols; normally these are not "
"listed."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:790 /usr/src/contrib/binutils/binutils/doc/binutils.7:2313
#, no-wrap
msgid "-B"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:795
msgid "The same as E<.Op --format=bsd> (for compatibility with the MIPS E<.Xr nm>)."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:796 /usr/src/contrib/binutils/binutils/doc/binutils.7:1857 /usr/src/contrib/binutils/binutils/doc/binutils.7:2974
#, no-wrap
msgid "-C"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:797 /usr/src/contrib/binutils/binutils/doc/binutils.7:1858 /usr/src/contrib/binutils/binutils/doc/binutils.7:2975
#, no-wrap
msgid "--demangle[= Va style]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:807 /usr/src/contrib/binutils/binutils/doc/binutils.7:1868 /usr/src/contrib/binutils/binutils/doc/binutils.7:2985
msgid ""
"Decode ( E<.Em demangle>)  low-level symbol names into user-level "
"names. Besides removing any initial underscore prepended by the system, this "
"makes C++ function names readable.  Different compilers have different "
"mangling styles. The optional demangling style argument can be used to "
"choose an appropriate demangling style for your compiler.See Section E<.Dq "
"c++filt>, for more information on demangling."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:808
#, no-wrap
msgid "--no-demangle"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:810
msgid "Do not demangle low-level symbol names. This is the default."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:811 /usr/src/contrib/binutils/binutils/doc/binutils.7:1891 /usr/src/contrib/binutils/binutils/doc/binutils.7:4130
#, no-wrap
msgid "-D"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:812 /usr/src/contrib/binutils/binutils/doc/binutils.7:4119
#, no-wrap
msgid "--dynamic"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:815
msgid ""
"Display the dynamic symbols rather than the normal symbols. This is only "
"meaningful for dynamic objects, such as certain types of shared libraries."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:816
#, no-wrap
msgid "-f Va format"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:817 /usr/src/contrib/binutils/binutils/doc/binutils.7:2852
#, no-wrap
msgid "--format= Va format"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:830
msgid ""
"Use the output format E<.Va format>, which can be E<.Li bsd>, E<.Li sysv>, "
"or E<.Li posix>.  The default is E<.Li bsd>.  Only the first character of "
"E<.Va format> is significant; it can be either upper or lower case."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:831 /usr/src/contrib/binutils/binutils/doc/binutils.7:1139 /usr/src/contrib/binutils/binutils/doc/binutils.7:1869 /usr/src/contrib/binutils/binutils/doc/binutils.7:2587 /usr/src/contrib/binutils/binutils/doc/binutils.7:4085
#, no-wrap
msgid "-g"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:832
#, no-wrap
msgid "--extern-only"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:834
msgid "Display only external symbols."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:835 /usr/src/contrib/binutils/binutils/doc/binutils.7:1961 /usr/src/contrib/binutils/binutils/doc/binutils.7:4073
#, no-wrap
msgid "-l"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:836 /usr/src/contrib/binutils/binutils/doc/binutils.7:1962
#, no-wrap
msgid "--line-numbers"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:842
msgid ""
"For each symbol, use debugging information to try to find a filename and "
"line number. For a defined symbol, look for the line number of the address "
"of the symbol. For an undefined symbol, look for the line number of a "
"relocation entry which refers to the symbol. If line number information can "
"be found, print it after the other symbol information."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:843 /usr/src/contrib/binutils/binutils/doc/binutils.7:2831 /usr/src/contrib/binutils/binutils/doc/binutils.7:3241 /usr/src/contrib/binutils/binutils/doc/binutils.7:3895 /usr/src/contrib/binutils/binutils/doc/binutils.7:4105
#, no-wrap
msgid "-n"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:844 /usr/src/contrib/binutils/binutils/doc/binutils.7:1740 /usr/src/contrib/binutils/binutils/doc/binutils.7:2279 /usr/src/contrib/binutils/binutils/doc/binutils.7:2503 /usr/src/contrib/binutils/binutils/doc/binutils.7:2732 /usr/src/contrib/binutils/binutils/doc/binutils.7:3278 /usr/src/contrib/binutils/binutils/doc/binutils.7:3508 /usr/src/contrib/binutils/binutils/doc/binutils.7:3912 /usr/src/contrib/binutils/binutils/doc/binutils.7:4154
#, no-wrap
msgid "-v"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:845
#, no-wrap
msgid "--numeric-sort"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:848
msgid ""
"Sort symbols numerically by their addresses, rather than alphabetically by "
"their names."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:849 /usr/src/contrib/binutils/binutils/doc/binutils.7:1258 /usr/src/contrib/binutils/binutils/doc/binutils.7:2123 /usr/src/contrib/binutils/binutils/doc/binutils.7:2619 /usr/src/contrib/binutils/binutils/doc/binutils.7:2835 /usr/src/contrib/binutils/binutils/doc/binutils.7:3864
#, no-wrap
msgid "-p"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:850
#, no-wrap
msgid "--no-sort"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:852
msgid ""
"Do not bother to sort the symbols in any order; print them in the order "
"encountered."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:853
#, no-wrap
msgid "-P"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:854
#, no-wrap
msgid "--portability"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:858
msgid ""
"Use the POSIX.2 standard output format instead of the default "
"format. Equivalent to E<.Li -f posix>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:859 /usr/src/contrib/binutils/binutils/doc/binutils.7:1135 /usr/src/contrib/binutils/binutils/doc/binutils.7:2147 /usr/src/contrib/binutils/binutils/doc/binutils.7:2588 /usr/src/contrib/binutils/binutils/doc/binutils.7:4079
#, no-wrap
msgid "-S"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:860
#, no-wrap
msgid "--print-size"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:864
msgid ""
"Print size, not the value, of defined symbols for the E<.Li bsd> output "
"format."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:865 /usr/src/contrib/binutils/binutils/doc/binutils.7:2142 /usr/src/contrib/binutils/binutils/doc/binutils.7:2583 /usr/src/contrib/binutils/binutils/doc/binutils.7:2996 /usr/src/contrib/binutils/binutils/doc/binutils.7:4095
#, no-wrap
msgid "-s"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:866
#, no-wrap
msgid "--print-armap"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:873
msgid ""
"When listing symbols from archive members, include the index: a mapping "
"(stored in the archive by E<.Xr ar> or E<.Xr ranlib>)  of which modules "
"contain definitions for which names."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:874 /usr/src/contrib/binutils/binutils/doc/binutils.7:2129 /usr/src/contrib/binutils/binutils/doc/binutils.7:3505 /usr/src/contrib/binutils/binutils/doc/binutils.7:4109
#, no-wrap
msgid "-r"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:875
#, no-wrap
msgid "--reverse-sort"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:878
msgid ""
"Reverse the order of the sort (whether numeric or alphabetic); let the last "
"come first."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:879
#, no-wrap
msgid "--size-sort"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:887
msgid ""
"Sort symbols by size. The size is computed as the difference between the "
"value of the symbol and the value of the symbol with the next higher "
"value. If the E<.Li bsd> output format is used the size of the symbol is "
"printed, rather than the value, and E<.Li -S> must be used in order both "
"size and value to be printed."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:888 /usr/src/contrib/binutils/binutils/doc/binutils.7:2219
#, no-wrap
msgid "--special-syms"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:894
msgid ""
"Display symbols which have a target-specific special meaning. These symbols "
"are usually used by the target for some special processing and are not "
"normally helpful when included included in the normal symbol lists. For "
"example for ARM targets this option would skip the mapping symbols used to "
"mark transitions between ARM code, THUMB code and data."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:895 /usr/src/contrib/binutils/binutils/doc/binutils.7:2467
#, no-wrap
msgid "-t Va radix"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:896 /usr/src/contrib/binutils/binutils/doc/binutils.7:2468
#, no-wrap
msgid "--radix= Va radix"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:906
msgid ""
"Use E<.Va radix> as the radix for printing the symbol values. It must be "
"E<.Li d> for decimal, E<.Li o> for octal, or E<.Li x> for hexadecimal."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:907 /usr/src/contrib/binutils/binutils/doc/binutils.7:1096 /usr/src/contrib/binutils/binutils/doc/binutils.7:1833 /usr/src/contrib/binutils/binutils/doc/binutils.7:2394 /usr/src/contrib/binutils/binutils/doc/binutils.7:2498 /usr/src/contrib/binutils/binutils/doc/binutils.7:2541 /usr/src/contrib/binutils/binutils/doc/binutils.7:2970
#, no-wrap
msgid "--target= Va bfdname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:911 /usr/src/contrib/binutils/binutils/doc/binutils.7:2502
msgid ""
"Specify an object code format other than your system's default format.See "
"Section E<.Dq Target Selection>, for more information."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:912 /usr/src/contrib/binutils/binutils/doc/binutils.7:3268 /usr/src/contrib/binutils/binutils/doc/binutils.7:4113
#, no-wrap
msgid "-u"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:913
#, no-wrap
msgid "--undefined-only"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:915
msgid "Display only undefined symbols (those external to each object file)."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:916
#, no-wrap
msgid "--defined-only"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:918
msgid "Display only defined symbols for each object file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:919 /usr/src/contrib/binutils/binutils/doc/binutils.7:1735 /usr/src/contrib/binutils/binutils/doc/binutils.7:2223 /usr/src/contrib/binutils/binutils/doc/binutils.7:2280 /usr/src/contrib/binutils/binutils/doc/binutils.7:2405 /usr/src/contrib/binutils/binutils/doc/binutils.7:2727 /usr/src/contrib/binutils/binutils/doc/binutils.7:3122 /usr/src/contrib/binutils/binutils/doc/binutils.7:3283 /usr/src/contrib/binutils/binutils/doc/binutils.7:3546 /usr/src/contrib/binutils/binutils/doc/binutils.7:3920 /usr/src/contrib/binutils/binutils/doc/binutils.7:4122
#, no-wrap
msgid "-V"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:920 /usr/src/contrib/binutils/binutils/doc/binutils.7:1736 /usr/src/contrib/binutils/binutils/doc/binutils.7:2224 /usr/src/contrib/binutils/binutils/doc/binutils.7:2281 /usr/src/contrib/binutils/binutils/doc/binutils.7:2406 /usr/src/contrib/binutils/binutils/doc/binutils.7:2504 /usr/src/contrib/binutils/binutils/doc/binutils.7:2728 /usr/src/contrib/binutils/binutils/doc/binutils.7:2883 /usr/src/contrib/binutils/binutils/doc/binutils.7:3123 /usr/src/contrib/binutils/binutils/doc/binutils.7:3284 /usr/src/contrib/binutils/binutils/doc/binutils.7:3547 /usr/src/contrib/binutils/binutils/doc/binutils.7:3921 /usr/src/contrib/binutils/binutils/doc/binutils.7:4155 /usr/src/contrib/binutils/binutils/doc/binutils.7:4203
#, no-wrap
msgid "--version"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:924
msgid "Show the version number of E<.Xr nm> and exit."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:925 /usr/src/contrib/binutils/binutils/doc/binutils.7:1217 /usr/src/contrib/binutils/binutils/doc/binutils.7:2643
#, no-wrap
msgid "-X"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:936
msgid ""
"This option is ignored for compatibility with the AIX version of E<.Xr nm>.  "
"It takes one parameter which must be the string E<.Op 32_64>.  The default "
"mode of AIX E<.Xr nm> corresponds to E<.Op -X 32>, which is not supported by "
"GNU E<.Xr nm>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:937 /usr/src/contrib/binutils/binutils/doc/binutils.7:1746 /usr/src/contrib/binutils/binutils/doc/binutils.7:1943 /usr/src/contrib/binutils/binutils/doc/binutils.7:2360 /usr/src/contrib/binutils/binutils/doc/binutils.7:2446 /usr/src/contrib/binutils/binutils/doc/binutils.7:2550 /usr/src/contrib/binutils/binutils/doc/binutils.7:2878 /usr/src/contrib/binutils/binutils/doc/binutils.7:3119 /usr/src/contrib/binutils/binutils/doc/binutils.7:3232 /usr/src/contrib/binutils/binutils/doc/binutils.7:3543 /usr/src/contrib/binutils/binutils/doc/binutils.7:3917 /usr/src/contrib/binutils/binutils/doc/binutils.7:4169 /usr/src/contrib/binutils/binutils/doc/binutils.7:4200
#, no-wrap
msgid "--help"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:941
msgid "Show a summary of the options to E<.Xr nm> and exit."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:943
#, no-wrap
msgid "objcopy"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1009
#, no-wrap
msgid ""
"objcopy [-F bfdname|--target=bfdname]\n"
"        [-I bfdname|--input-target=bfdname]\n"
"        [-O bfdname|--output-target=bfdname]\n"
"        [-B bfdarch|--binary-architecture=bfdarch]\n"
"        [-S|--strip-all]\n"
"        [-g|--strip-debug]\n"
"        [-K symbolname|--keep-symbol=symbolname]\n"
"        [-N symbolname|--strip-symbol=symbolname]\n"
"        [--strip-unneeded-symbol=symbolname]\n"
"        [-G symbolname|--keep-global-symbol=symbolname]\n"
"        [--localize-hidden]\n"
"        [-L symbolname|--localize-symbol=symbolname]\n"
"        [--globalize-symbol=symbolname]\n"
"        [-W symbolname|--weaken-symbol=symbolname]\n"
"        [-w|--wildcard]\n"
"        [-x|--discard-all]\n"
"        [-X|--discard-locals]\n"
"        [-b byte|--byte=byte]\n"
"        [-i interleave|--interleave=interleave]\n"
"        [-j sectionname|--only-section=sectionname]\n"
"        [-R sectionname|--remove-section=sectionname]\n"
"        [-p|--preserve-dates]\n"
"        [--debugging]\n"
"        [--gap-fill=val]\n"
"        [--pad-to=address]\n"
"        [--set-start=val]\n"
"        [--adjust-start=incr]\n"
"        [--change-addresses=incr]\n"
"        [--change-section-address section{=,+,-}val]\n"
"        [--change-section-lma section{=,+,-}val]\n"
"        [--change-section-vma section{=,+,-}val]\n"
"        [--change-warnings] [--no-change-warnings]\n"
"        [--set-section-flags section=flags]\n"
"        [--add-section sectionname=filename]\n"
"        [--rename-section oldname=newname[,flags]]\n"
"        [--change-leading-char] [--remove-leading-char]\n"
"        [--reverse-bytes=num]\n"
"        [--srec-len=ival] [--srec-forceS3]\n"
"        [--redefine-sym old=new]\n"
"        [--redefine-syms=filename]\n"
"        [--weaken]\n"
"        [--keep-symbols=filename]\n"
"        [--strip-symbols=filename]\n"
"        [--strip-unneeded-symbols=filename]\n"
"        [--keep-global-symbols=filename]\n"
"        [--localize-symbols=filename]\n"
"        [--globalize-symbols=filename]\n"
"        [--weaken-symbols=filename]\n"
"        [--alt-machine-code=index]\n"
"        [--prefix-symbols=string]\n"
"        [--prefix-sections=string]\n"
"        [--prefix-alloc-sections=string]\n"
"        [--add-GNU-debuglink=path-to-file]\n"
"        [--keep-file-symbols]\n"
"        [--only-keep-debug]\n"
"        [--extract-symbol]\n"
"        [--writable-text]\n"
"        [--readonly-text]\n"
"        [--pure]\n"
"        [--impure]\n"
"        [-v|--verbose]\n"
"        [-V|--version]\n"
"        [--help] [--info]\n"
"        infile [outfile]\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1024
msgid ""
"The GNU E<.Xr objcopy> utility copies the contents of an object file to "
"another.  E<.Xr objcopy> uses the GNU bfd Library to read and write the "
"object files. It can write the destination object file in a format different "
"from that of the source object file. The exact behavior of E<.Xr objcopy> is "
"controlled by command-line options. Note that E<.Xr objcopy> should be able "
"to copy a fully linked file between any two formats. However, copying a "
"relocatable object file between any two formats may not work as expected."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1032
msgid ""
"E<.Xr objcopy> creates temporary files to do its translations and deletes "
"them afterward.  E<.Xr objcopy> uses bfd to do all its translation work; it "
"has access to all the formats described in bfd and thus is able to recognize "
"most formats without being told explicitly.See Section E<.Dq BFD>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1038
msgid ""
"E<.Xr objcopy> can be used to generate S-records by using an output target "
"of E<.Li srec> (e.g., use E<.Li -O srec>)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1050
msgid ""
"E<.Xr objcopy> can be used to generate a raw binary file by using an output "
"target of E<.Li binary> (e.g., use E<.Op -O binary>).  When E<.Xr objcopy> "
"generates a raw binary file, it will essentially produce a memory dump of "
"the contents of the input object file. All symbols and relocation "
"information will be discarded. The memory dump will start at the load "
"address of the lowest section copied into the output file."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1057
msgid ""
"When generating an S-record or a raw binary file, it may be helpful to use "
"E<.Op -S> to remove sections containing debugging information. In some cases "
"E<.Op -R> will be useful to remove sections which contain information that "
"is not needed by the binary file."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1069
msgid ""
"Note--- E<.Xr objcopy> is not able to change the endianness of its input "
"files. If the input format has an endianness (some formats do not), E<.Xr "
"objcopy> can only copy the inputs into file formats that have the same "
"endianness or which have no endianness (e.g., E<.Li srec>).  (However, see "
"the E<.Op --reverse-bytes> option.)"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1071
#, no-wrap
msgid "Va infile"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1072
#, no-wrap
msgid "Va outfile"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1079
msgid ""
"The input and output files, respectively. If you do not specify E<.Va "
"outfile>, E<.Xr objcopy> creates a temporary file and destructively renames "
"the result with the name of E<.Va infile>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1080 /usr/src/contrib/binutils/binutils/doc/binutils.7:2558 /usr/src/contrib/binutils/binutils/doc/binutils.7:3074
#, no-wrap
msgid "-I Va bfdname"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1081 /usr/src/contrib/binutils/binutils/doc/binutils.7:2559 /usr/src/contrib/binutils/binutils/doc/binutils.7:3075
#, no-wrap
msgid "--input-target= Va bfdname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1087
msgid ""
"Consider the source file's object format to be E<.Va bfdname>, rather than "
"attempting to deduce it.See Section E<.Dq Target Selection>, for more "
"information."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1088 /usr/src/contrib/binutils/binutils/doc/binutils.7:2567 /usr/src/contrib/binutils/binutils/doc/binutils.7:3082
#, no-wrap
msgid "-O Va bfdname"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1089 /usr/src/contrib/binutils/binutils/doc/binutils.7:2568 /usr/src/contrib/binutils/binutils/doc/binutils.7:3083
#, no-wrap
msgid "--output-target= Va bfdname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1094
msgid ""
"Write the output file using the object format E<.Va bfdname>.  See "
"Section.Dq Target Selection , for more information."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1095 /usr/src/contrib/binutils/binutils/doc/binutils.7:2540
#, no-wrap
msgid "-F Va bfdname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1103
msgid ""
"Use E<.Va bfdname> as the object format for both the input and the output "
"file; i.e., simply transfer data from source to destination with no "
"translation.See Section E<.Dq Target Selection>, for more information."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1104
#, no-wrap
msgid "-B Va bfdarch"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1105
#, no-wrap
msgid "--binary-architecture= Va bfdarch"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1121
msgid ""
"Useful when transforming a raw binary input file into an object file. In "
"this case the output architecture can be set to E<.Va bfdarch>.  This option "
"will be ignored if the input file has a known E<.Va bfdarch>.  You can "
"access this binary data inside a program by referencing the special symbols "
"that are created by the conversion process. These symbols are called "
"_binary_ E<.Va objfile> _start, _binary_ E<.Va objfile> _end and _binary_ "
"E<.Va objfile> _size. e.g. you can transform a picture file into an object "
"file and then access it in your code using these symbols."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1122
#, no-wrap
msgid "-j Va sectionname"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1123
#, no-wrap
msgid "--only-section= Va sectionname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1127
msgid ""
"Copy only the named section from the input file to the output file. This "
"option may be given more than once. Note that using this option "
"inappropriately may make the output file unusable."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1128 /usr/src/contrib/binutils/binutils/doc/binutils.7:2576
#, no-wrap
msgid "-R Va sectionname"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1129 /usr/src/contrib/binutils/binutils/doc/binutils.7:2577
#, no-wrap
msgid "--remove-section= Va sectionname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1134 /usr/src/contrib/binutils/binutils/doc/binutils.7:2582
msgid ""
"Remove any section named E<.Va sectionname> from the output file. This "
"option may be given more than once. Note that using this option "
"inappropriately may make the output file unusable."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1136 /usr/src/contrib/binutils/binutils/doc/binutils.7:2584
#, no-wrap
msgid "--strip-all"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1138
msgid "Do not copy relocation and symbol information from the source file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1140 /usr/src/contrib/binutils/binutils/doc/binutils.7:2590
#, no-wrap
msgid "--strip-debug"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1142
msgid "Do not copy debugging symbols or sections from the source file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1143 /usr/src/contrib/binutils/binutils/doc/binutils.7:2593
#, no-wrap
msgid "--strip-unneeded"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1145
msgid "Strip all symbols that are not needed for relocation processing."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1146 /usr/src/contrib/binutils/binutils/doc/binutils.7:2596
#, no-wrap
msgid "-K Va symbolname"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1147 /usr/src/contrib/binutils/binutils/doc/binutils.7:2597
#, no-wrap
msgid "--keep-symbol= Va symbolname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1152 /usr/src/contrib/binutils/binutils/doc/binutils.7:2602
msgid ""
"When stripping symbols, keep symbol E<.Va symbolname> even if it would "
"normally be stripped. This option may be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1153 /usr/src/contrib/binutils/binutils/doc/binutils.7:2603
#, no-wrap
msgid "-N Va symbolname"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1154 /usr/src/contrib/binutils/binutils/doc/binutils.7:2604
#, no-wrap
msgid "--strip-symbol= Va symbolname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1158
msgid ""
"Do not copy symbol E<.Va symbolname> from the source file. This option may "
"be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1159
#, no-wrap
msgid "--strip-unneeded-symbol= Va symbolname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1164
msgid ""
"Do not copy symbol E<.Va symbolname> from the source file unless it is "
"needed by a relocation. This option may be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1165
#, no-wrap
msgid "-G Va symbolname"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1166
#, no-wrap
msgid "--keep-global-symbol= Va symbolname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1171
msgid ""
"Keep only symbol E<.Va symbolname> global. Make all other symbols local to "
"the file, so that they are not visible externally. This option may be given "
"more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1172
#, no-wrap
msgid "--localize-hidden"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1177
msgid ""
"In an ELF object, mark all symbols that have hidden or internal visibility "
"as local. This option applies on top of symbol-specific localization options "
"such as E<.Op -L>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1178
#, no-wrap
msgid "-L Va symbolname"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1179
#, no-wrap
msgid "--localize-symbol= Va symbolname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1184
msgid ""
"Make symbol E<.Va symbolname> local to the file, so that it is not visible "
"externally. This option may be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1185
#, no-wrap
msgid "-W Va symbolname"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1186
#, no-wrap
msgid "--weaken-symbol= Va symbolname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1190
msgid "Make symbol E<.Va symbolname> weak. This option may be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1191
#, no-wrap
msgid "--globalize-symbol= Va symbolname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1196
msgid ""
"Give symbol E<.Va symbolname> global scoping so that it is visible outside "
"of the file in which it is defined.  This option may be given more than "
"once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1197 /usr/src/contrib/binutils/binutils/doc/binutils.7:2237 /usr/src/contrib/binutils/binutils/doc/binutils.7:2623
#, no-wrap
msgid "-w"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1198 /usr/src/contrib/binutils/binutils/doc/binutils.7:2624
#, no-wrap
msgid "--wildcard"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1205 /usr/src/contrib/binutils/binutils/doc/binutils.7:2631
msgid ""
"Permit regular expressions in E<.Va symbolname> s used in other command line "
"options. The question mark (?), asterisk (*), backslash (\\e) and square "
"brackets ([]) operators can be used anywhere in the symbol name. If the "
"first character of the symbol name is the exclamation point (!) then the "
"sense of the switch is reversed for that symbol. For example:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1208
#, no-wrap
msgid "  -w -W !foo -W fo*\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1212
msgid ""
"would cause objcopy to weaken all symbols that start with \\(lqfo\\(rq "
"except for the symbol \\(lqfoo\\(rq."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1213 /usr/src/contrib/binutils/binutils/doc/binutils.7:2229 /usr/src/contrib/binutils/binutils/doc/binutils.7:2365 /usr/src/contrib/binutils/binutils/doc/binutils.7:2639 /usr/src/contrib/binutils/binutils/doc/binutils.7:3872
#, no-wrap
msgid "-x"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1214 /usr/src/contrib/binutils/binutils/doc/binutils.7:2640
#, no-wrap
msgid "--discard-all"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1216
msgid "Do not copy non-global symbols from the source file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1218 /usr/src/contrib/binutils/binutils/doc/binutils.7:2644
#, no-wrap
msgid "--discard-locals"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1223
msgid ""
"Do not copy compiler-generated local symbols. (These usually start with "
"E<.Li L> or E<.Li>..)"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1224
#, no-wrap
msgid "-b Va byte"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1225
#, no-wrap
msgid "--byte= Va byte"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1242
msgid ""
"Keep only every E<.Va byte> th byte of the input file (header data is not "
"affected).  E<.Va byte> can be in the range from 0 to E<.Va interleave> -1, "
"where E<.Va interleave> is given by the E<.Op -i> or E<.Op --interleave> "
"option, or the default of 4. This option is useful for creating files to "
"program rom. It is typically used with an E<.Li srec> output target."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1243
#, no-wrap
msgid "-i Va interleave"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1244
#, no-wrap
msgid "--interleave= Va interleave"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1257
msgid ""
"Only copy one out of every E<.Va interleave> bytes. Select which byte to "
"copy with the E<.Op -b> or E<.Op --byte> option. The default is 4.  E<.Xr "
"objcopy> ignores this option if you do not specify either E<.Op -b> or E<.Op "
"--byte>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1259 /usr/src/contrib/binutils/binutils/doc/binutils.7:2620
#, no-wrap
msgid "--preserve-dates"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1262
msgid ""
"Set the access and modification dates of the output file to be the same as "
"those of the input file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1263 /usr/src/contrib/binutils/binutils/doc/binutils.7:1870
#, no-wrap
msgid "--debugging"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1267
msgid ""
"Convert debugging information, if possible. This is not the default because "
"only certain debugging formats are supported, and the conversion process can "
"be time consuming."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1268
#, no-wrap
msgid "--gap-fill Va val"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1276
msgid ""
"Fill gaps between sections with E<.Va val>.  This operation applies to the "
"E<.Em load address> (LMA) of the sections. It is done by increasing the size "
"of the section with the lower address, and filling in the extra space "
"created with E<.Va val>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1277
#, no-wrap
msgid "--pad-to Va address"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1284
msgid ""
"Pad the output file up to the load address E<.Va address>.  This is done by "
"increasing the size of the last section. The extra space is filled in with "
"the value specified by E<.Op --gap-fill> (default zero)."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1285
#, no-wrap
msgid "--set-start Va val"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1289
msgid ""
"Set the start address of the new file to E<.Va val>.  Not all object file "
"formats support setting the start address."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1290
#, no-wrap
msgid "--change-start Va incr"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1291
#, no-wrap
msgid "--adjust-start Va incr"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1295
msgid ""
"Change the start address by adding E<.Va incr>.  Not all object file formats "
"support setting the start address."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1296
#, no-wrap
msgid "--change-addresses Va incr"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1297
#, no-wrap
msgid "--adjust-vma Va incr"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1305
msgid ""
"Change the VMA and LMA addresses of all sections, as well as the start "
"address, by adding E<.Va incr>.  Some object file formats do not permit "
"section addresses to be changed arbitrarily.  Note that this does not "
"relocate the sections; if the program expects sections to be loaded at a "
"certain address, and this option is used to change the sections such that "
"they are loaded at a different address, the program may fail."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1306
#, no-wrap
msgid "--change-section-address Va section{=,+,-} Va val"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1307
#, no-wrap
msgid "--adjust-section-vma Va section{=,+,-} Va val"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1323
msgid ""
"Set or change both the VMA address and the LMA address of the named E<.Va "
"section>.  If E<.Li => is used, the section address is set to E<.Va val>.  "
"Otherwise, E<.Va val> is added to or subtracted from the section "
"address. See the comments under E<.Op --change-addresses>, above. If E<.Va "
"section> does not exist in the input file, a warning will be issued, unless "
"E<.Op --no-change-warnings> is used."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1324
#, no-wrap
msgid "--change-section-lma Va section{=,+,-} Va val"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1343
msgid ""
"Set or change the LMA address of the named E<.Va section>.  The LMA address "
"is the address where the section will be loaded into memory at program load "
"time. Normally this is the same as the VMA address, which is the address of "
"the section at program run time, but on some systems, especially those where "
"a program is held in ROM, the two can be different. If E<.Li => is used, the "
"section address is set to E<.Va val>.  Otherwise, E<.Va val> is added to or "
"subtracted from the section address. See the comments under E<.Op "
"--change-addresses>, above. If E<.Va section> does not exist in the input "
"file, a warning will be issued, unless E<.Op --no-change-warnings> is used."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1344
#, no-wrap
msgid "--change-section-vma Va section{=,+,-} Va val"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1364
msgid ""
"Set or change the VMA address of the named E<.Va section>.  The VMA address "
"is the address where the section will be located once the program has "
"started executing. Normally this is the same as the LMA address, which is "
"the address where the section will be loaded into memory, but on some "
"systems, especially those where a program is held in ROM, the two can be "
"different. If E<.Li => is used, the section address is set to E<.Va val>.  "
"Otherwise, E<.Va val> is added to or subtracted from the section "
"address. See the comments under E<.Op --change-addresses>, above. If E<.Va "
"section> does not exist in the input file, a warning will be issued, unless "
"E<.Op --no-change-warnings> is used."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1365
#, no-wrap
msgid "--change-warnings"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1366
#, no-wrap
msgid "--adjust-warnings"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1375
msgid ""
"If E<.Op --change-section-address> or E<.Op --change-section-lma> or E<.Op "
"--change-section-vma> is used, and the named section does not exist, issue a "
"warning. This is the default."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1376
#, no-wrap
msgid "--no-change-warnings"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1377
#, no-wrap
msgid "--no-adjust-warnings"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1385
msgid ""
"Do not issue a warning if E<.Op --change-section-address> or E<.Op "
"--adjust-section-lma> or E<.Op --adjust-section-vma> is used, even if the "
"named section does not exist."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1386
#, no-wrap
msgid "--set-section-flags Va section= Va flags"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1408
msgid ""
"Set the flags for the named section. The E<.Va flags> argument is a comma "
"separated string of flag names. The recognized names are E<.Li alloc>, E<.Li "
"contents>, E<.Li load>, E<.Li noload>, E<.Li readonly>, E<.Li code>, E<.Li "
"data>, E<.Li rom>, E<.Li share>, and E<.Li debug>.  You can set the E<.Li "
"contents> flag for a section which does not have contents, but it is not "
"meaningful to clear the E<.Li contents> flag of a section which does have "
"contents--just remove the section instead.  Not all flags are meaningful for "
"all object file formats."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1409
#, no-wrap
msgid "--add-section Va sectionname= Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1417
msgid ""
"Add a new section named E<.Va sectionname> while copying the file. The "
"contents of the new section are taken from the file E<.Va filename>.  The "
"size of the section will be the size of the file. This option only works on "
"file formats which can support sections with arbitrary names."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1418
#, no-wrap
msgid "--rename-section Va oldname= Va newname[, Va flags]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1428
msgid ""
"Rename a section from E<.Va oldname> to E<.Va newname>, optionally changing "
"the section's flags to E<.Va flags> in the process. This has the advantage "
"over usng a linker script to perform the rename in that the output stays as "
"an object file and does not become a linked executable."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1433
msgid ""
"This option is particularly helpful when the input format is binary, since "
"this will always create a section called .data. If for example, you wanted "
"instead to create a section called .rodata containing binary data you could "
"use the following command line to achieve it:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1438
#, no-wrap
msgid ""
"  objcopy -I binary -O E<lt>output_formatE<gt> -B E<lt>architectureE<gt> "
"\\e\n"
"   --rename-section .data=.rodata,alloc,load,readonly,data,contents \\e\n"
"   E<lt>input_binary_fileE<gt> E<lt>output_object_fileE<gt>\n"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1440
#, no-wrap
msgid "--change-leading-char"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1449
msgid ""
"Some object file formats use special characters at the start of symbols. The "
"most common such character is underscore, which compilers often add before "
"every symbol. This option tells E<.Xr objcopy> to change the leading "
"character of every symbol when it converts between object file formats. If "
"the object file formats use the same leading character, this option has no "
"effect. Otherwise, it will add a character, or remove a character, or change "
"a character, as appropriate."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1450
#, no-wrap
msgid "--remove-leading-char"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1460
msgid ""
"If the first character of a global symbol is a special symbol leading "
"character used by the object file format, remove the character. The most "
"common symbol leading character is underscore. This option will remove a "
"leading underscore from all global symbols. This can be useful if you want "
"to link together objects of different file formats with different "
"conventions for symbol names. This is different from E<.Op "
"--change-leading-char> because it always changes the symbol name when "
"appropriate, regardless of the object file format of the output file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1461
#, no-wrap
msgid "--reverse-bytes= Va num"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1465
msgid ""
"Reverse the bytes in a section with output contents. A section length must "
"be evenly divisible by the value given in order for the swap to be able to "
"take place. Reversing takes place before the interleaving is performed."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1471
msgid ""
"This option is used typically in generating ROM images for problematic "
"target systems. For example, on some target boards, the 32-bit words fetched "
"from 8-bit ROMs are re-assembled in little-endian byte order regardless of "
"the CPU byte order. Depending on the programming model, the endianness of "
"the ROM may need to be modified."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1474
msgid ""
"Consider a simple file with a section containing the following eight bytes: "
"E<.Li 12345678>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1479
msgid ""
"Using E<.Li --reverse-bytes=2> for the above example, the bytes in the "
"output file would be ordered E<.Li 21436587>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1484
msgid ""
"Using E<.Li --reverse-bytes=4> for the above example, the bytes in the "
"output file would be ordered E<.Li 43218765>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1491
msgid ""
"By using E<.Li --reverse-bytes=2> for the above example, followed by E<.Li "
"--reverse-bytes=4> on the output file, the bytes in the second output file "
"would be ordered E<.Li 34127856>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1492
#, no-wrap
msgid "--srec-len= Va ival"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1497
msgid ""
"Meaningful only for srec output. Set the maximum length of the Srecords "
"being produced to E<.Va ival>.  This length covers both address, data and "
"crc fields."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1498
#, no-wrap
msgid "--srec-forceS3"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1501
msgid ""
"Meaningful only for srec output. Avoid generation of S1/S2 records, creating "
"S3-only record format."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1502
#, no-wrap
msgid "--redefine-sym Va old= Va new"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1509
msgid ""
"Change the name of a symbol E<.Va old>, to E<.Va new>.  This can be useful "
"when one is trying link two things together for which you have no source, "
"and there are name collisions."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1510
#, no-wrap
msgid "--redefine-syms= Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1521
msgid ""
"Apply E<.Op --redefine-sym> to each symbol pair \" E<.Va old> E<.Va new \"> "
"listed in the file E<.Va filename>.  E<.Va filename> is simply a flat file, "
"with one symbol pair per line. Line comments may be introduced by the hash "
"character. This option may be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1522
#, no-wrap
msgid "--weaken"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1528
msgid ""
"Change all global symbols in the file to be weak. This can be useful when "
"building an object which will be linked against other objects using the "
"E<.Op -R> option to the linker. This option is only effective when using an "
"object file format which supports weak symbols."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1529
#, no-wrap
msgid "--keep-symbols= Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1537
msgid ""
"Apply E<.Op --keep-symbol> option to each symbol listed in the file E<.Va "
"filename>.  E<.Va filename> is simply a flat file, with one symbol name per "
"line. Line comments may be introduced by the hash character. This option may "
"be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1538
#, no-wrap
msgid "--strip-symbols= Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1546
msgid ""
"Apply E<.Op --strip-symbol> option to each symbol listed in the file E<.Va "
"filename>.  E<.Va filename> is simply a flat file, with one symbol name per "
"line. Line comments may be introduced by the hash character. This option may "
"be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1547
#, no-wrap
msgid "--strip-unneeded-symbols= Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1555
msgid ""
"Apply E<.Op --strip-unneeded-symbol> option to each symbol listed in the "
"file E<.Va filename>.  E<.Va filename> is simply a flat file, with one "
"symbol name per line. Line comments may be introduced by the hash "
"character. This option may be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1556
#, no-wrap
msgid "--keep-global-symbols= Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1564
msgid ""
"Apply E<.Op --keep-global-symbol> option to each symbol listed in the file "
"E<.Va filename>.  E<.Va filename> is simply a flat file, with one symbol "
"name per line. Line comments may be introduced by the hash character. This "
"option may be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1565
#, no-wrap
msgid "--localize-symbols= Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1573
msgid ""
"Apply E<.Op --localize-symbol> option to each symbol listed in the file "
"E<.Va filename>.  E<.Va filename> is simply a flat file, with one symbol "
"name per line. Line comments may be introduced by the hash character. This "
"option may be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1574
#, no-wrap
msgid "--globalize-symbols= Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1582
msgid ""
"Apply E<.Op --globalize-symbol> option to each symbol listed in the file "
"E<.Va filename>.  E<.Va filename> is simply a flat file, with one symbol "
"name per line. Line comments may be introduced by the hash character. This "
"option may be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1583
#, no-wrap
msgid "--weaken-symbols= Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1591
msgid ""
"Apply E<.Op --weaken-symbol> option to each symbol listed in the file E<.Va "
"filename>.  E<.Va filename> is simply a flat file, with one symbol name per "
"line. Line comments may be introduced by the hash character. This option may "
"be given more than once."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1592
#, no-wrap
msgid "--alt-machine-code= Va index"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1602
msgid ""
"If the output architecture has alternate machine codes, use the E<.Va index> "
"th code instead of the default one. This is useful in case a machine is "
"assigned an official code and the tool-chain adopts the new code, but other "
"applications still depend on the original code being used. For ELF based "
"architectures if the E<.Va index> alternative does not exist then the value "
"is treated as an absolute number to be stored in the e_machine field of the "
"ELF header."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1603
#, no-wrap
msgid "--writable-text"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1606
msgid ""
"Mark the output text as writable. This option isn't meaningful for all "
"object file formats."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1607
#, no-wrap
msgid "--readonly-text"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1610
msgid ""
"Make the output text write protected. This option isn't meaningful for all "
"object file formats."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1611
#, no-wrap
msgid "--pure"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1614
msgid ""
"Mark the output file as demand paged. This option isn't meaningful for all "
"object file formats."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1615
#, no-wrap
msgid "--impure"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1618
msgid ""
"Mark the output file as impure. This option isn't meaningful for all object "
"file formats."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1619
#, no-wrap
msgid "--prefix-symbols= Va string"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1622
msgid "Prefix all symbols in the output file with E<.Va string>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1623
#, no-wrap
msgid "--prefix-sections= Va string"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1626
msgid "Prefix all section names in the output file with E<.Va string>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1627
#, no-wrap
msgid "--prefix-alloc-sections= Va string"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1630
msgid ""
"Prefix all the names of all allocated sections in the output file with E<.Va "
"string>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1631
#, no-wrap
msgid "--add-GNU-debuglink= Va path-to-file"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1635
msgid ""
"Creates a .GNU_debuglink section which contains a reference to E<.Va "
"path-to-file> and adds it to the output file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1636 /usr/src/contrib/binutils/binutils/doc/binutils.7:2650
#, no-wrap
msgid "--keep-file-symbols"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1643 /usr/src/contrib/binutils/binutils/doc/binutils.7:2657
msgid ""
"When stripping a file, perhaps with E<.Op --strip-debug> or E<.Op "
"--strip-unneeded>, retain any symbols specifying source file names, which "
"would otherwise get stripped."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1644 /usr/src/contrib/binutils/binutils/doc/binutils.7:2658
#, no-wrap
msgid "--only-keep-debug"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1650 /usr/src/contrib/binutils/binutils/doc/binutils.7:2664
msgid ""
"Strip a file, removing contents of any sections that would not be stripped "
"by E<.Op --strip-debug> and leaving the debugging sections intact. In ELF "
"files, this preserves all note sections in the output."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1657 /usr/src/contrib/binutils/binutils/doc/binutils.7:2671
msgid ""
"The intention is that this option will be used in conjunction with E<.Op "
"--add-GNU-debuglink> to create a two part executable. One a stripped binary "
"which will occupy less space in RAM and in a distribution and the second a "
"debugging information file which is only needed if debugging abilities are "
"required. The suggested procedure to create these files is as follows:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1663 /usr/src/contrib/binutils/binutils/doc/binutils.7:2677
msgid "Link the executable as normal. Assuming that is is called E<.Li foo> then..."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1668 /usr/src/contrib/binutils/binutils/doc/binutils.7:2682
msgid ""
"Run E<.Li objcopy --only-keep-debug foo foo.dbg> to create a file containing "
"the debugging info."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1673 /usr/src/contrib/binutils/binutils/doc/binutils.7:2687
msgid "Run E<.Li objcopy --strip-debug foo> to create a stripped executable."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1677 /usr/src/contrib/binutils/binutils/doc/binutils.7:2691
msgid ""
"Run E<.Li objcopy --add-GNU-debuglink=foo.dbg foo> to add a link to the "
"debugging info into the stripped executable."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1684 /usr/src/contrib/binutils/binutils/doc/binutils.7:2698
msgid ""
"Note - the choice of E<.Li .dbg> as an extension for the debug info file is "
"arbitrary. Also the E<.Li --only-keep-debug> step is optional. You could "
"instead do this:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1688 /usr/src/contrib/binutils/binutils/doc/binutils.7:2702
msgid "Link the executable as normal."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1693 /usr/src/contrib/binutils/binutils/doc/binutils.7:2707
msgid "Copy E<.Li foo> to E<.Li foo.full>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1696
msgid "Run E<.Li objcopy --strip-debug foo>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1699 /usr/src/contrib/binutils/binutils/doc/binutils.7:2713
msgid "Run E<.Li objcopy --add-GNU-debuglink=foo.full foo>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1706
msgid ""
"i.e., the file pointed to by the E<.Op --add-GNU-debuglink> can be the full "
"executable. It does not have to be a file created by the E<.Op "
"--only-keep-debug> switch."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1712 /usr/src/contrib/binutils/binutils/doc/binutils.7:2726
msgid ""
"Note - this switch is only intended for use on fully linked files. It does "
"not make sense to use it on object files where the debugging information may "
"be incomplete. Besides the GNU_debuglink feature currently only supports the "
"presence of one filename containing debugging information, not multiple "
"filenames on a one-per-object-file basis."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1713
#, no-wrap
msgid "--extract-symbol"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1716
msgid ""
"Keep the file's section flags and symbols but remove all section "
"data. Specifically, the option:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1720
msgid "sets the virtual and load addresses of every section to zero;"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1722
msgid "removes the contents of all sections;"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1724
msgid "sets the size of every section to zero; and"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1726
msgid "sets the file's start address to zero."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1734
msgid ""
"This option is used to build a E<.Pa .sym> file for a VxWorks kernel. It can "
"also be a useful way of reducing the size of a E<.Op --just-symbols> linker "
"input file."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1739
msgid "Show the version number of E<.Xr objcopy>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1741 /usr/src/contrib/binutils/binutils/doc/binutils.7:2733 /usr/src/contrib/binutils/binutils/doc/binutils.7:3279 /usr/src/contrib/binutils/binutils/doc/binutils.7:3913
#, no-wrap
msgid "--verbose"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1745
msgid ""
"Verbose output: list all object files modified. In the case of archives, "
"E<.Li objcopy -V> lists all members of the archive."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1749
msgid "Show a summary of the options to E<.Xr objcopy>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1750 /usr/src/contrib/binutils/binutils/doc/binutils.7:1949 /usr/src/contrib/binutils/binutils/doc/binutils.7:2555
#, no-wrap
msgid "--info"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1752 /usr/src/contrib/binutils/binutils/doc/binutils.7:2557
msgid "Display a list showing all architectures and object formats available."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1754
#, no-wrap
msgid "objdump"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1793
#, no-wrap
msgid ""
"objdump [-a|--archive-headers]\n"
"        [-b bfdname|--target=bfdname]\n"
"        [-C|--demangle[=style] ]\n"
"        [-d|--disassemble]\n"
"        [-D|--disassemble-all]\n"
"        [-z|--disassemble-zeroes]\n"
"        [-EB|-EL|--endian={big | little }]\n"
"        [-f|--file-headers]\n"
"        [--file-start-context]\n"
"        [-g|--debugging]\n"
"        [-e|--debugging-tags]\n"
"        [-h|--section-headers|--headers]\n"
"        [-i|--info]\n"
"        [-j section|--section=section]\n"
"        [-l|--line-numbers]\n"
"        [-S|--source]\n"
"        [-m machine|--architecture=machine]\n"
"        [-M options|--disassembler-options=options]\n"
"        [-p|--private-headers]\n"
"        [-r|--reloc]\n"
"        [-R|--dynamic-reloc]\n"
"        [-s|--full-contents]\n"
"        [-W|--dwarf]\n"
"        [-G|--stabs]\n"
"        [-t|--syms]\n"
"        [-T|--dynamic-syms]\n"
"        [-x|--all-headers]\n"
"        [-w|--wide]\n"
"        [--start-address=address]\n"
"        [--stop-address=address]\n"
"        [--prefix-addresses]\n"
"        [--[no-]show-raw-insn]\n"
"        [--adjust-vma=offset]\n"
"        [--special-syms]\n"
"        [-V|--version]\n"
"        [-H|--help]\n"
"        objfile...\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1800
msgid ""
"E<.Xr objdump> displays information about one or more object files. The "
"options control what particular information to display. This information is "
"mostly useful to programmers who are working on the compilation tools, as "
"opposed to programmers who just want their program to compile and work."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1805
msgid ""
"E<.Va objfile> \\&...are the object files to be examined. When you specify "
"archives, E<.Xr objdump> shows information on each of the member object "
"files."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1810
msgid ""
"The long and short forms of options, shown here as alternatives, are "
"equivalent.  At least one option from the list E<.Op "
"-a,-d,-D,-e,-f,-g,-G,-h,-H,-p,-r,-R,-s,-S,-t,-T,-V,-x> must be given."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1813
#, no-wrap
msgid "--archive-header"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1823
msgid ""
"If any of the E<.Va objfile> files are archives, display the archive header "
"information (in a format similar to E<.Li ls -l>).  Besides the information "
"you could list with E<.Li ar tv>, E<.Li objdump -a> shows the object file "
"format of each archive member."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1824
#, no-wrap
msgid "--adjust-vma= Va offset"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1831
msgid ""
"When dumping information, first add E<.Va offset> to all the section "
"addresses. This is useful if the section addresses do not correspond to the "
"symbol table, which can happen when putting sections at particular addresses "
"when using a format which can not represent section addresses, such as "
"a.out."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1832 /usr/src/contrib/binutils/binutils/doc/binutils.7:2969
#, no-wrap
msgid "-b Va bfdname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1839
msgid ""
"Specify that the object-code format for the object files is E<.Va bfdname>.  "
"This option may not be necessary; E<.Va objdump> can automatically recognize "
"many formats."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1841
msgid "For example,"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1843
#, no-wrap
msgid "objdump -b oasys -m vax -h fu.o\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1856
msgid ""
"displays summary information from the section headers ( E<.Op -h>)  of E<.Pa "
"fu.o>, which is explicitly identified ( E<.Op -m>)  as a VAX object file in "
"the format produced by Oasys compilers. You can list the formats available "
"with the E<.Op -i> option.See Section E<.Dq Target Selection>, for more "
"information."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1877
msgid ""
"Display debugging information. This attempts to parse debugging information "
"stored in the file and print it out using a C like syntax. Only certain "
"types of debugging information have been implemented. Some other types are "
"supported by E<.Xr readelf -w>.  See Section.Dq readelf ."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1878 /usr/src/contrib/binutils/binutils/doc/binutils.7:4100
#, no-wrap
msgid "-e"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1879
#, no-wrap
msgid "--debugging-tags"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1883
msgid ""
"Like E<.Op -g>, but the information is generated in a format compatible with "
"ctags tool."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1884 /usr/src/contrib/binutils/binutils/doc/binutils.7:2363 /usr/src/contrib/binutils/binutils/doc/binutils.7:2589 /usr/src/contrib/binutils/binutils/doc/binutils.7:3105 /usr/src/contrib/binutils/binutils/doc/binutils.7:3206 /usr/src/contrib/binutils/binutils/doc/binutils.7:4118
#, no-wrap
msgid "-d"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1885
#, no-wrap
msgid "--disassemble"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1890
msgid ""
"Display the assembler mnemonics for the machine instructions from E<.Va "
"objfile>.  This option only disassembles those sections which are expected "
"to contain instructions."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1892
#, no-wrap
msgid "--disassemble-all"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1897
msgid ""
"Like E<.Op -d>, but disassemble the contents of all sections, not just those "
"expected to contain instructions."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1898
#, no-wrap
msgid "--prefix-addresses"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1901
msgid ""
"When disassembling, print the complete address on each line. This is the "
"older disassembly format."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1902
#, no-wrap
msgid "-EB"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1903
#, no-wrap
msgid "-EL"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1904
#, no-wrap
msgid "--endian={big|little}"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1908
msgid ""
"Specify the endianness of the object files. This only affects disassembly.  "
"This can be useful when disassembling a file format which does not describe "
"endianness information, such as S-records."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1909 /usr/src/contrib/binutils/binutils/doc/binutils.7:2442 /usr/src/contrib/binutils/binutils/doc/binutils.7:2992
#, no-wrap
msgid "-f"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1910
#, no-wrap
msgid "--file-headers"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1914
msgid ""
"Display summary information from the overall header of each of the E<.Va "
"objfile> files."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1915
#, no-wrap
msgid "--file-start-context"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1920
msgid ""
"Specify that when displaying interlisted source code/disassembly (assumes "
"E<.Op -S>)  from a file that has not yet been displayed, extend the context "
"to the start of the file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1921 /usr/src/contrib/binutils/binutils/doc/binutils.7:3118 /usr/src/contrib/binutils/binutils/doc/binutils.7:3542 /usr/src/contrib/binutils/binutils/doc/binutils.7:3916 /usr/src/contrib/binutils/binutils/doc/binutils.7:4069
#, no-wrap
msgid "-h"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1922 /usr/src/contrib/binutils/binutils/doc/binutils.7:4081
#, no-wrap
msgid "--section-headers"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1923 /usr/src/contrib/binutils/binutils/doc/binutils.7:4101
#, no-wrap
msgid "--headers"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1925
msgid "Display summary information from the section headers of the object file."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1941
msgid ""
"File segments may be relocated to nonstandard addresses, for example by "
"using the E<.Op -Ttext>, E<.Op -Tdata>, or E<.Op -Tbss> options to E<.Xr "
"ld>.  However, some object file formats, such as a.out, do not store the "
"starting address of the file segments. In those situations, although E<.Xr "
"ld> relocates the sections correctly, using E<.Li objdump -h> to list the "
"file section headers cannot show the correct addresses. Instead, it shows "
"the usual addresses, which are implicit for the target."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1942 /usr/src/contrib/binutils/binutils/doc/binutils.7:3231 /usr/src/contrib/binutils/binutils/doc/binutils.7:4168
#, no-wrap
msgid "-H"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1947
msgid "Print a summary of the options to E<.Xr objdump> and exit."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1948 /usr/src/contrib/binutils/binutils/doc/binutils.7:2847 /usr/src/contrib/binutils/binutils/doc/binutils.7:3000 /usr/src/contrib/binutils/binutils/doc/binutils.7:3888
#, no-wrap
msgid "-i"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1955
msgid ""
"Display a list showing all architectures and object formats available for "
"specification with E<.Op -b> or E<.Op -m>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1956
#, no-wrap
msgid "-j Va name"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1957
#, no-wrap
msgid "--section= Va name"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1960
msgid "Display information only for section E<.Va name>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1970
msgid ""
"Label the display (using debugging information) with the filename and source "
"line numbers corresponding to the object code or relocs shown. Only useful "
"with E<.Op -d>, E<.Op -D>, or E<.Op -r>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1971 /usr/src/contrib/binutils/binutils/doc/binutils.7:3810
#, no-wrap
msgid "-m Va machine"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1972
#, no-wrap
msgid "--architecture= Va machine"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1979
msgid ""
"Specify the architecture to use when disassembling object files. This can be "
"useful when disassembling object files which do not describe architecture "
"information, such as S-records. You can list the available architectures "
"with the E<.Op -i> option."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1980
#, no-wrap
msgid "-M Va options"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1981
#, no-wrap
msgid "--disassembler-options= Va options"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:1987
msgid ""
"Pass target specific information to the disassembler. Only supported on some "
"targets. If it is necessary to specify more than one disassembler option "
"then multiple E<.Op -M> options can be used or can be placed together into a "
"comma separated list."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2000
msgid ""
"If the target is an ARM architecture then this switch can be used to select "
"which register name set is used during disassembler. Specifying E<.Op -M "
"reg-names-std> (the default) will select the register names as used in ARM's "
"instruction set documentation, but with register 13 called 'sp', register 14 "
"called 'lr' and register 15 called 'pc'. Specifying E<.Op -M reg-names-apcs> "
"will select the name set used by the ARM Procedure Call Standard, whilst "
"specifying E<.Op -M reg-names-raw> will just use E<.Li r> followed by the "
"register number."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2007
msgid ""
"There are also two variants on the APCS register naming scheme enabled by "
"E<.Op -M reg-names-atpcs> and E<.Op -M reg-names-special-atpcs> which use "
"the ARM/Thumb Procedure Call Standard naming conventions. (Either with the "
"normal register names or the special register names)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2013
msgid ""
"This option can also be used for ARM architectures to force the disassembler "
"to interpret all instructions as Thumb instructions by using the switch "
"E<.Op --disassembler-options=force-thumb>.  This can be useful when "
"attempting to disassemble thumb code produced by other compilers."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2043
msgid ""
"For the x86, some of the options duplicate functions of the E<.Op -m> "
"switch, but allow finer grained control. Multiple selections from the "
"following may be specified as a comma separated string.  E<.Op x86-64>, "
"E<.Op i386> and E<.Op i8086> select disassembly for the given architecture.  "
"E<.Op intel> and E<.Op att> select between intel syntax mode and AT&T syntax "
"mode.  E<.Op addr64>, E<.Op addr32>, E<.Op addr16>, E<.Op data32> and E<.Op "
"data16> specify the default address size and operand size. These four "
"options will be overridden if E<.Op x86-64>, E<.Op i386> or E<.Op i8086> "
"appear later in the option string. Lastly, E<.Op suffix>, when in AT&T mode, "
"instructs the disassembler to print a mnemonic suffix even when the suffix "
"could be inferred by the operands."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2058
msgid ""
"For PPC, E<.Op booke>, E<.Op booke32> and E<.Op booke64> select disassembly "
"of BookE instructions.  E<.Op 32> and E<.Op 64> select PowerPC and PowerPC64 "
"disassembly, respectively.  E<.Op e300> selects disassembly for the e300 "
"family.  E<.Op 440> selects disassembly for the PowerPC 440."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2063
msgid ""
"For MIPS, this option controls the printing of instruction mnemonic names "
"and register names in disassembled instructions. Multiple selections from "
"the following may be specified as a comma separated string, and invalid "
"options are ignored:"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2065
#, no-wrap
msgid "no-aliases"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2068
msgid ""
"Print the 'raw' instruction mnemonic instead of some pseudo instruction "
"mnemonic.  I.e., print 'daddu' or 'or' instead of 'move', 'sll' instead of "
"'nop', etc."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2069
#, no-wrap
msgid "gpr-names= Va ABI"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2073
msgid ""
"Print GPR (general-purpose register) names as appropriate for the specified "
"ABI. By default, GPR names are selected according to the ABI of the binary "
"being disassembled."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2074
#, no-wrap
msgid "fpr-names= Va ABI"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2077
msgid ""
"Print FPR (floating-point register) names as appropriate for the specified "
"ABI. By default, FPR numbers are printed rather than names."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2078
#, no-wrap
msgid "cp0-names= Va ARCH"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2084
msgid ""
"Print CP0 (system control coprocessor; coprocessor 0) register names as "
"appropriate for the CPU or architecture specified by E<.Va ARCH>.  By "
"default, CP0 register names are selected according to the architecture and "
"CPU of the binary being disassembled."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2085
#, no-wrap
msgid "hwr-names= Va ARCH"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2092
msgid ""
"Print HWR (hardware register, used by the E<.Li rdhwr> instruction) names as "
"appropriate for the CPU or architecture specified by E<.Va ARCH>.  By "
"default, HWR names are selected according to the architecture and CPU of the "
"binary being disassembled."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2093
#, no-wrap
msgid "reg-names= Va ABI"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2095
msgid "Print GPR and FPR names as appropriate for the selected ABI."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2096
#, no-wrap
msgid "reg-names= Va ARCH"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2099
msgid ""
"Print CPU-specific register names (CP0 register and HWR names) as "
"appropriate for the selected CPU or architecture."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2115
msgid ""
"For any of the options listed above, E<.Va ABI> or E<.Va ARCH> may be "
"specified as E<.Li numeric> to have numbers printed rather than names, for "
"the selected types of registers.  You can list the available values of E<.Va "
"ABI> and E<.Va ARCH> using the E<.Op --help> option."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2122
msgid ""
"For VAX, you can specify function entry addresses with E<.Op -M "
"entry:0xf00ba>.  You can use this multiple times to properly disassemble VAX "
"binary files that don't contain symbol tables (like ROM dumps). In these "
"cases, the function entry mask would otherwise be decoded as VAX "
"instructions, which would probably lead the rest of the function being "
"wrongly disassembled."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2124
#, no-wrap
msgid "--private-headers"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2128
msgid ""
"Print information that is specific to the object file format. The exact "
"information printed depends upon the object file format. For some object "
"file formats, no additional information is printed."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2130
#, no-wrap
msgid "--reloc"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2136
msgid ""
"Print the relocation entries of the file. If used with E<.Op -d> or E<.Op "
"-D>, the relocations are printed interspersed with the disassembly."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2137
#, no-wrap
msgid "-R"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2138
#, no-wrap
msgid "--dynamic-reloc"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2141
msgid ""
"Print the dynamic relocation entries of the file. This is only meaningful "
"for dynamic objects, such as certain types of shared libraries."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2143
#, no-wrap
msgid "--full-contents"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2146
msgid ""
"Display the full contents of any sections requested. By default all "
"non-empty sections are displayed."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2148
#, no-wrap
msgid "--source"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2151
msgid ""
"Display source code intermixed with disassembly, if possible. Implies E<.Op "
"-d>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2152
#, no-wrap
msgid "--show-raw-insn"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2157
msgid ""
"When disassembling instructions, print the instruction in hex as well as in "
"symbolic form. This is the default except when E<.Op --prefix-addresses> is "
"used."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2158
#, no-wrap
msgid "--no-show-raw-insn"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2163
msgid ""
"When disassembling instructions, do not print the instruction bytes. This is "
"the default when E<.Op --prefix-addresses> is used."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2164 /usr/src/contrib/binutils/binutils/doc/binutils.7:4158
#, no-wrap
msgid "-W"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2165
#, no-wrap
msgid "--dwarf"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2168
msgid ""
"Displays the contents of the DWARF debug sections in the file, if any are "
"present."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2169
#, no-wrap
msgid "-G"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2170
#, no-wrap
msgid "--stabs"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2181
msgid ""
"Display the full contents of any sections requested. Display the contents of "
"the .stab and .stab.index and .stab.excl sections from an ELF file. This is "
"only useful on systems (such as Solaris 2.0) in which E<.Li .stab> debugging "
"symbol-table entries are carried in an ELF section. In most other file "
"formats, debugging symbol-table entries are interleaved with linkage "
"symbols, and are visible in the E<.Op --syms> output. For more information "
"on stabs symbols, see Top,Stabs,Stabs Overview,stabs.info, The "
"\\(lqstabs\\(rq debug format."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2182
#, no-wrap
msgid "--start-address= Va address"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2190
msgid ""
"Start displaying data at the specified address. This affects the output of "
"the E<.Op -d>, E<.Op -r> and E<.Op -s> options."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2191
#, no-wrap
msgid "--stop-address= Va address"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2199
msgid ""
"Stop displaying data at the specified address. This affects the output of "
"the E<.Op -d>, E<.Op -r> and E<.Op -s> options."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2200 /usr/src/contrib/binutils/binutils/doc/binutils.7:2390 /usr/src/contrib/binutils/binutils/doc/binutils.7:2840 /usr/src/contrib/binutils/binutils/doc/binutils.7:4090
#, no-wrap
msgid "-t"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2201 /usr/src/contrib/binutils/binutils/doc/binutils.7:4097
#, no-wrap
msgid "--syms"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2206
msgid ""
"Print the symbol table entries of the file. This is similar to the "
"information provided by the E<.Li nm> program."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2207
#, no-wrap
msgid "-T"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2208
#, no-wrap
msgid "--dynamic-syms"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2218
msgid ""
"Print the dynamic symbol table entries of the file. This is only meaningful "
"for dynamic objects, such as certain types of shared libraries. This is "
"similar to the information provided by the E<.Li nm> program when given the "
"E<.Op -D> ( E<.Op --dynamic>)  option."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2222
msgid ""
"When displaying symbols include those which the target considers to be "
"special in some way and which would not normally be of interest to the user."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2228
msgid "Print the version number of E<.Xr objdump> and exit."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2230
#, no-wrap
msgid "--all-headers"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2236
msgid ""
"Display all available header information, including the symbol table and "
"relocation entries. Using E<.Op -x> is equivalent to specifying all of E<.Op "
"-a -f -h -p -r -t>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2238 /usr/src/contrib/binutils/binutils/doc/binutils.7:4159
#, no-wrap
msgid "--wide"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2241
msgid ""
"Format some lines for output devices that have more than 80 columns. Also do "
"not truncate symbol names when they are displayed."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2242
#, no-wrap
msgid "-z"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2243
#, no-wrap
msgid "--disassemble-zeroes"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2246
msgid ""
"Normally the disassembly output will skip blocks of zeroes. This option "
"directs the disassembler to disassemble those blocks, just like any other "
"data."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2248
#, no-wrap
msgid "ranlib"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2251
#, no-wrap
msgid "ranlib [-vV] archive\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2257
msgid ""
"E<.Xr ranlib> generates an index to the contents of an archive and stores it "
"in the archive.  The index lists each symbol defined by a member of an "
"archive that is a relocatable object file."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2263
msgid "You may use E<.Li nm -s> or E<.Li nm --print-armap> to list this index."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2267
msgid ""
"An archive with such an index speeds up linking to the library and allows "
"routines in the library to call each other without regard to their placement "
"in the archive."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2277
msgid ""
"The GNU E<.Xr ranlib> program is another form of GNU E<.Xr ar>; running "
"E<.Xr ranlib> is completely equivalent to executing E<.Li ar -s>.  See "
"Section.Dq ar ."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2284
msgid "Show the version number of E<.Xr ranlib>."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2286
#, no-wrap
msgid "size"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2294
#, no-wrap
msgid ""
"size [-A|-B|--format=compatibility]\n"
"     [--help]\n"
"     [-d|-o|-x|--radix=number]\n"
"     [-t|--totals]\n"
"     [--target=bfdname] [-V|--version]\n"
"     [objfile...]\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2303
msgid ""
"The GNU E<.Xr size> utility lists the section sizes---and the total "
"size---for each of the object or archive files E<.Va objfile> in its "
"argument list. By default, one line of output is generated for each object "
"file or each module in an archive."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2308
msgid ""
"E<.Va objfile> \\&...are the object files to be examined. If none are "
"specified, the file E<.Li a.out> will be used."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2310 /usr/src/contrib/binutils/binutils/doc/binutils.7:3712
msgid "The command line options have the following meanings:"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2314
#, no-wrap
msgid "--format= Va compatibility"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2330
msgid ""
"Using one of these options, you can choose whether the output from GNU E<.Xr "
"size> resembles output from System V E<.Xr size> (using E<.Op -A>, or E<.Op "
"--format=sysv>), or Berkeley E<.Xr size> (using E<.Op -B>, or E<.Op "
"--format=berkeley>).  The default is the one-line format similar to "
"Berkeley's."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2333
msgid ""
"Here is an example of the Berkeley (default) format of output from E<.Xr "
"size>:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2338
#, no-wrap
msgid ""
"$ size --format=Berkeley ranlib size\n"
"text    data    bss     dec     hex     filename\n"
"294880  81920   11592   388392  5ed28   ranlib\n"
"294880  81920   11888   388688  5ee50   size\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2341
msgid "This is the same data, but displayed closer to System V conventions:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2350
#, no-wrap
msgid ""
"$ size --format=SysV ranlib size\n"
"ranlib  :\n"
"section         size         addr\n"
"\\&.text         294880         8192\n"
"\\&.data          81920       303104\n"
"\\&.bss           11592       385024\n"
"Total         388392\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2358
#, no-wrap
msgid ""
"size  :\n"
"section         size         addr\n"
"\\&.text         294880         8192\n"
"\\&.data          81920       303104\n"
"\\&.bss           11888       385024\n"
"Total         388688\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2362
msgid "Show a summary of acceptable arguments and options."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2366
#, no-wrap
msgid "--radix= Va number"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2389
msgid ""
"Using one of these options, you can control whether the size of each section "
"is given in decimal ( E<.Op -d>, or E<.Op --radix=10>); octal ( E<.Op -o>, "
"or E<.Op --radix=8>); or hexadecimal ( E<.Op -x>, or E<.Op --radix=16>).  In "
"E<.Op --radix= Va number>, only the three values (8, 10, 16) are "
"supported. The total size is always given in two radices; decimal and "
"hexadecimal for E<.Op -d> or E<.Op -x> output, or octal and hexadecimal if "
"you're using E<.Op -o>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2391
#, no-wrap
msgid "--totals"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2393
msgid "Show totals of all objects listed (Berkeley format listing mode only)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2404
msgid ""
"Specify that the object-code format for E<.Va objfile> is E<.Va bfdname>.  "
"This option may not be necessary; E<.Xr size> can automatically recognize "
"many formats.See Section E<.Dq Target Selection>, for more information."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2409
msgid "Display the version number of E<.Xr size>."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2411
#, no-wrap
msgid "strings"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2420
#, no-wrap
msgid ""
"strings [-afov] [-min-len]\n"
"        [-n min-len] [--bytes=min-len]\n"
"        [-t radix] [--radix=radix]\n"
"        [-e encoding] [--encoding=encoding]\n"
"        [-] [--all] [--print-file-name]\n"
"        [-T bfdname] [--target=bfdname]\n"
"        [--help] [--version] file...\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2431
msgid ""
"For each E<.Va file> given, GNU E<.Xr strings> prints the printable "
"character sequences that are at least 4 characters long (or the number given "
"with the options below) and are followed by an unprintable character. By "
"default, it only prints the strings from the initialized and loaded sections "
"of object files; for other types of files, it prints the strings from the "
"whole file."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2434
msgid ""
"E<.Xr strings> is mainly useful for determining the contents of non-text "
"files."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2437 /usr/src/contrib/binutils/binutils/doc/binutils.7:4057
#, no-wrap
msgid "--all"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2441
msgid ""
"Do not scan only the initialized and loaded sections of object files; scan "
"the whole files."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2445
msgid "Print the name of the file before each string."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2448
msgid "Print a summary of the program usage on the standard output and exit."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2449
#, no-wrap
msgid "- Va min-len"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2450
#, no-wrap
msgid "-n Va min-len"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2451
#, no-wrap
msgid "--bytes= Va min-len"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2455
msgid ""
"Print sequences of characters that are at least E<.Va min-len> characters "
"long, instead of the default 4."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2466
msgid ""
"Like E<.Li -t o>.  Some other versions of E<.Xr strings> have E<.Op -o> act "
"like E<.Li -t d> instead. Since we can not be compatible with both ways, we "
"simply chose one."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2477
msgid ""
"Print the offset within the file before each string. The single character "
"argument specifies the radix of the offset--- E<.Li o> for octal, E<.Li x> "
"for hexadecimal, or E<.Li d> for decimal."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2478
#, no-wrap
msgid "-e Va encoding"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2479
#, no-wrap
msgid "--encoding= Va encoding"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2496
msgid ""
"Select the character encoding of the strings that are to be found. Possible "
"values for E<.Va encoding> are: E<.Li s> = single-7-bit-byte characters "
"(ASCII, ISO 8859, etc., default), E<.Li S> = single-8-bit-byte characters, "
"E<.Li b> = 16-bit bigendian, E<.Li l> = 16-bit littleendian, E<.Li B> = "
"32-bit bigendian, E<.Li L> = 32-bit littleendian. Useful for finding wide "
"character strings."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2497
#, no-wrap
msgid "-T Va bfdname"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2506
msgid "Print the program version number on the standard output and exit."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2508
#, no-wrap
msgid "strip"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2526
#, no-wrap
msgid ""
"strip [-F bfdname |--target=bfdname]\n"
"      [-I bfdname |--input-target=bfdname]\n"
"      [-O bfdname |--output-target=bfdname]\n"
"      [-s|--strip-all]\n"
"      [-S|-g|-d|--strip-debug]\n"
"      [-K symbolname |--keep-symbol=symbolname]\n"
"      [-N symbolname |--strip-symbol=symbolname]\n"
"      [-w|--wildcard]\n"
"      [-x|--discard-all] [-X |--discard-locals]\n"
"      [-R sectionname |--remove-section=sectionname]\n"
"      [-o file] [-p|--preserve-dates]\n"
"      [--keep-file-symbols]\n"
"      [--only-keep-debug]\n"
"      [-v |--verbose] [-V|--version]\n"
"      [--help] [--info]\n"
"      objfile...\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2534
msgid ""
"GNU E<.Xr strip> discards all symbols from object files E<.Va objfile>.  The "
"list of object files may include archives. At least one object file must be "
"given."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2538
msgid ""
"E<.Xr strip> modifies the files named in its argument, rather than writing "
"modified copies under different names."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2549
msgid ""
"Treat the original E<.Va objfile> as a file with the object code format "
"E<.Va bfdname>, and rewrite it in the same format.See Section E<.Dq Target "
"Selection>, for more information."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2554
msgid "Show a summary of the options to E<.Xr strip> and exit."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2566
msgid ""
"Treat the original E<.Va objfile> as a file with the object code format "
"E<.Va bfdname>.  See Section.Dq Target Selection , for more information."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2575
msgid ""
"Replace E<.Va objfile> with a file in the output format E<.Va bfdname>.  See "
"Section.Dq Target Selection , for more information."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2586
msgid "Remove all symbols."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2592
msgid "Remove debugging symbols only."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2595
msgid "Remove all symbols that are not needed for relocation processing."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2610
msgid ""
"Remove symbol E<.Va symbolname> from the source file. This option may be "
"given more than once, and may be combined with strip options other than "
"E<.Op -K>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2611
#, no-wrap
msgid "-o Va file"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2618
msgid ""
"Put the stripped output in E<.Va file>, rather than replacing the existing "
"file. When this argument is used, only one E<.Va objfile> argument may be "
"specified."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2622
msgid "Preserve the access and modification dates of the file."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2634
#, no-wrap
msgid "  -w -K !foo -K fo*\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2638
msgid ""
"would cause strip to only keep symbols that start with the letters "
"\\(lqfo\\(rq, but to discard the symbol \\(lqfoo\\(rq."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2642
msgid "Remove non-global symbols."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2649
msgid ""
"Remove compiler-generated local symbols. (These usually start with E<.Li L> "
"or E<.Li>..)"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2710
msgid "Run E<.Li strip --strip-debug foo>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2720
msgid ""
"ie the file pointed to by the E<.Op --add-GNU-debuglink> can be the full "
"executable. It does not have to be a file created by the E<.Op "
"--only-keep-debug> switch."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2731
msgid "Show the version number for E<.Xr strip>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2737
msgid ""
"Verbose output: list all object files modified. In the case of archives, "
"E<.Li strip -v> lists all members of the archive."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2739
#, no-wrap
msgid "c++filt"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2748
#, no-wrap
msgid ""
"c++filt [-_|--strip-underscores]\n"
"        [-n|--no-strip-underscores]\n"
"        [-p|--no-params]\n"
"        [-t|--types]\n"
"        [-i|--no-verbose]\n"
"        [-s format|--format=format]\n"
"        [--help]  [--version]  [symbol...]\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2762
msgid ""
"The C++ and Java languages provide function overloading, which means that "
"you can write many functions with the same name, providing that each "
"function takes parameters of different types. In order to be able to "
"distinguish these similarly named functions C++ and Java encode them into a "
"low-level assembler name which uniquely identifies each different "
"version. This process is known as E<.Em mangling>.  The E<.Xr c++filt> "
"program does the inverse mapping: it decodes ( E<.Em demangles>)  low-level "
"names into user-level names so that they can be read."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2770
msgid ""
"Every alphanumeric word (consisting of letters, digits, underscores, "
"dollars, or periods) seen in the input is a potential mangled name. If the "
"name decodes into a C++ name, the C++ name replaces the low-level name in "
"the output, otherwise the original word is output. In this way you can pass "
"an entire assembler source file, containing mangled names, through E<.Xr "
"c++filt> and see the same source file containing demangled names."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2774
msgid ""
"You can also use E<.Xr c++filt> to decipher individual symbols by passing "
"them on the command line:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2777 /usr/src/contrib/binutils/binutils/doc/binutils.7:2899
#, no-wrap
msgid "c++filt symbol\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2788
msgid ""
"If no E<.Va symbol> arguments are given, E<.Xr c++filt> reads symbol names "
"from the standard input instead. All the results are printed on the standard "
"output. The difference between reading names from the command line versus "
"reading names from the standard input is that command line arguments are "
"expected to be just mangled names and no checking is performed to separate "
"them from surrounding text. Thus for example:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2791
#, no-wrap
msgid "c++filt -n _Z1fv\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2794
msgid "will work and demangle the name to \\(lqf()\\(rq whereas:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2797
#, no-wrap
msgid "c++filt -n _Z1fv,\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2801
msgid ""
"will not work. (Note the extra comma at the end of the mangled name which "
"makes it invalid). This command however will work:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2804
#, no-wrap
msgid "echo _Z1fv, | c++filt -n\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2810
msgid ""
"and will display \\(lqf(),\\(rq ie the demangled name followed by a trailing "
"comma.  This behaviour is because when the names are read from the standard "
"input it is expected that they might be part of an assembler source file "
"where there might be extra, extraneous characters trailing after a mangled "
"name. eg:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2813
#, no-wrap
msgid "    .type   _Z1fv, @function\n"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2816
#, no-wrap
msgid "-_"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2817
#, no-wrap
msgid "--strip-underscores"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2826
msgid ""
"On some systems, both the C and C++ compilers put an underscore in front of "
"every name. For example, the C name E<.Li foo> gets the low-level name E<.Li "
"_foo>.  This option removes the initial underscore. Whether E<.Xr c++filt> "
"removes the underscore by default is target dependent."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2827 /usr/src/contrib/binutils/binutils/doc/binutils.7:3018
#, no-wrap
msgid "-j"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2828
#, no-wrap
msgid "--java"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2830
msgid "Prints demangled names using Java syntax. The default is to use C++ syntax."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2832
#, no-wrap
msgid "--no-strip-underscores"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2834
msgid "Do not remove the initial underscore."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2836
#, no-wrap
msgid "--no-params"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2839
msgid ""
"When demangling the name of a function, do not display the types of the "
"function's parameters."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2841
#, no-wrap
msgid "--types"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2846
msgid ""
"Attempt to demangle types as well as function names. This is disabled by "
"default since mangled types are normally only used internally in the "
"compiler, and they can be confused with non-mangled names. eg a function "
"called \\(lqa\\(rq treated as a mangled type name would be demangled to "
"\\(lqsigned char\\(rq."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2848
#, no-wrap
msgid "--no-verbose"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2850
msgid "Do not include implementation details (if any) in the demangled output."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2851
#, no-wrap
msgid "-s Va format"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2856
msgid ""
"E<.Xr c++filt> can decode various methods of mangling, used by different "
"compilers. The argument to this option selects which method it uses:"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2858
#, no-wrap
msgid "auto"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2860
msgid "Automatic selection based on executable (the default method)"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2860
#, no-wrap
msgid "GNU"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2862
msgid "the one used by the GNU C++ compiler (g++)"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2862
#, no-wrap
msgid "lucid"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2864
msgid "the one used by the Lucid compiler (lcc)"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2864
#, no-wrap
msgid "arm"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2866
msgid "the one specified by the C++ Annotated Reference Manual"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2866
#, no-wrap
msgid "hp"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2868
msgid "the one used by the HP compiler (aCC)"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2868
#, no-wrap
msgid "edg"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2870
msgid "the one used by the EDG compiler"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2870
#, no-wrap
msgid "GNU-v3"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2872
msgid "the one used by the GNU C++ compiler (g++) with the V3 ABI."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2872
#, no-wrap
msgid "java"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2874
msgid "the one used by the GNU Java compiler (gcj)"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2874
#, no-wrap
msgid "gnat"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2876
msgid "the one used by the GNU Ada compiler (GNAT)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2882
msgid "Print a summary of the options to E<.Xr c++filt> and exit."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2887
msgid "Print the version number of E<.Xr c++filt> and exit."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2896
msgid ""
"E<.Qo> E<.Em Warning:> E<.Xr c++filt> is a new utility, and the details of "
"its user interface are subject to change in future releases. In particular, "
"a command-line option may be required in the future to decode a name passed "
"as an argument on the command line; in other words,"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2902
msgid "may in a future release become"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2905
#, no-wrap
msgid "c++filt option symbol\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2907
msgid "E<.Qc>"
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2908
#, no-wrap
msgid "addr2line"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2918
#, no-wrap
msgid ""
"addr2line [-b bfdname|--target=bfdname]\n"
"          [-C|--demangle[=style]]\n"
"          [-e filename|--exe=filename]\n"
"          [-f|--functions] [-s|--basename]\n"
"          [-i|--inlines]\n"
"          [-j|--section=name]\n"
"          [-H|--help] [-V|--version]\n"
"          [addr addr ...]\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2925
msgid ""
"E<.Xr addr2line> translates addresses into file names and line "
"numbers. Given an address in an executable or an offset in a section of a "
"relocatable object, it uses the debugging information to figure out which "
"file name and line number are associated with it."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2933
msgid ""
"The executable or relocatable object to use is specified with the E<.Op -e> "
"option. The default is the file E<.Pa a.out>.  The section in the "
"relocatable object to use is specified with the E<.Op -j> option."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2936
msgid "E<.Xr addr2line> has two modes of operation."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2940
msgid ""
"In the first, hexadecimal addresses are specified on the command line, and "
"E<.Xr addr2line> displays the file name and line number for each address."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2947
msgid ""
"In the second, E<.Xr addr2line> reads hexadecimal addresses from standard "
"input, and prints the file name and line number for each address on standard "
"output. In this mode, E<.Xr addr2line> may be used in a pipe to convert "
"dynamically chosen addresses."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2958
msgid ""
"The format of the output is E<.Li FILENAME:LINENO>.  The file name and line "
"number for each address is printed on a separate line.  If the E<.Xr -f> "
"option is used, then each E<.Li FILENAME:LINENO> line is preceded by a E<.Li "
"FUNCTIONNAME> line which is the name of the function containing the address."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2965
msgid ""
"If the file name or function name can not be determined, E<.Xr addr2line> "
"will print two question marks in their place. If the line number can not be "
"determined, E<.Xr addr2line> will print 0."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2973
msgid "Specify that the object-code format for the object files is E<.Va bfdname>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2986 /usr/src/contrib/binutils/binutils/doc/binutils.7:3726
#, no-wrap
msgid "-e Va filename"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2987
#, no-wrap
msgid "--exe= Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2991
msgid ""
"Specify the name of the executable for which addresses should be "
"translated.  The default file is E<.Pa a.out>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2993
#, no-wrap
msgid "--functions"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2995
msgid "Display function names as well as file and line number information."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2997
#, no-wrap
msgid "--basenames"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:2999
msgid "Display only the base of each file name."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3001
#, no-wrap
msgid "--inlines"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3017
msgid ""
"If the address belongs to a function that was inlined, the source "
"information for all enclosing scopes back to the first non-inlined function "
"will also be printed. For example, if E<.Li main> inlines E<.Li callee1> "
"which inlines E<.Li callee2>, and address is from E<.Li callee2>, the source "
"information for E<.Li callee1> and E<.Li main> will also be printed."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3019
#, no-wrap
msgid "--section"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3021
msgid ""
"Read offsets relative to the specified section instead of absolute "
"addresses."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3023
#, no-wrap
msgid "nlmconv"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3026
msgid ""
"E<.Xr nlmconv> converts a relocatable object file into a NetWare Loadable "
"Module."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3033
msgid ""
"E<.Qo> E<.Em Warning:> E<.Xr nlmconv> is not always built as part of the "
"binary utilities, since it is only useful for NLM targets.  E<.Qc>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3041
#, no-wrap
msgid ""
"nlmconv [-I bfdname|--input-target=bfdname]\n"
"        [-O bfdname|--output-target=bfdname]\n"
"        [-T headerfile|--header-file=headerfile]\n"
"        [-d|--debug] [-l linker|--linker=linker]\n"
"        [-h|--help] [-V|--version]\n"
"        infile outfile\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3065
msgid ""
"E<.Xr nlmconv> converts the relocatable E<.Li i386> object file E<.Va "
"infile> into the NetWare Loadable Module E<.Va outfile>, optionally reading "
"E<.Va headerfile> for NLM header information. For instructions on writing "
"the NLM command file language used in header files, see the E<.Li linkers> "
"section, E<.Li NLMLINK> in particular, of the E<.Em NLM Development and "
"Tools Overview>, which is part of the NLM Software Developer's Kit (\\(lqNLM "
"SDK\\(rq), available from Novell, Inc.  E<.Xr nlmconv> uses the GNU Binary "
"File Descriptor library to read E<.Va infile>; see BFD,,BFD,ld.info,Using "
"LD, for more information."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3072
msgid ""
"E<.Xr nlmconv> can perform a link step. In other words, you can list more "
"than one object file for input if you list them in the definitions file "
"(rather than simply specifying one input file on the command line). In this "
"case, E<.Xr nlmconv> calls the linker for you."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3081
msgid ""
"Object format of the input file.  E<.Xr nlmconv> can usually determine the "
"format of a given file (so no default is necessary).See Section E<.Dq Target "
"Selection>, for more information."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3092
msgid ""
"Object format of the output file.  E<.Xr nlmconv> infers the output format "
"based on the input format, e.g. for a E<.Li i386> input file the output "
"format is E<.Li nlm32-i386>.  See Section.Dq Target Selection , for more "
"information."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3093
#, no-wrap
msgid "-T Va headerfile"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3094
#, no-wrap
msgid "--header-file= Va headerfile"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3104
msgid ""
"Reads E<.Va headerfile> for NLM header information. For instructions on "
"writing the NLM command file language used in header files, see see the "
"E<.Li linkers> section, of the E<.Em NLM Development and Tools Overview>, "
"which is part of the NLM Software Developer's Kit, available from Novell, "
"Inc."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3106
#, no-wrap
msgid "--debug"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3109
msgid "Displays (on standard error) the linker command line used by E<.Xr nlmconv>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3110
#, no-wrap
msgid "-l Va linker"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3111
#, no-wrap
msgid "--linker= Va linker"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3117
msgid ""
"Use E<.Va linker> for any linking.  E<.Va linker> can be an absolute or a "
"relative pathname."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3121 /usr/src/contrib/binutils/binutils/doc/binutils.7:3545
msgid "Prints a usage summary."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3126
msgid "Prints the version number for E<.Xr nlmconv>."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3128
#, no-wrap
msgid "windmc"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3131
msgid "E<.Xr windmc> may be used to generator Windows message resources."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3138
msgid ""
"E<.Qo> E<.Em Warning:> E<.Xr windmc> is not always built as part of the "
"binary utilities, since it is only useful for Windows targets.  E<.Qc>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3141
#, no-wrap
msgid "windmc [options] input-file\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3146
msgid ""
"E<.Xr windmc> reads message definitions from an input file (.mc) and "
"translate them into a set of output files. The output files may be of four "
"kinds:"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3148
#, no-wrap
msgid "h"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3150
msgid "A C header file containing the message definitions."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3151 /usr/src/contrib/binutils/binutils/doc/binutils.7:3316
#, no-wrap
msgid "rc"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3155
msgid "A resource file compilable by the E<.Xr windres> tool."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3156
#, no-wrap
msgid "bin"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3159
msgid ""
"One or more binary files containing the resource data for a specific message "
"language."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3160
#, no-wrap
msgid "dbg"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3162
msgid "A C include file that maps message id's to their symbolic name."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3166 /usr/src/contrib/binutils/binutils/doc/binutils.7:3328
msgid ""
"The exact description of these different formats is available in "
"documentation from Microsoft."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3179
msgid ""
"When E<.Xr windmc> converts from the E<.Li mc> format to the E<.Li bin> "
"format, E<.Li rc>, E<.Li h>, and optional E<.Li dbg> it is acting like the "
"Windows Message Compiler."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3182
#, no-wrap
msgid "--ascii_in"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3184
msgid ""
"Specifies that the input file specified is ANSI. This is the default "
"behaviour."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3186
#, no-wrap
msgid "--ascii_out"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3190
msgid ""
"Specifies that messages in the output E<.Li bin> files should be in ANSI "
"format."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3191
#, no-wrap
msgid "-b"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3192
#, no-wrap
msgid "--binprefix"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3196
msgid ""
"Specifies that E<.Li bin> filenames should have to be prefixed by the "
"basename of the source file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3197 /usr/src/contrib/binutils/binutils/doc/binutils.7:3880
#, no-wrap
msgid "-c"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3198
#, no-wrap
msgid "--customflag"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3200
msgid "Sets the customer bit in all message id's."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3201
#, no-wrap
msgid "-C Va codepage"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3202
#, no-wrap
msgid "--codepage_in Va codepage"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3205
msgid ""
"Sets the default codepage to be used to convert input file to UTF16. The "
"default is ocdepage 1252."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3207
#, no-wrap
msgid "--decimal_values"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3210
msgid ""
"Outputs the constants in the header file in decimal. Default is using "
"hexadecimal output."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3211
#, no-wrap
msgid "-e Va ext"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3212
#, no-wrap
msgid "--extension Va ext"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3214
msgid "The extension for the header file. The default is .h extension."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3215 /usr/src/contrib/binutils/binutils/doc/binutils.7:3443
#, no-wrap
msgid "-F Va target"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3216 /usr/src/contrib/binutils/binutils/doc/binutils.7:3444
#, no-wrap
msgid "--target Va target"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3225
msgid ""
"Specify the BFD format to use for a bin file as output. This is a BFD target "
"name; you can use the E<.Op --help> option to see a list of supported "
"targets. Normally E<.Xr windmc> will use the default format, which is the "
"first one listed by the E<.Op --help> option. Target Selection."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3226
#, no-wrap
msgid "-h Va path"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3227
#, no-wrap
msgid "--headerdir Va path"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3230
msgid ""
"The target directory of the generated header file. The default is the "
"current directory."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3234 /usr/src/contrib/binutils/binutils/doc/binutils.7:3919
msgid "Displays a list of command line options and then exits."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3235
#, no-wrap
msgid "-m Va characters"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3236
#, no-wrap
msgid "--maxlength Va characters"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3240
msgid ""
"Instructs E<.Xr windmc> to generate a warning if the length of any message "
"exceeds the number specified."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3242
#, no-wrap
msgid "--nullterminate"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3246
msgid ""
"Terminate message text in E<.Li bin> files by zero. By default they are "
"terminated by CR/LF."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3248
#, no-wrap
msgid "--hresult_use"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3253
msgid ""
"Not yet implemented. Instructs E<.Li windmc> to generate an OLE2 header "
"file, using HRESULT definitions. Status codes are used if the flag is not "
"specified."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3254
#, no-wrap
msgid "-O Va codepage"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3255
#, no-wrap
msgid "--codepage_out Va codepage"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3258
msgid ""
"Sets the default codepage to be used to output text files. The default is "
"ocdepage 1252."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3259
#, no-wrap
msgid "-r Va path"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3260
#, no-wrap
msgid "--rcdir Va path"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3267
msgid ""
"The target directory for the generated E<.Li rc> script and the generated "
"E<.Li bin> files that the resource compiler script includes. The default is "
"the current directory."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3269
#, no-wrap
msgid "--unicode_in"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3271
msgid "Specifies that the input file is UTF16."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3272 /usr/src/contrib/binutils/binutils/doc/binutils.7:3827
#, no-wrap
msgid "-U"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3273
#, no-wrap
msgid "--unicode_out"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3277
msgid ""
"Specifies that messages in the output E<.Li bin> file should be in UTF16 "
"format. This is the default behaviour."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3282 /usr/src/contrib/binutils/binutils/doc/binutils.7:3511
msgid ""
"Enable verbose mode. This tells you what the preprocessor is if you didn't "
"specify one."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3287 /usr/src/contrib/binutils/binutils/doc/binutils.7:3550
msgid "Prints the version number for E<.Xr windres>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3288
#, no-wrap
msgid "-x Va path"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3289
#, no-wrap
msgid "--xdgb Va path"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3294
msgid ""
"The path of the E<.Li dbg> C include file that maps message id's to the "
"symbolic name. No such file is generated without specifying the switch."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3296
#, no-wrap
msgid "windres"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3299
msgid "E<.Xr windres> may be used to manipulate Windows resources."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3306
msgid ""
"E<.Qo> E<.Em Warning:> E<.Xr windres> is not always built as part of the "
"binary utilities, since it is only useful for Windows targets.  E<.Qc>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3309
#, no-wrap
msgid "windres [options] [input-file] [output-file]\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3314
msgid ""
"E<.Xr windres> reads resources from an input file and copies them into an "
"output file. Either file may be in one of three formats:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3318
msgid "A text format read by the Resource Compiler."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3319
#, no-wrap
msgid "res"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3321
msgid "A binary format generated by the Resource Compiler."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3322
#, no-wrap
msgid "coff"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3324
msgid "A COFF object or executable."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3344
msgid ""
"When E<.Xr windres> converts from the E<.Li rc> format to the E<.Li res> "
"format, it is acting like the Windows Resource Compiler. When E<.Xr windres> "
"converts from the E<.Li res> format to the E<.Li coff> format, it is acting "
"like the Windows E<.Li CVTRES> program."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3355
msgid ""
"When E<.Xr windres> generates an E<.Li rc> file, the output is similar but "
"not identical to the format expected for the input. When an input E<.Li rc> "
"file refers to an external filename, an output E<.Li rc> file will instead "
"include the file contents."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3374
msgid ""
"If the input or output format is not specified, E<.Xr windres> will guess "
"based on the file name, or, for the input file, the file contents.  A file "
"with an extension of E<.Pa .rc> will be treated as an E<.Li rc> file, a file "
"with an extension of E<.Pa .res> will be treated as a E<.Li res> file, and a "
"file with an extension of E<.Pa .o> or E<.Pa .exe> will be treated as a "
"E<.Li coff> file."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3380
msgid ""
"If no output file is specified, E<.Xr windres> will print the resources in "
"E<.Li rc> format to standard output."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3389
msgid ""
"The normal use is for you to write an E<.Li rc> file, use E<.Xr windres> to "
"convert it to a COFF object file, and then link the COFF file into your "
"application. This will make the resources described in the E<.Li rc> file "
"available to Windows."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3391
#, no-wrap
msgid "-i Va filename"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3392
#, no-wrap
msgid "--input Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3401
msgid ""
"The name of the input file. If this option is not used, then E<.Xr windres> "
"will use the first non-option argument as the input file name. If there are "
"no non-option arguments, then E<.Xr windres> will read from standard input.  "
"E<.Xr windres> can not read a COFF file from standard input."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3402
#, no-wrap
msgid "-o Va filename"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3403
#, no-wrap
msgid "--output Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3416
msgid ""
"The name of the output file. If this option is not used, then E<.Xr windres> "
"will use the first non-option argument, after any used for the input file "
"name, as the output file name. If there is no non-option argument, then "
"E<.Xr windres> will write to standard output.  E<.Xr windres> can not write "
"a COFF file to standard output. Note, for compatibility with E<.Xr rc> the "
"option E<.Op -fo> is also accepted, but its use is not recommended."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3417
#, no-wrap
msgid "-J Va format"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3418
#, no-wrap
msgid "--input-format Va format"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3429
msgid ""
"The input format to read.  E<.Va format> may be E<.Li res>, E<.Li rc>, or "
"E<.Li coff>.  If no input format is specified, E<.Xr windres> will guess, as "
"described above."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3430
#, no-wrap
msgid "-O Va format"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3431
#, no-wrap
msgid "--output-format Va format"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3442
msgid ""
"The output format to generate.  E<.Va format> may be E<.Li res>, E<.Li rc>, "
"or E<.Li coff>.  If no output format is specified, E<.Xr windres> will "
"guess, as described above."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3453
msgid ""
"Specify the BFD format to use for a COFF file as input or output. This is a "
"BFD target name; you can use the E<.Op --help> option to see a list of "
"supported targets. Normally E<.Xr windres> will use the default format, "
"which is the first one listed by the E<.Op --help> option. Target Selection."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3454
#, no-wrap
msgid "--preprocessor Va program"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3463
msgid ""
"When E<.Xr windres> reads an E<.Li rc> file, it runs it through the C "
"preprocessor first. This option may be used to specify the preprocessor to "
"use, including any leading arguments. The default preprocessor argument is "
"E<.Li gcc -E -xc-header -DRC_INVOKED>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3464
#, no-wrap
msgid "-I Va directory"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3465
#, no-wrap
msgid "--include-dir Va directory"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3488
msgid ""
"Specify an include directory to use when reading an E<.Li rc> file.  E<.Xr "
"windres> will pass this to the preprocessor as an E<.Op -I> option.  E<.Xr "
"windres> will also search this directory when looking for files named in the "
"E<.Li rc> file. If the argument passed to this command matches any of the "
"supported E<.Va formats> (as described in the E<.Op -J> option), it will "
"issue a deprecation warning, and behave just like the E<.Op -J> option. New "
"programs should not use this behaviour. If a directory happens to match a "
"E<.Va format>, simple prefix it with E<.Li ./> to disable the backward "
"compatibility."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3489
#, no-wrap
msgid "-D Va target"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3490
#, no-wrap
msgid "--define Va sym[= Va val]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3496
msgid ""
"Specify a E<.Op -D> option to pass to the preprocessor when reading an E<.Li "
"rc> file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3497
#, no-wrap
msgid "-U Va target"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3498
#, no-wrap
msgid "--undefine Va sym"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3504
msgid ""
"Specify a E<.Op -U> option to pass to the preprocessor when reading an E<.Li "
"rc> file."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3507
msgid "Ignored for compatibility with rc."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3512
#, no-wrap
msgid "-c Va val"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3513
#, no-wrap
msgid "--codepage Va val"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3522
msgid ""
"Specify the default codepage to use when reading an E<.Li rc> file.  E<.Va "
"val> should be a hexadecimal prefixed by E<.Li 0x> or decimal codepage "
"code. The valid range is from zero up to 0xffff, but the validity of the "
"codepage is host and configuration dependent."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3523
#, no-wrap
msgid "-l Va val"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3524
#, no-wrap
msgid "--language Va val"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3531
msgid ""
"Specify the default language to use when reading an E<.Li rc> file.  E<.Va "
"val> should be a hexadecimal language code. The low eight bits are the "
"language, and the high eight bits are the sublanguage."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3532
#, no-wrap
msgid "--use-temp-file"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3537
msgid ""
"Use a temporary file to instead of using popen to read the output of the "
"preprocessor.  Use this option if the popen implementation is buggy on the "
"host (eg., certain non-English language versions of Windows 95 and Windows "
"98 are known to have buggy popen where the output will instead go the "
"console)."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3538
#, no-wrap
msgid "--no-use-temp-file"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3541
msgid ""
"Use popen, not a temporary file, to read the output of the "
"preprocessor. This is the default behaviour."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3551
#, no-wrap
msgid "--yydebug"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3559
msgid ""
"If E<.Xr windres> is compiled with E<.Li YYDEBUG> defined as E<.Li 1>, this "
"will turn on parser debugging."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3561
#, no-wrap
msgid "dlltool"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3567
msgid ""
"E<.Xr dlltool> is used to create the files needed to create dynamic link "
"libraries (DLLs)  on systems which understand PE format image files such as "
"Windows. A DLL contains an export table which contains information that the "
"runtime loader needs to resolve references from a referencing program."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3579
msgid ""
"The export table is generated by this program by reading in a E<.Pa .def> "
"file or scanning the E<.Pa .a> and E<.Pa .o> files which will be in the "
"DLL. A E<.Pa .o> file can contain information in special E<.Li .drectve> "
"sections with export information."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3586
msgid ""
"E<.Qo> E<.Em Note:> E<.Xr dlltool> is not always built as part of the binary "
"utilities, since it is only useful for those targets which support DLLs.  "
"E<.Qc>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3607
#, no-wrap
msgid ""
"dlltool [-d|--input-def def-file-name]\n"
"        [-b|--base-file base-file-name]\n"
"        [-e|--output-exp exports-file-name]\n"
"        [-z|--output-def def-file-name]\n"
"        [-l|--output-lib library-file-name]\n"
"        [--export-all-symbols] [--no-export-all-symbols]\n"
"        [--exclude-symbols list]\n"
"        [--no-default-excludes]\n"
"        [-S|--as path-to-assembler] [-f|--as-flags options]\n"
"        [-D|--dllname name] [-m|--machine machine]\n"
"        [-a|--add-indirect]\n"
"        [-U|--add-underscore] [--add-stdcall-underscore]\n"
"        [-k|--kill-at] [-A|--add-stdcall-alias]\n"
"        [-p|--ext-prefix-alias prefix]\n"
"        [-x|--no-idata4] [-c|--no-idata5] [-i|--interwork]\n"
"        [-n|--nodelete] [-t|--temp-prefix prefix]\n"
"        [-v|--verbose]\n"
"        [-h|--help] [-V|--version]\n"
"        [object-file ...]\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3627
msgid ""
"E<.Xr dlltool> reads its inputs, which can come from the E<.Op -d> and E<.Op "
"-b> options as well as object files specified on the command line. It then "
"processes these inputs and if the E<.Op -e> option has been specified it "
"creates a exports file. If the E<.Op -l> option has been specified it "
"creates a library file and if the E<.Op -z> option has been specified it "
"creates a def file. Any or all of the E<.Op -e>, E<.Op -l> and E<.Op -z> "
"options can be present in one invocation of dlltool."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3632
msgid ""
"When creating a DLL, along with the source for the DLL, it is necessary to "
"have three other files.  E<.Xr dlltool> can help with the creation of these "
"files."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3648
msgid ""
"The first file is a E<.Pa .def> file which specifies which functions are "
"exported from the DLL, which functions the DLL imports, and so on. This is a "
"text file and can be created by hand, or E<.Xr dlltool> can be used to "
"create it using the E<.Op -z> option. In this case E<.Xr dlltool> will scan "
"the object files specified on its command line looking for those functions "
"which have been specially marked as being exported and put entries for them "
"in the E<.Pa .def> file it creates."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3655
msgid ""
"In order to mark a function as being exported from a DLL, it needs to have "
"an E<.Op -export:E<lt>name_of_functionE<gt>> entry in the E<.Li .drectve> "
"section of the object file. This can be done in C by using the asm() "
"operator:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3659
#, no-wrap
msgid ""
"  asm (\".section .drectve\");\n"
"  asm (\".ascii \\e\"-export:my_func\\e\"\");\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3661
#, no-wrap
msgid "  int my_func (void) { ... }\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3673
msgid ""
"The second file needed for DLL creation is an exports file. This file is "
"linked with the object files that make up the body of the DLL and it handles "
"the interface between the DLL and the outside world. This is a binary file "
"and it can be created by giving the E<.Op -e> option to E<.Xr dlltool> when "
"it is creating or reading in a E<.Pa .def> file."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3681
msgid ""
"The third file needed for DLL creation is the library file that programs "
"will link with in order to access the functions in the DLL. This file can be "
"created by giving the E<.Op -l> option to dlltool when it is creating or "
"reading in a E<.Pa .def> file."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3697
msgid ""
"E<.Xr dlltool> builds the library file by hand, but it builds the exports "
"file by creating temporary files containing assembler statements and then "
"assembling these.  The E<.Op -S> command line option can be used to specify "
"the path to the assembler that dlltool will use, and the E<.Op -f> option "
"can be used to pass specific flags to that assembler. The E<.Op -n> can be "
"used to prevent dlltool from deleting these temporary assembler files when "
"it is done, and if E<.Op -n> is specified twice then this will prevent "
"dlltool from deleting the temporary object files it used to build the "
"library."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3703
msgid ""
"Here is an example of creating a DLL from a source file E<.Li dll.c> and "
"also creating a program (from an object file called E<.Li program.o>)  that "
"uses that DLL:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3709
#, no-wrap
msgid ""
"  gcc -c dll.c\n"
"  dlltool -e exports.o -l dll.lib dll.o\n"
"  gcc dll.o exports.o -o dll.dll\n"
"  gcc program.o dll.lib -o program\n"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3714
#, no-wrap
msgid "-d Va filename"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3715
#, no-wrap
msgid "--input-def Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3719
msgid "Specifies the name of a E<.Pa .def> file to be read in and processed."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3720
#, no-wrap
msgid "-b Va filename"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3721
#, no-wrap
msgid "--base-file Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3725
msgid ""
"Specifies the name of a base file to be read in and processed. The contents "
"of this file will be added to the relocation section in the exports file "
"generated by dlltool."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3727
#, no-wrap
msgid "--output-exp Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3729
msgid "Specifies the name of the export file to be created by dlltool."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3730
#, no-wrap
msgid "-z Va filename"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3731
#, no-wrap
msgid "--output-def Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3735
msgid "Specifies the name of the E<.Pa .def> file to be created by dlltool."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3736
#, no-wrap
msgid "-l Va filename"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3737
#, no-wrap
msgid "--output-lib Va filename"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3739
msgid "Specifies the name of the library file to be created by dlltool."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3740
#, no-wrap
msgid "--export-all-symbols"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3748
msgid ""
"Treat all global and weak defined symbols found in the input object files as "
"symbols to be exported. There is a small list of symbols which are not "
"exported by default; see the E<.Op --no-default-excludes> option. You may "
"add to the list of symbols to not export by using the E<.Op "
"--exclude-symbols> option."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3749
#, no-wrap
msgid "--no-export-all-symbols"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3759
msgid ""
"Only export symbols explicitly listed in an input E<.Pa .def> file or in "
"E<.Li .drectve> sections in the input object files. This is the default "
"behaviour. The E<.Li .drectve> sections are created by E<.Li dllexport> "
"attributes in the source code."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3760
#, no-wrap
msgid "--exclude-symbols Va list"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3768
msgid ""
"Do not export the symbols in E<.Va list>.  This is a list of symbol names "
"separated by comma or colon characters. The symbol names should not contain "
"a leading underscore. This is only meaningful when E<.Op "
"--export-all-symbols> is used."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3769
#, no-wrap
msgid "--no-default-excludes"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3783
msgid ""
"When E<.Op --export-all-symbols> is used, it will by default avoid exporting "
"certain special symbols. The current list of symbols to avoid exporting is "
"E<.Li DllMain@12>, E<.Li DllEntryPoint@0>, E<.Li impure_ptr>.  You may use "
"the E<.Op --no-default-excludes> option to go ahead and export these special "
"symbols. This is only meaningful when E<.Op --export-all-symbols> is used."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3784
#, no-wrap
msgid "-S Va path"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3785
#, no-wrap
msgid "--as Va path"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3788
msgid ""
"Specifies the path, including the filename, of the assembler to be used to "
"create the exports file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3789
#, no-wrap
msgid "-f Va options"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3790
#, no-wrap
msgid "--as-flags Va options"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3798
msgid ""
"Specifies any specific command line options to be passed to the assembler "
"when building the exports file. This option will work even if the E<.Op -S> "
"option is not used. This option only takes one argument, and if it occurs "
"more than once on the command line, then later occurrences will override "
"earlier occurrences. So if it is necessary to pass multiple options to the "
"assembler they should be enclosed in double quotes."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3799
#, no-wrap
msgid "-D Va name"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3800
#, no-wrap
msgid "--dll-name Va name"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3809
msgid ""
"Specifies the name to be stored in the E<.Pa .def> file as the name of the "
"DLL when the E<.Op -e> option is used. If this option is not present, then "
"the filename given to the E<.Op -e> option will be used as the name of the "
"DLL."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3811
#, no-wrap
msgid "-machine Va machine"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3818
msgid ""
"Specifies the type of machine for which the library file should be built.  "
"E<.Xr dlltool> has a built in default type, depending upon how it was "
"created, but this option can be used to override that. This is normally only "
"useful when creating DLLs for an ARM processor, when the contents of the DLL "
"are actually encode using Thumb instructions."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3820
#, no-wrap
msgid "--add-indirect"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3826
msgid ""
"Specifies that when E<.Xr dlltool> is creating the exports file it should "
"add a section which allows the exported functions to be referenced without "
"using the import library. Whatever the hell that means!"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3828
#, no-wrap
msgid "--add-underscore"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3835
msgid ""
"Specifies that when E<.Xr dlltool> is creating the exports file it should "
"prepend an underscore to the names of E<.Em all> exported symbols."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3836
#, no-wrap
msgid "--add-stdcall-underscore"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3845
msgid ""
"Specifies that when E<.Xr dlltool> is creating the exports file it should "
"prepend an underscore to the names of exported E<.Em stdcall> "
"functions. Variable names and non-stdcall function names are not modified.  "
"This option is useful when creating GNU-compatible import libs for third "
"party DLLs that were built with MS-Windows tools."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3846
#, no-wrap
msgid "-k"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3847
#, no-wrap
msgid "--kill-at"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3854
msgid ""
"Specifies that when E<.Xr dlltool> is creating the exports file it should "
"not append the string E<.Li @ E<lt>numberE<gt>>.  These numbers are called "
"ordinal numbers and they represent another way of accessing the function in "
"a DLL, other than by name."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3856
#, no-wrap
msgid "--add-stdcall-alias"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3863
msgid ""
"Specifies that when E<.Xr dlltool> is creating the exports file it should "
"add aliases for stdcall symbols without E<.Li @ E<lt>numberE<gt>> in "
"addition to the symbols with E<.Li @ E<lt>numberE<gt>>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3865
#, no-wrap
msgid "--ext-prefix-alias Va prefix"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3871
msgid ""
"Causes E<.Xr dlltool> to create external aliases for all DLL imports with "
"the specified prefix.  The aliases are created for both external and import "
"symbols with no leading underscore."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3873
#, no-wrap
msgid "--no-idata4"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3879
msgid ""
"Specifies that when E<.Xr dlltool> is creating the exports and library files "
"it should omit the E<.Li .idata4> section. This is for compatibility with "
"certain operating systems."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3881
#, no-wrap
msgid "--no-idata5"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3887
msgid ""
"Specifies that when E<.Xr dlltool> is creating the exports and library files "
"it should omit the E<.Li .idata5> section. This is for compatibility with "
"certain operating systems."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3889
#, no-wrap
msgid "--interwork"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3894
msgid ""
"Specifies that E<.Xr dlltool> should mark the objects in the library file "
"and exports file that it produces as supporting interworking between ARM and "
"Thumb code."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3896
#, no-wrap
msgid "--nodelete"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3902
msgid ""
"Makes E<.Xr dlltool> preserve the temporary assembler files it used to "
"create the exports file.  If this option is repeated then dlltool will also "
"preserve the temporary object files it uses to create the library file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3903
#, no-wrap
msgid "-t Va prefix"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3904
#, no-wrap
msgid "--temp-prefix Va prefix"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3911
msgid ""
"Makes E<.Xr dlltool> use E<.Va prefix> when constructing the names of "
"temporary assembler and object files. By default, the temp file prefix is "
"generated from the pid."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3915
msgid "Make dlltool describe what it is doing."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3923
msgid "Displays dlltool's version number and then exits."
msgstr ""

#. type: Ss
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3925
#, no-wrap
msgid "The format of the Xr dlltool Pa .def file"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3929
msgid "A E<.Pa .def> file contains any number of the following commands:"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3931
#, no-wrap
msgid "Li NAME Va name Li [ , Va base Li ]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3935
msgid "The result is going to be named E<.Va name> E<.Li .exe>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3936
#, no-wrap
msgid "Li LIBRARY Va name Li [ , Va base Li ]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3940
msgid "The result is going to be named E<.Va name> E<.Li .dll>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3941
#, no-wrap
msgid ""
"Li EXPORTS ( ( ( Va name1 Li [ = Va name2 Li ] ) | ( Va name1 Li = Va "
"module-name Li . Va external-name Li ) )"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3942
#, no-wrap
msgid "Li [ Va integer Li ] [ NONAME ] [ CONSTANT ] [ DATA ] [ PRIVATE ] ) *"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3953
msgid ""
"Declares E<.Va name1> as an exported symbol from the DLL, with optional "
"ordinal number E<.Va integer>, or declares E<.Va name1> as an alias "
"(forward) of the function E<.Va external-name> in the DLL E<.Va "
"module-name>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3954
#, no-wrap
msgid ""
"Li IMPORTS ( ( Va internal-name Li = Va module-name Li . Va integer Li ) | [ "
"Va internal-name Li = ] Va module-name Li . Va external-name Li ) ) *"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3965
msgid ""
"Declares that E<.Va external-name> or the exported function whose ordinal "
"number is E<.Va integer> is to be imported from the file E<.Va "
"module-name>.  If E<.Va internal-name> is specified then this is the name "
"that the imported function will be referred to in the body of the DLL."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3966
#, no-wrap
msgid "Li DESCRIPTION Va string"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3974
msgid ""
"Puts E<.Va string> into the output E<.Pa .exp> file in the E<.Li .rdata> "
"section."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3975
#, no-wrap
msgid "Li STACKSIZE Va number-reserve Li [, Va number-commit Li ]"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3976
#, no-wrap
msgid "Li HEAPSIZE Va number-reserve Li [, Va number-commit Li ]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3987
msgid ""
"Generates E<.Li --stack> or E<.Li --heap> E<.Va number-reserve> , E<.Va "
"number-commit> in the output E<.Li .drectve> section. The linker will see "
"this and act upon it."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3988
#, no-wrap
msgid "Li CODE Va attr Li +"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3989
#, no-wrap
msgid "Li DATA Va attr Li +"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:3990
#, no-wrap
msgid "Li SECTIONS ( Va section-name Va attr Li + ) *"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4006
msgid ""
"Generates E<.Li --attr> E<.Va section-name> E<.Va attr> in the output E<.Li "
".drectve> section, where E<.Va attr> is one of E<.Li READ>, E<.Li WRITE>, "
"E<.Li EXECUTE> or E<.Li SHARED>.  The linker will see this and act upon it."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4008
#, no-wrap
msgid "readelf"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4033
#, no-wrap
msgid ""
"readelf [-a|--all]\n"
"        [-h|--file-header]\n"
"        [-l|--program-headers|--segments]\n"
"        [-S|--section-headers|--sections]\n"
"        [-g|--section-groups]\n"
"        [-t|--section-details]\n"
"        [-e|--headers]\n"
"        [-s|--syms|--symbols]\n"
"        [-n|--notes]\n"
"        [-r|--relocs]\n"
"        [-u|--unwind]\n"
"        [-d|--dynamic]\n"
"        [-V|--version-info]\n"
"        [-A|--arch-specific]\n"
"        [-D|--use-dynamic]\n"
"        [-x E<lt>number or nameE<gt>|--hex-dump=E<lt>number or nameE<gt>]\n"
"        [-w[liaprmfFsoR]|\n"
"         "
"--debug-dump[=line,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames-interp,=str,=loc,=Ranges]]\n"
"        [-I|-histogram]\n"
"        [-v|--version]\n"
"        [-W|--wide]\n"
"        [-H|--help]\n"
"        elffile...\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4038
msgid ""
"E<.Xr readelf> displays information about one or more ELF format object "
"files. The options control what particular information to display."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4042
msgid ""
"E<.Va elffile> \\&...are the object files to be examined. 32-bit and 64-bit "
"ELF files are supported, as are archives containing ELF files."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4047
msgid ""
"This program performs a similar function to E<.Xr objdump> but it goes into "
"more detail and it exists independently of the bfd library, so if there is a "
"bug in bfd then readelf will not be affected."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4054
msgid ""
"The long and short forms of options, shown here as alternatives, are "
"equivalent.  At least one option besides E<.Li -v> or E<.Li -H> must be "
"given."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4068
msgid ""
"Equivalent to specifying E<.Op --file-header>, E<.Op --program-headers>, "
"E<.Op --sections>, E<.Op --symbols>, E<.Op --relocs>, E<.Op --dynamic>, "
"E<.Op --notes> and E<.Op --version-info>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4070
#, no-wrap
msgid "--file-header"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4072
msgid ""
"Displays the information contained in the ELF header at the start of the "
"file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4074
#, no-wrap
msgid "--program-headers"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4075
#, no-wrap
msgid "--segments"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4078
msgid ""
"Displays the information contained in the file's segment headers, if it has "
"any."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4080
#, no-wrap
msgid "--sections"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4084
msgid ""
"Displays the information contained in the file's section headers, if it has "
"any."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4086
#, no-wrap
msgid "--section-groups"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4089
msgid ""
"Displays the information contained in the file's section groups, if it has "
"any."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4091
#, no-wrap
msgid "--section-details"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4094
msgid "Displays the detailed section information. Implies E<.Op -S>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4096
#, no-wrap
msgid "--symbols"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4099
msgid "Displays the entries in symbol table section of the file, if it has one."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4104
msgid "Display all the headers in the file. Equivalent to E<.Op -h -l -S>."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4106
#, no-wrap
msgid "--notes"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4108
msgid "Displays the contents of the NOTE segments and/or sections, if any."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4110
#, no-wrap
msgid "--relocs"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4112
msgid "Displays the contents of the file's relocation section, if it has one."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4114
#, no-wrap
msgid "--unwind"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4117
msgid ""
"Displays the contents of the file's unwind section, if it has one. Only the "
"unwind sections for IA64 ELF files are currently supported."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4121
msgid "Displays the contents of the file's dynamic section, if it has one."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4123
#, no-wrap
msgid "--version-info"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4125
msgid "Displays the contents of the version sections in the file, it they exist."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4127
#, no-wrap
msgid "--arch-specific"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4129
msgid "Displays architecture-specific information in the file, if there is any."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4131
#, no-wrap
msgid "--use-dynamic"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4136
msgid ""
"When displaying symbols, this option makes E<.Xr readelf> use the symbol "
"table in the file's dynamic section, rather than the one in the symbols "
"section."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4137
#, no-wrap
msgid "-x E<lt>number or nameE<gt>"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4138
#, no-wrap
msgid "--hex-dump=E<lt>number or nameE<gt>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4142
msgid ""
"Displays the contents of the indicated section as a hexadecimal dump. A "
"number identifies a particular section by index in the section table; any "
"other string identifies all sections with that name in the object file."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4143
#, no-wrap
msgid "-w[liaprmfFsoR]"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4144
#, no-wrap
msgid "--debug-dump[=line,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames-interp,=str,=loc,=Ranges]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4148
msgid ""
"Displays the contents of the debug sections in the file, if any are "
"present.  If one of the optional letters or words follows the switch then "
"only data found in those specific sections will be dumped."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4149
#, no-wrap
msgid "-I"
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4150
#, no-wrap
msgid "--histogram"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4153
msgid ""
"Display a histogram of bucket list lengths when displaying the contents of "
"the symbol tables."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4157
msgid "Display the version number of readelf."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4167
msgid ""
"Don't break output lines to fit into 80 columns. By default E<.Xr readelf> "
"breaks section header and segment listing lines for 64-bit ELF files, so "
"that they fit into 80 columns. This option causes E<.Xr readelf> to print "
"each section header resp. each segment one a single line, which is far more "
"readable on terminals wider than 80 columns."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4172
msgid "Display the command line options understood by E<.Xr readelf>."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4174
#, no-wrap
msgid "Common Options"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4177
msgid ""
"The following command-line options are supported by all of the programs "
"described in this manual."
msgstr ""

#. type: It
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4179
#, no-wrap
msgid "@ Va file"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4188
msgid ""
"Read command-line options from E<.Va file>.  The options read are inserted "
"in place of the original @ E<.Va file> option. If E<.Va file> does not "
"exist, or cannot be read, then the option will be treated literally, and not "
"removed."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4199
msgid ""
"Options in E<.Va file> are separated by whitespace. A whitespace character "
"may be included in an option by surrounding the entire option in either "
"single or double quotes.  Any character (including a backslash) may be "
"included by prefixing the character to be included with a backslash. The "
"E<.Va file> may itself contain additional @ E<.Va file> options; any such "
"options will be processed recursively."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4202
msgid "Display the command-line options supported by the program."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4205
msgid "Display the version number of the program."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4207
#, no-wrap
msgid "Selecting the Target System"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4210
msgid ""
"You can specify two aspects of the target system to the GNU binary file "
"utilities, each in several ways:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4214
msgid "the target"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4217
msgid "the architecture"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4221
msgid ""
"In the following summaries, the lists of ways to specify values are in order "
"of decreasing precedence. The ways listed first override those listed later."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4230
msgid ""
"The commands to list valid values only list the values for which the "
"programs you are running were configured. If they were configured with E<.Op "
"--enable-targets=all>, the commands list most of the available values, but a "
"few are left out; not all targets can be configured in at once because some "
"of them can only be configured E<.Em native> (on hosts with the same type as "
"the target system)."
msgstr ""

#. type: Ss
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4231
#, no-wrap
msgid "Target Selection"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4239
msgid ""
"A E<.Em target> is an object file format. A given target may be supported "
"for multiple architectures (see Section E<.Dq Architecture Selection>).  A "
"target selection may also have variations for different operating systems or "
"architectures."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4243
msgid ""
"The command to list valid target values is E<.Li objdump -i> (the first "
"column of output contains the relevant information)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4248
msgid ""
"Some sample values are: E<.Li a.out-hp300bsd>, E<.Li ecoff-littlemips>, "
"E<.Li a.out-sunos-big>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4257
msgid ""
"You can also specify a target using a configuration triplet. This is the "
"same sort of name that is passed to E<.Pa configure> to specify a "
"target. When you use a configuration triplet as an argument, it must be "
"fully canonicalized. You can see the canonical version of a triplet by "
"running the shell script E<.Pa config.sub> which is included with the "
"sources."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4262
msgid ""
"Some sample configuration triplets are: E<.Li m68k-hp-bsd>, E<.Li "
"mips-dec-ultrix>, E<.Li sparc-sun-sunos>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4264
msgid "E<.Em Xr objdump Target>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4266 /usr/src/contrib/binutils/binutils/doc/binutils.7:4285 /usr/src/contrib/binutils/binutils/doc/binutils.7:4308 /usr/src/contrib/binutils/binutils/doc/binutils.7:4338 /usr/src/contrib/binutils/binutils/doc/binutils.7:4371 /usr/src/contrib/binutils/binutils/doc/binutils.7:4386
msgid "Ways to specify:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4273
msgid "command line option: E<.Op -b> or E<.Op --target>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4277 /usr/src/contrib/binutils/binutils/doc/binutils.7:4300 /usr/src/contrib/binutils/binutils/doc/binutils.7:4330 /usr/src/contrib/binutils/binutils/doc/binutils.7:4347
msgid "environment variable E<.Li GNUTARGET>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4280 /usr/src/contrib/binutils/binutils/doc/binutils.7:4303 /usr/src/contrib/binutils/binutils/doc/binutils.7:4333 /usr/src/contrib/binutils/binutils/doc/binutils.7:4350 /usr/src/contrib/binutils/binutils/doc/binutils.7:4381 /usr/src/contrib/binutils/binutils/doc/binutils.7:4390
msgid "deduced from the input file"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4283
msgid "E<.Em Xr objcopy and Xr strip Input Target>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4296
msgid ""
"command line options: E<.Op -I> or E<.Op --input-target>, or E<.Op -F> or "
"E<.Op --target>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4306
msgid "E<.Em Xr objcopy and Xr strip Output Target>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4319
msgid ""
"command line options: E<.Op -O> or E<.Op --output-target>, or E<.Op -F> or "
"E<.Op --target>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4326
msgid ""
"the input target (see \\(lq E<.Xr objcopy> and E<.Xr strip> Input "
"Target\\(rq above)"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4336
msgid "E<.Em Xr nm, Xr size, and Xr strings Target>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4343
msgid "command line option: E<.Op --target>"
msgstr ""

#. type: Ss
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4352
#, no-wrap
msgid "Architecture Selection"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4358
msgid ""
"An E<.Em architecture> is a type of cpu on which an object file is to "
"run. Its name may contain a colon, separating the name of the processor "
"family from the name of the particular cpu."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4362
msgid ""
"The command to list valid architecture values is E<.Li objdump -i> (the "
"second column contains the relevant information)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4367
msgid "Sample values: E<.Li m68k:68020>, E<.Li mips:3000>, E<.Li sparc>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4369
msgid "E<.Em Xr objdump Architecture>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4378
msgid "command line option: E<.Op -m> or E<.Op --architecture>"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4384
msgid "E<.Em Xr objcopy, Xr nm, Xr size, Xr strings Architecture>"
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4392
#, no-wrap
msgid "Reporting Bugs"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4394
msgid ""
"Your bug reports play an essential role in making the binary utilities "
"reliable."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4399
msgid ""
"Reporting a bug may help you by bringing a solution to your problem, or it "
"may not. But in any case the principal function of a bug report is to help "
"the entire community by making the next version of the binary utilities work "
"better. Bug reports are your contribution to their maintenance."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4402
msgid ""
"In order for a bug report to serve its purpose, you must include the "
"information that enables us to fix the bug."
msgstr ""

#. type: Ss
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4403
#, no-wrap
msgid "Have You Found a Bug?"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4405
msgid "If you are not sure whether you have found a bug, here are some guidelines:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4410
msgid ""
"If a binary utility gets a fatal signal, for any input whatever, that is a "
"bug. Reliable utilities never crash."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4413
msgid ""
"If a binary utility produces an error message for valid input, that is a "
"bug."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4417
msgid ""
"If you are an experienced user of binary utilities, your suggestions for "
"improvement are welcome in any case."
msgstr ""

#. type: Ss
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4419
#, no-wrap
msgid "How to Report Bugs"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4423
msgid ""
"A number of companies and individuals offer support for GNU products. If you "
"obtained the binary utilities from a support organization, we recommend you "
"contact that organization first."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4428
msgid ""
"You can find contact information for many support companies and individuals "
"in the file E<.Pa etc/SERVICE> in the GNU Emacs distribution."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4432
msgid ""
"The fundamental principle of reporting bugs usefully is this: E<.Sy report "
"all the facts>.  If you are not sure whether to state a fact or leave it "
"out, state it!"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4442
msgid ""
"Often people omit facts because they think they know what causes the problem "
"and assume that some details do not matter. Thus, you might assume that the "
"name of a file you use in an example does not matter. Well, probably it does "
"not, but one cannot be sure. Perhaps the bug is a stray memory reference "
"which happens to fetch from the location where that pathname is stored in "
"memory; perhaps, if the pathname were different, the contents of that "
"location would fool the utility into doing the right thing despite the "
"bug. Play it safe and give a specific, complete example. That is the easiest "
"thing for you to do, and the most helpful."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4446
msgid ""
"Keep in mind that the purpose of a bug report is to enable us to fix the bug "
"if it is new to us. Therefore, always write your bug reports on the "
"assumption that the bug has not been reported previously."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4451
msgid ""
"Sometimes people give a few sketchy facts and ask, \\(lqDoes this ring a "
"bell?\\(rq This cannot help us fix a bug, so it is basically useless. We "
"respond by asking for enough details to enable us to investigate. You might "
"as well expedite matters by sending them to begin with."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4453
msgid "To enable us to fix the bug, you should include all these things:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4460
msgid ""
"The version of the utility. Each utility announces it if you start it with "
"the E<.Op --version> argument."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4463
msgid ""
"Without this, we will not know whether there is any point in looking for the "
"bug in the current version of the binary utilities."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4469
msgid ""
"Any patches you may have applied to the source, including any patches made "
"to the E<.Li BFD> library."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4473
msgid ""
"The type of machine you are using, and the operating system name and version "
"number."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4478
msgid ""
"What compiler (and its version) was used to compile the "
"utilities---e.g. \\(lq E<.Li gcc-2.7> \\(rq\\&."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4483
msgid ""
"The command arguments you gave the utility to observe the bug. To guarantee "
"you will not omit something important, list them all. A copy of the Makefile "
"(or the output from make) is sufficient."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4486
msgid ""
"If we were to try to guess the arguments, we would probably guess wrong and "
"then we might not encounter the bug."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4491
msgid ""
"A complete input file, or set of input files, that will reproduce the bug.  "
"If the utility is reading an object file or files, then it is generally most "
"helpful to send the actual object files."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4503
msgid ""
"If the source files were produced exclusively using GNU programs (e.g., "
"E<.Xr gcc>, E<.Xr gas>, and/or the GNU E<.Xr ld>), then it may be OK to send "
"the source files rather than the object files. In this case, be sure to say "
"exactly what version of E<.Xr gcc>, or whatever, was used to produce the "
"object files. Also say how E<.Xr gcc>, or whatever, was configured."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4507
msgid ""
"A description of what behavior you observe that you believe is incorrect.  "
"For example, \\(lqIt gets a fatal signal.\\(rq"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4512
msgid ""
"Of course, if the bug is that the utility gets a fatal signal, then we will "
"certainly notice it. But if the bug is incorrect output, we might not notice "
"unless it is glaringly wrong. You might as well not give us a chance to make "
"a mistake."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4520
msgid ""
"Even if the problem you experience is a fatal signal, you should still say "
"so explicitly. Suppose something strange is going on, such as your copy of "
"the utility is out of sync, or you have encountered a bug in the C library "
"on your system. (This has happened!) Your copy might crash and ours would "
"not. If you told us to expect a crash, then when ours fails to crash, we "
"would know that the bug was not happening for us. If you had not told us to "
"expect a crash, then we would not be able to draw any conclusion from our "
"observations."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4534
msgid ""
"If you wish to suggest changes to the source, send us context diffs, as "
"generated by E<.Xr diff> with the E<.Op -u>, E<.Op -c>, or E<.Op -p> "
"option. Always send diffs from the old file to the new file. If you wish to "
"discuss something in the E<.Xr ld> source, refer to it by context, not by "
"line number."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4537
msgid ""
"The line numbers in our development sources will not match those in your "
"sources.  Your line numbers would convey no useful information to us."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4540
msgid "Here are some things that are not necessary:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4544
msgid "A description of the envelope of the bug."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4548
msgid ""
"Often people who encounter a bug spend a lot of time investigating which "
"changes to the input file will make the bug go away and which changes will "
"not affect it."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4553
msgid ""
"This is often time consuming and not very useful, because the way we will "
"find the bug is by running a single example under the debugger with "
"breakpoints, not by pure deduction from a series of examples. We recommend "
"that you save your time for something else."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4559
msgid ""
"Of course, if you can find a simpler example to report E<.Em instead> of the "
"original one, that is a convenience for us. Errors in the output will be "
"easier to spot, running under the debugger will take less time, and so on."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4562
msgid ""
"However, simplification is not vital; if you do not want to do this, report "
"the bug anyway and send us the entire test case you used."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4565
msgid "A patch for the bug."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4570
msgid ""
"A patch for the bug does help us if it is a good one. But do not omit the "
"necessary information, such as the test case, on the assumption that a patch "
"is all we need. We might see problems with your patch and decide to fix the "
"problem another way, or we might not understand it at all."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4575
msgid ""
"Sometimes with programs as complicated as the binary utilities it is very "
"hard to construct an example that will make the program follow a certain "
"path through the code. If you do not send us the example, we will not be "
"able to construct one, so we will not be able to verify that the bug is "
"fixed."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4579
msgid ""
"And if we cannot understand what bug you are trying to fix, or why your "
"patch should be an improvement, we will not install it. A test case will "
"help us to understand."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4582
msgid "A guess about what the bug is or what it depends on."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4585
msgid ""
"Such guesses are usually wrong. Even we cannot guess right about such things "
"without first using the debugger to find the facts."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4587
#, no-wrap
msgid "GNU Free Documentation License"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4591
#, no-wrap
msgid ""
"Copyright (C) 2000, 2003 Free Software Foundation, Inc. 51 Franklin "
"Street,\n"
"Fifth Floor, Boston, MA 02110-1301 USA\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4594
#, no-wrap
msgid ""
"Everyone is permitted to copy and distribute verbatim copies of this "
"license\n"
"document, but changing it is not allowed.\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4599
msgid "PREAMBLE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4606
msgid ""
"The purpose of this License is to make a manual, textbook, or other written "
"document \\(lqfree\\(rq in the sense of freedom: to assure everyone the "
"effective freedom to copy and redistribute it, with or without modifying it, "
"either commercially or noncommercially. Secondarily, this License preserves "
"for the author and publisher a way to get credit for their work, while not "
"being considered responsible for modifications made by others."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4610
msgid ""
"This License is a kind of \\(lqcopyleft\\(rq, which means that derivative "
"works of the document must themselves be free in the same sense. It "
"complements the GNU General Public License, which is a copyleft license "
"designed for free software."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4618
msgid ""
"We have designed this License in order to use it for manuals for free "
"software, because free software needs free documentation: a free program "
"should come with manuals providing the same freedoms that the software "
"does. But this License is not limited to software manuals; it can be used "
"for any textual work, regardless of subject matter or whether it is "
"published as a printed book. We recommend this License principally for works "
"whose purpose is instruction or reference."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4621
msgid "APPLICABILITY AND DEFINITIONS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4626
msgid ""
"This License applies to any manual or other work that contains a notice "
"placed by the copyright holder saying it can be distributed under the terms "
"of this License. The \\(lqDocument\\(rq, below, refers to any such manual or "
"work. Any member of the public is a licensee, and is addressed as "
"\\(lqyou.\\(rq"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4630
msgid ""
"A \\(lqModified Version\\(rq of the Document means any work containing the "
"Document or a portion of it, either copied verbatim, or with modifications "
"and/or translated into another language."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4639
msgid ""
"A \\(lqSecondary Section\\(rq is a named appendix or a front-matter section "
"of the Document that deals exclusively with the relationship of the "
"publishers or authors of the Document to the Document's overall subject (or "
"to related matters)  and contains nothing that could fall directly within "
"that overall subject.  (For example, if the Document is in part a textbook "
"of mathematics, a Secondary Section may not explain any mathematics.) The "
"relationship could be a matter of historical connection with the subject or "
"with related matters, or of legal, commercial, philosophical, ethical or "
"political position regarding them."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4643
msgid ""
"The \\(lqInvariant Sections\\(rq are certain Secondary Sections whose titles "
"are designated, as being those of Invariant Sections, in the notice that "
"says that the Document is released under this License."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4647
msgid ""
"The \\(lqCover Texts\\(rq are certain short passages of text that are "
"listed, as Front-Cover Texts or Back-Cover Texts, in the notice that says "
"that the Document is released under this License."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4658
msgid ""
"A \\(lqTransparent\\(rq copy of the Document means a machine-readable copy, "
"represented in a format whose specification is available to the general "
"public, whose contents can be viewed and edited directly and "
"straightforwardly with generic text editors or (for images composed of "
"pixels) generic paint programs or (for drawings) some widely available "
"drawing editor, and that is suitable for input to text formatters or for "
"automatic translation to a variety of formats suitable for input to text "
"formatters. A copy made in an otherwise Transparent file format whose markup "
"has been designed to thwart or discourage subsequent modification by readers "
"is not Transparent. A copy that is not \\(lqTransparent\\(rq is called "
"\\(lqOpaque.\\(rq"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4666
msgid ""
"Examples of suitable formats for Transparent copies include plain ASCII "
"without markup, Texinfo input format, LaTeX input format, SGML or XML using "
"a publicly available DTD, and standard-conforming simple HTML designed for "
"human modification.  Opaque formats include PostScript, PDF, proprietary "
"formats that can be read and edited only by proprietary word processors, "
"SGML or XML for which the DTD and/or processing tools are not generally "
"available, and the machine-generated HTML produced by some word processors "
"for output purposes only."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4673
msgid ""
"The \\(lqTitle Page\\(rq means, for a printed book, the title page itself, "
"plus such following pages as are needed to hold, legibly, the material this "
"License requires to appear in the title page. For works in formats which do "
"not have any title page as such, \\(lqTitle Page\\(rq means the text near "
"the most prominent appearance of the work's title, preceding the beginning "
"of the body of the text."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4676
msgid "VERBATIM COPYING"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4685
msgid ""
"You may copy and distribute the Document in any medium, either commercially "
"or noncommercially, provided that this License, the copyright notices, and "
"the license notice saying this License applies to the Document are "
"reproduced in all copies, and that you add no other conditions whatsoever to "
"those of this License. You may not use technical measures to obstruct or "
"control the reading or further copying of the copies you make or "
"distribute. However, you may accept compensation in exchange for copies. If "
"you distribute a large enough number of copies you must also follow the "
"conditions in section 3."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4688
msgid ""
"You may also lend copies, under the same conditions stated above, and you "
"may publicly display copies."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4691
msgid "COPYING IN QUANTITY"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4702
msgid ""
"If you publish printed copies of the Document numbering more than 100, and "
"the Document's license notice requires Cover Texts, you must enclose the "
"copies in covers that carry, clearly and legibly, all these Cover Texts: "
"Front-Cover Texts on the front cover, and Back-Cover Texts on the back "
"cover. Both covers must also clearly and legibly identify you as the "
"publisher of these copies.  The front cover must present the full title with "
"all words of the title equally prominent and visible. You may add other "
"material on the covers in addition.  Copying with changes limited to the "
"covers, as long as they preserve the title of the Document and satisfy these "
"conditions, can be treated as verbatim copying in other respects."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4706
msgid ""
"If the required texts for either cover are too voluminous to fit legibly, "
"you should put the first ones listed (as many as fit reasonably) on the "
"actual cover, and continue the rest onto adjacent pages."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4718
msgid ""
"If you publish or distribute Opaque copies of the Document numbering more "
"than 100, you must either include a machine-readable Transparent copy along "
"with each Opaque copy, or state in or with each Opaque copy a "
"publicly-accessible computer-network location containing a complete "
"Transparent copy of the Document, free of added material, which the general "
"network-using public has access to download anonymously at no charge using "
"public-standard network protocols.  If you use the latter option, you must "
"take reasonably prudent steps, when you begin distribution of Opaque copies "
"in quantity, to ensure that this Transparent copy will remain thus "
"accessible at the stated location until at least one year after the last "
"time you distribute an Opaque copy (directly or through your agents or "
"retailers) of that edition to the public."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4722
msgid ""
"It is requested, but not required, that you contact the authors of the "
"Document well before redistributing any large number of copies, to give them "
"a chance to provide you with an updated version of the Document."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4725
msgid "MODIFICATIONS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4732
msgid ""
"You may copy and distribute a Modified Version of the Document under the "
"conditions of sections 2 and 3 above, provided that you release the Modified "
"Version under precisely this License, with the Modified Version filling the "
"role of the Document, thus licensing distribution and modification of the "
"Modified Version to whoever possesses a copy of it. In addition, you must do "
"these things in the Modified Version:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4769
msgid ""
"A. Use in the Title Page (and on the covers, if any) a title distinct from "
"that of the Document, and from those of previous versions (which should, if "
"there were any, be listed in the History section of the Document). You may "
"use the same title as a previous version if the original publisher of that "
"version gives permission.  B. List on the Title Page, as authors, one or "
"more persons or entities responsible for authorship of the modifications in "
"the Modified Version, together with at least five of the principal authors "
"of the Document (all of its principal authors, if it has less than five).  "
"C.  State on the Title page the name of the publisher of the Modified "
"Version, as the publisher.  D. Preserve all the copyright notices of the "
"Document.  E. Add an appropriate copyright notice for your modifications "
"adjacent to the other copyright notices.  F. Include, immediately after the "
"copyright notices, a license notice giving the public permission to use the "
"Modified Version under the terms of this License, in the form shown in the "
"Addendum below.  G. Preserve in that license notice the full lists of "
"Invariant Sections and required Cover Texts given in the Document's license "
"notice.  H. Include an unaltered copy of this License.  I. Preserve the "
"section entitled \\(lqHistory\\(rq, and its title, and add to it an item "
"stating at least the title, year, new authors, and publisher of the Modified "
"Version as given on the Title Page.  If there is no section entitled "
"\\(lqHistory\\(rq in the Document, create one stating the title, year, "
"authors, and publisher of the Document as given on its Title Page, then add "
"an item describing the Modified Version as stated in the previous sentence.  "
"J. Preserve the network location, if any, given in the Document for public "
"access to a Transparent copy of the Document, and likewise the network "
"locations given in the Document for previous versions it was based on. These "
"may be placed in the \\(lqHistory\\(rq section. You may omit a network "
"location for a work that was published at least four years before the "
"Document itself, or if the original publisher of the version it refers to "
"gives permission.  K. In any section entitled \\(lqAcknowledgements\\(rq or "
"\\(lqDedications\\(rq, preserve the section's title, and preserve in the "
"section all the substance and tone of each of the contributor "
"acknowledgements and/or dedications given therein.  L. Preserve all the "
"Invariant Sections of the Document, unaltered in their text and in their "
"titles. Section numbers or the equivalent are not considered part of the "
"section titles.  M. Delete any section entitled \\(lqEndorsements.\\(rq Such "
"a section may not be included in the Modified Version.  N. Do not retitle "
"any existing section as \\(lqEndorsements\\(rq or to conflict in title with "
"any Invariant Section."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4776
msgid ""
"If the Modified Version includes new front-matter sections or appendices "
"that qualify as Secondary Sections and contain no material copied from the "
"Document, you may at your option designate some or all of these sections as "
"invariant.  To do this, add their titles to the list of Invariant Sections "
"in the Modified Version's license notice. These titles must be distinct from "
"any other section titles."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4781
msgid ""
"You may add a section entitled \\(lqEndorsements\\(rq, provided it contains "
"nothing but endorsements of your Modified Version by various parties--for "
"example, statements of peer review or that the text has been approved by an "
"organization as the authoritative definition of a standard."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4790
msgid ""
"You may add a passage of up to five words as a Front-Cover Text, and a "
"passage of up to 25 words as a Back-Cover Text, to the end of the list of "
"Cover Texts in the Modified Version. Only one passage of Front-Cover Text "
"and one of Back-Cover Text may be added by (or through arrangements made by) "
"any one entity. If the Document already includes a cover text for the same "
"cover, previously added by you or by arrangement made by the same entity you "
"are acting on behalf of, you may not add another; but you may replace the "
"old one, on explicit permission from the previous publisher that added the "
"old one."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4794
msgid ""
"The author(s) and publisher(s) of the Document do not by this License give "
"permission to use their names for publicity for or to assert or imply "
"endorsement of any Modified Version."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4797
msgid "COMBINING DOCUMENTS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4803
msgid ""
"You may combine the Document with other documents released under this "
"License, under the terms defined in section 4 above for modified versions, "
"provided that you include in the combination all of the Invariant Sections "
"of all of the original documents, unmodified, and list them all as Invariant "
"Sections of your combined work in its license notice."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4812
msgid ""
"The combined work need only contain one copy of this License, and multiple "
"identical Invariant Sections may be replaced with a single copy. If there "
"are multiple Invariant Sections with the same name but different contents, "
"make the title of each such section unique by adding at the end of it, in "
"parentheses, the name of the original author or publisher of that section if "
"known, or else a unique number. Make the same adjustment to the section "
"titles in the list of Invariant Sections in the license notice of the "
"combined work."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4817
msgid ""
"In the combination, you must combine any sections entitled \\(lqHistory\\(rq "
"in the various original documents, forming one section entitled "
"\\(lqHistory\\(rq; likewise combine any sections entitled "
"\\(lqAcknowledgements\\(rq, and any sections entitled \\(lqDedications.\\(rq "
"You must delete all sections entitled \\(lqEndorsements.\\(rq"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4820
msgid "COLLECTIONS OF DOCUMENTS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4826
msgid ""
"You may make a collection consisting of the Document and other documents "
"released under this License, and replace the individual copies of this "
"License in the various documents with a single copy that is included in the "
"collection, provided that you follow the rules of this License for verbatim "
"copying of each of the documents in all other respects."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4831
msgid ""
"You may extract a single document from such a collection, and distribute it "
"individually under this License, provided you insert a copy of this License "
"into the extracted document, and follow this License in all other respects "
"regarding verbatim copying of that document."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4834
msgid "AGGREGATION WITH INDEPENDENT WORKS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4842
msgid ""
"A compilation of the Document or its derivatives with other separate and "
"independent documents or works, in or on a volume of a storage or "
"distribution medium, does not as a whole count as a Modified Version of the "
"Document, provided no compilation copyright is claimed for the "
"compilation. Such a compilation is called an \\(lqaggregate\\(rq, and this "
"License does not apply to the other self-contained works thus compiled with "
"the Document, on account of their being thus compiled, if they are not "
"themselves derivative works of the Document."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4848
msgid ""
"If the Cover Text requirement of section 3 is applicable to these copies of "
"the Document, then if the Document is less than one quarter of the entire "
"aggregate, the Document's Cover Texts may be placed on covers that surround "
"only the Document within the aggregate. Otherwise they must appear on covers "
"around the whole aggregate."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4851
msgid "TRANSLATION"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4861
msgid ""
"Translation is considered a kind of modification, so you may distribute "
"translations of the Document under the terms of section 4. Replacing "
"Invariant Sections with translations requires special permission from their "
"copyright holders, but you may include translations of some or all Invariant "
"Sections in addition to the original versions of these Invariant "
"Sections. You may include a translation of this License provided that you "
"also include the original English version of this License. In case of a "
"disagreement between the translation and the original English version of "
"this License, the original English version will prevail."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4864
msgid "TERMINATION"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4871
msgid ""
"You may not copy, modify, sublicense, or distribute the Document except as "
"expressly provided for under this License. Any other attempt to copy, "
"modify, sublicense or distribute the Document is void, and will "
"automatically terminate your rights under this License. However, parties who "
"have received copies, or rights, from you under this License will not have "
"their licenses terminated so long as such parties remain in full compliance."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4874
msgid "FUTURE REVISIONS OF THIS LICENSE"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4879
msgid ""
"The Free Software Foundation may publish new, revised versions of the GNU "
"Free Documentation License from time to time. Such new versions will be "
"similar in spirit to the present version, but may differ in detail to "
"address new problems or concerns. See http://www.gnu.org/copyleft/."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4887
msgid ""
"Each version of the License is given a distinguishing version number. If the "
"Document specifies that a particular numbered version of this License "
"\\(lqor any later version\\(rq applies to it, you have the option of "
"following the terms and conditions either of that specified version or of "
"any later version that has been published (not as a draft) by the Free "
"Software Foundation. If the Document does not specify a version number of "
"this License, you may choose any version ever published (not as a draft) by "
"the Free Software Foundation."
msgstr ""

#. type: Ss
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4889
#, no-wrap
msgid "ADDENDUM: How to use this License for your documents"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4893
msgid ""
"To use this License in a document you have written, include a copy of the "
"License in the document and put the following copyright and license notices "
"just after the title page:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4904
#, no-wrap
msgid ""
"Copyright (C)  year  your name.\n"
"Permission is granted to copy, distribute and/or modify this document\n"
"under the terms of the GNU Free Documentation License, Version 1.1\n"
"or any later version published by the Free Software Foundation;\n"
"with the Invariant Sections being list their titles, with the\n"
"Front-Cover Texts being list, and with the Back-Cover Texts being list.\n"
"A copy of the license is included in the section entitled \"GNU\n"
"Free Documentation License.\"\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4912
msgid ""
"If you have no Invariant Sections, write \\(lqwith no Invariant "
"Sections\\(rq instead of saying which ones are invariant. If you have no "
"Front-Cover Texts, write \\(lqno Front-Cover Texts\\(rq instead of "
"\\(lqFront-Cover Texts being E<.Va list> \\(rq; likewise for Back-Cover "
"Texts."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4916
msgid ""
"If your document contains nontrivial examples of program code, we recommend "
"releasing these examples in parallel under your choice of free software "
"license, such as the GNU General Public License, to permit their use in free "
"software."
msgstr ""

#. type: Sh
#: /usr/src/contrib/binutils/binutils/doc/binutils.7:4917
#, no-wrap
msgid "Binutils Index"
msgstr ""
