# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:32-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/contrib/mandoc/mandoc_char.7:19
#, no-wrap
msgid "$Mdocdate: December 15 2018 $"
msgstr ""

#. type: Dt
#: /usr/src/contrib/mandoc/mandoc_char.7:20
#, no-wrap
msgid "MANDOC_CHAR 7"
msgstr ""

#. type: Sh
#: /usr/src/contrib/mandoc/mandoc_char.7:22
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:24
msgid "E<.Nm mandoc_char>"
msgstr ""

#. type: Nd
#: /usr/src/contrib/mandoc/mandoc_char.7:24
#, no-wrap
msgid "mandoc special characters"
msgstr ""

#. type: Sh
#: /usr/src/contrib/mandoc/mandoc_char.7:25
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:35
msgid ""
"This page documents the E<.Xr roff 7> escape sequences accepted by E<.Xr "
"mandoc 1> to represent special characters in E<.Xr mdoc 7> and E<.Xr man 7> "
"documents."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:59
msgid ""
"The rendering depends on the E<.Xr mandoc 1> output mode; it can be "
"inspected by calling E<.Xr man 1> on the E<.Nm> manual page with different "
"E<.Fl T> arguments.  In ASCII output, the rendering of some characters may "
"be hard to interpret for the reader.  Many are rendered as descriptive "
"strings like E<.Qq E<lt>integralE<gt>>, E<.Qq E<lt>degreeE<gt>>, or E<.Qq "
"E<lt>GammaE<gt>>, which may look ugly, and many are replaced by similar "
"ASCII characters.  In particular, accented characters are usually shown "
"without the accent.  For that reason, try to avoid using any of the special "
"characters documented here except those discussed in the E<.Sx DESCRIPTION>, "
"unless they are essential for explaining the subject matter at hand, for "
"example when documenting complicated mathematical functions."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:63
msgid ""
"In particular, in English manual pages, do not use special-character escape "
"sequences to represent national language characters in author names; "
"instead, provide ASCII transcriptions of the names."
msgstr ""

#. type: Ss
#: /usr/src/contrib/mandoc/mandoc_char.7:63
#, no-wrap
msgid "Dashes and Hyphens"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:69
msgid ""
"In typography there are different types of dashes of various width: the "
"hyphen (\\(hy), the en-dash (\\(en), the em-dash (\\(em), and the "
"mathematical minus sign (\\(mi)."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:74
msgid ""
"Hyphens are used for adjectives; to separate the two parts of a compound "
"word; or to separate a word across two successive lines of text.  The hyphen "
"does not need to be escaped:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:77
#, no-wrap
msgid ""
"blue-eyed\n"
"lorry-driver\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:83
msgid ""
"The en-dash is used to separate the two elements of a range, or can be used "
"the same way as an em-dash.  It should be written as E<.Sq \\e(en>:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:86
#, no-wrap
msgid ""
"pp. 95\\e(en97.\n"
"Go away \\e(en or else!\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:92
msgid ""
"The em-dash can be used to show an interruption or can be used the same way "
"as colons, semi-colons, or parentheses.  It should be written as E<.Sq "
"\\e(em>:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:95
#, no-wrap
msgid ""
"Three things \\e(em apples, oranges, and bananas.\n"
"This is not that \\e(em rather, this is that.\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:114
msgid ""
"In E<.Xr roff 7> documents, the minus sign is normally written as E<.Sq "
"\\e->.  In manual pages, some style guides recommend to also use E<.Sq \\e-> "
"if an ASCII 0x2d E<.Dq hyphen-minus> output glyph that can be copied and "
"pasted is desired in output modes supporting it, for example in E<.Fl T Cm "
"utf8> and E<.Fl T Cm html>.  But currently, no practically relevant manual "
"page formatter actually requires that subtlety, so in manual pages just "
"write plain E<.Sq -> to represent hyphen, minus, and hyphen-minus."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:129
msgid ""
"If a word on a text input line contains a hyphen, a formatter may decide to "
"insert an output line break after the hyphen if that helps filling the "
"current output line, but the whole word would overflow the line.  If it is "
"important that the word is not broken across lines in this way, a zero-width "
"space E<.Pq Sq \\e&> can be inserted before or after the hyphen.  While "
"E<.Xr mandoc 1> never breaks the output line after hyphens adjacent to a "
"zero-width space, after any of the other dash- or hyphen-like characters "
"represented by escape sequences, or after hyphens inside words in macro "
"arguments, other software may not respect these rules and may break the line "
"even in such cases."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:138
msgid ""
"Some E<.Xr roff 7> implementations contains dictionaries allowing to break "
"the line at syllable boundaries even inside words that contain no hyphens.  "
"Such automatic hyphenation is not supported by E<.Xr mandoc 1>, which only "
"breaks the line at whitespace, and inside words only after existing hyphens."
msgstr ""

#. type: Ss
#: /usr/src/contrib/mandoc/mandoc_char.7:138
#, no-wrap
msgid "Spaces"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:143
msgid ""
"To separate words in normal text, for indenting and alignment in literal "
"context, and when none of the following special cases apply, just use the "
"normal space character E<.Pq Sq \\ >."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:155
msgid ""
"When filling text, output lines may be broken between words, i.e. at space "
"characters.  To prevent a line break between two particular words, use the "
"unpaddable non-breaking space escape sequence E<.Pq Sq \\e\\ \\&> instead of "
"the normal space character.  For example, the input string E<.Dq number\\e\\ "
"1> will be kept together as E<.Dq number\\ 1> on the same output line."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:164
msgid ""
"On request and macro lines, the normal space character serves as an argument "
"delimiter.  To include whitespace into arguments, quoting is usually the "
"best choice; see the MACRO SYNTAX section in E<.Xr roff 7>.  In some cases, "
"using the non-breaking space escape sequence E<.Pq Sq \\e\\ \\&> may be "
"preferable."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:173
msgid ""
"To escape macro names and to protect whitespace at the end of input lines, "
"the zero-width space E<.Pq Sq \\e&> is often useful.  For example, in E<.Xr "
"mdoc 7>, a normal space character can be displayed in single quotes in "
"either of the following ways:"
msgstr ""

#. type: Dl
#: /usr/src/contrib/mandoc/mandoc_char.7:174
#, no-wrap
msgid ".Sq \\(dq \\(dq"
msgstr ""

#. type: Dl
#: /usr/src/contrib/mandoc/mandoc_char.7:175
#, no-wrap
msgid ".Sq \\e \\e&"
msgstr ""

#. type: Ss
#: /usr/src/contrib/mandoc/mandoc_char.7:176
#, no-wrap
msgid "Quotes"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:183
msgid ""
"On request and macro lines, the double-quote character E<.Pq Sq \\(dq> is "
"handled specially to allow quoting.  One way to prevent this special "
"handling is by using the E<.Sq \\e(dq> escape sequence."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:188
msgid ""
"Note that on text lines, literal double-quote characters can be used "
"verbatim.  All other quote-like characters can be used verbatim as well, "
"even on request and macro lines."
msgstr ""

#. type: Ss
#: /usr/src/contrib/mandoc/mandoc_char.7:188
#, no-wrap
msgid "Accents"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:197
msgid ""
"In output modes supporting such special output characters, for example E<.Fl "
"T Cm pdf>, and sometimes less consistently in E<.Fl T Cm utf8>, some E<.Xr "
"roff 7> formatters convert the following ASCII input characters to the "
"following Unicode special output characters:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:198
#, no-wrap
msgid "\\(ga Ta U+2018 Ta left single quotation mark"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:199
#, no-wrap
msgid "\\(aq Ta U+2019 Ta right single quotation mark"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:200
#, no-wrap
msgid "\\(ti Ta U+02DC Ta small tilde"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:201
#, no-wrap
msgid "\\(ha Ta U+02C6 Ta modifier letter circumflex"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:208
msgid ""
"In prose, this automatic substitution is often desirable; but when these "
"characters have to be displayed as plain ASCII characters, for example in "
"source code samples, they require escaping to render as follows:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:209
#, no-wrap
msgid "\\e(ga Ta U+0060 Ta grave accent"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:210
#, no-wrap
msgid "\\e(aq Ta U+0027 Ta apostrophe"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:211
#, no-wrap
msgid "\\e(ti Ta U+007E Ta tilde"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:212
#, no-wrap
msgid "\\e(ha Ta U+005E Ta circumflex accent"
msgstr ""

#. type: Ss
#: /usr/src/contrib/mandoc/mandoc_char.7:214
#, no-wrap
msgid "Periods"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:225
msgid ""
"The period E<.Pq Sq \\&.> is handled specially at the beginning of an input "
"line, where it introduces a E<.Xr roff 7> request or a macro, and when "
"appearing alone as a macro argument in E<.Xr mdoc 7>.  In such situations, "
"prepend a zero-width space E<.Pq Sq \\e&.> to make it behave like normal "
"text."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:230
msgid ""
"Do not use the E<.Sq \\e.> escape sequence.  It does not prevent special "
"handling of the period."
msgstr ""

#. type: Ss
#: /usr/src/contrib/mandoc/mandoc_char.7:230
#, no-wrap
msgid "Backslashes"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:236
msgid ""
"To include a literal backslash E<.Pq Sq \\e> into the output, use the E<.Pq "
"Sq \\ee> escape sequence."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:249
msgid ""
"Note that doubling it E<.Pq Sq \\e\\e> is not the right way to output a "
"backslash.  Because E<.Xr mandoc 1> does not implement full E<.Xr roff 7> "
"functionality, it may work with E<.Xr mandoc 1>, but it may have weird "
"effects on complete E<.Xr roff 7> implementations."
msgstr ""

#. type: Sh
#: /usr/src/contrib/mandoc/mandoc_char.7:249
#, no-wrap
msgid "SPECIAL CHARACTERS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:263
msgid ""
"Special characters are encoded as E<.Sq \\eX> E<.Pq for a one-character "
"escape>, E<.Sq \\e(XX> E<.Pq two-character>, and E<.Sq \\e[N]> E<.Pq "
"N-character>.  For details, see the E<.Em Special Characters> subsection of "
"the E<.Xr roff 7> manual."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:265
msgid "Spacing:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:266
#, no-wrap
msgid "Em Input Ta Em Description"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:267
#, no-wrap
msgid "Sq \\e\\ \\& Ta unpaddable non-breaking space"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:268
#, no-wrap
msgid "\\e\\(ti Ta paddable non-breaking space"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:269
#, no-wrap
msgid "\\e0 Ta digit-width space allowing line break"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:270
#, no-wrap
msgid "\\e| Ta one-sixth \\e(em narrow space, zero width in nroff mode"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:271
#, no-wrap
msgid "\\e^ Ta one-twelfth \\e(em half-narrow space, zero width in nroff"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:272
#, no-wrap
msgid "\\e& Ta zero-width non-breaking space"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:273
#, no-wrap
msgid "\\e) Ta zero-width space transparent to end-of-sentence detection"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:274
#, no-wrap
msgid "\\e% Ta zero-width space allowing hyphenation"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:275
#, no-wrap
msgid "\\e: Ta zero-width space allowing line break"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:279
msgid "Lines:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:280 /usr/src/contrib/mandoc/mandoc_char.7:293 /usr/src/contrib/mandoc/mandoc_char.7:316 /usr/src/contrib/mandoc/mandoc_char.7:324 /usr/src/contrib/mandoc/mandoc_char.7:336 /usr/src/contrib/mandoc/mandoc_char.7:353 /usr/src/contrib/mandoc/mandoc_char.7:392 /usr/src/contrib/mandoc/mandoc_char.7:410 /usr/src/contrib/mandoc/mandoc_char.7:425 /usr/src/contrib/mandoc/mandoc_char.7:503 /usr/src/contrib/mandoc/mandoc_char.7:520 /usr/src/contrib/mandoc/mandoc_char.7:542 /usr/src/contrib/mandoc/mandoc_char.7:604 /usr/src/contrib/mandoc/mandoc_char.7:615 /usr/src/contrib/mandoc/mandoc_char.7:628 /usr/src/contrib/mandoc/mandoc_char.7:640 /usr/src/contrib/mandoc/mandoc_char.7:718
#, no-wrap
msgid "Em Input Ta Em Rendered Ta Em Description"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:281
#, no-wrap
msgid "\\e(ba Ta \\(ba Ta bar"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:282
#, no-wrap
msgid "\\e(br Ta \\(br Ta box rule"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:283
#, no-wrap
msgid "\\e(ul Ta \\(ul Ta underscore"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:284
#, no-wrap
msgid "\\e(ru Ta \\(ru Ta underscore (width 0.5m)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:285
#, no-wrap
msgid "\\e(rn Ta \\(rn Ta overline"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:286
#, no-wrap
msgid "\\e(bb Ta \\(bb Ta broken bar"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:287
#, no-wrap
msgid "\\e(sl Ta \\(sl Ta forward slash"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:288
#, no-wrap
msgid "\\e(rs Ta \\(rs Ta backward slash"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:292
msgid "Text markers:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:294
#, no-wrap
msgid "\\e(ci Ta \\(ci Ta circle"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:295
#, no-wrap
msgid "\\e(bu Ta \\(bu Ta bullet"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:296
#, no-wrap
msgid "\\e(dd Ta \\(dd Ta double dagger"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:297
#, no-wrap
msgid "\\e(dg Ta \\(dg Ta dagger"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:298
#, no-wrap
msgid "\\e(lz Ta \\(lz Ta lozenge"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:299
#, no-wrap
msgid "\\e(sq Ta \\(sq Ta white square"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:300
#, no-wrap
msgid "\\e(ps Ta \\(ps Ta paragraph"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:301
#, no-wrap
msgid "\\e(sc Ta \\(sc Ta section"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:302
#, no-wrap
msgid "\\e(lh Ta \\(lh Ta left hand"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:303
#, no-wrap
msgid "\\e(rh Ta \\(rh Ta right hand"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:304
#, no-wrap
msgid "\\e(at Ta \\(at Ta at"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:305
#, no-wrap
msgid "\\e(sh Ta \\(sh Ta hash (pound)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:306
#, no-wrap
msgid "\\e(CR Ta \\(CR Ta carriage return"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:307
#, no-wrap
msgid "\\e(OK Ta \\(OK Ta check mark"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:308
#, no-wrap
msgid "\\e(CL Ta \\(CL Ta club suit"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:309
#, no-wrap
msgid "\\e(SP Ta \\(SP Ta spade suit"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:310
#, no-wrap
msgid "\\e(HE Ta \\(HE Ta heart suit"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:311
#, no-wrap
msgid "\\e(DI Ta \\(DI Ta diamond suit"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:315
msgid "Legal symbols:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:317
#, no-wrap
msgid "\\e(co Ta \\(co Ta copyright"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:318
#, no-wrap
msgid "\\e(rg Ta \\(rg Ta registered"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:319
#, no-wrap
msgid "\\e(tm Ta \\(tm Ta trademarked"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:323
msgid "Punctuation:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:325
#, no-wrap
msgid "\\e(em Ta \\(em Ta em-dash"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:326
#, no-wrap
msgid "\\e(en Ta \\(en Ta en-dash"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:327
#, no-wrap
msgid "\\e(hy Ta \\(hy Ta hyphen"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:328
#, no-wrap
msgid "\\ee Ta \\e Ta back-slash"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:329
#, no-wrap
msgid "\\e. Ta . Ta period"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:330
#, no-wrap
msgid "\\e(r! Ta \\(r! Ta upside-down exclamation"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:331
#, no-wrap
msgid "\\e(r? Ta \\(r? Ta upside-down question"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:335
msgid "Quotes:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:337
#, no-wrap
msgid "\\e(Bq Ta \\(Bq Ta right low double-quote"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:338
#, no-wrap
msgid "\\e(bq Ta \\(bq Ta right low single-quote"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:339
#, no-wrap
msgid "\\e(lq Ta \\(lq Ta left double-quote"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:340
#, no-wrap
msgid "\\e(rq Ta \\(rq Ta right double-quote"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:341
#, no-wrap
msgid "\\e(oq Ta \\(oq Ta left single-quote"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:342
#, no-wrap
msgid "\\e(cq Ta \\(cq Ta right single-quote"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:343
#, no-wrap
msgid "\\e(aq Ta \\(aq Ta apostrophe quote (ASCII character)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:344
#, no-wrap
msgid "\\e(dq Ta \\(dq Ta double quote (ASCII character)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:345
#, no-wrap
msgid "\\e(Fo Ta \\(Fo Ta left guillemet"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:346
#, no-wrap
msgid "\\e(Fc Ta \\(Fc Ta right guillemet"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:347
#, no-wrap
msgid "\\e(fo Ta \\(fo Ta left single guillemet"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:348
#, no-wrap
msgid "\\e(fc Ta \\(fc Ta right single guillemet"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:352
msgid "Brackets:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:354
#, no-wrap
msgid "\\e(lB Ta \\(lB Ta left bracket"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:355
#, no-wrap
msgid "\\e(rB Ta \\(rB Ta right bracket"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:356
#, no-wrap
msgid "\\e(lC Ta \\(lC Ta left brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:357
#, no-wrap
msgid "\\e(rC Ta \\(rC Ta right brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:358
#, no-wrap
msgid "\\e(la Ta \\(la Ta left angle"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:359
#, no-wrap
msgid "\\e(ra Ta \\(ra Ta right angle"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:360
#, no-wrap
msgid "\\e(bv Ta \\(bv Ta brace extension (special font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:361
#, no-wrap
msgid "\\e[braceex] Ta \\[braceex] Ta brace extension"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:362
#, no-wrap
msgid "\\e[bracketlefttp] Ta \\[bracketlefttp] Ta top-left hooked bracket"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:363
#, no-wrap
msgid "\\e[bracketleftbt] Ta \\[bracketleftbt] Ta bottom-left hooked bracket"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:364
#, no-wrap
msgid "\\e[bracketleftex] Ta \\[bracketleftex] Ta left hooked bracket extension"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:365
#, no-wrap
msgid "\\e[bracketrighttp] Ta \\[bracketrighttp] Ta top-right hooked bracket"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:366
#, no-wrap
msgid "\\e[bracketrightbt] Ta \\[bracketrightbt] Ta bottom-right hooked bracket"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:367
#, no-wrap
msgid "\\e[bracketrightex] Ta \\[bracketrightex] Ta right hooked bracket extension"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:368
#, no-wrap
msgid "\\e(lt Ta \\(lt Ta top-left hooked brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:369
#, no-wrap
msgid "\\e[bracelefttp] Ta \\[bracelefttp] Ta top-left hooked brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:370
#, no-wrap
msgid "\\e(lk Ta \\(lk Ta mid-left hooked brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:371
#, no-wrap
msgid "\\e[braceleftmid] Ta \\[braceleftmid] Ta mid-left hooked brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:372
#, no-wrap
msgid "\\e(lb Ta \\(lb Ta bottom-left hooked brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:373
#, no-wrap
msgid "\\e[braceleftbt] Ta \\[braceleftbt] Ta bottom-left hooked brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:374
#, no-wrap
msgid "\\e[braceleftex] Ta \\[braceleftex] Ta left hooked brace extension"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:375
#, no-wrap
msgid "\\e(rt Ta \\(rt Ta top-left hooked brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:376
#, no-wrap
msgid "\\e[bracerighttp] Ta \\[bracerighttp] Ta top-right hooked brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:377
#, no-wrap
msgid "\\e(rk Ta \\(rk Ta mid-right hooked brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:378
#, no-wrap
msgid "\\e[bracerightmid] Ta \\[bracerightmid] Ta mid-right hooked brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:379
#, no-wrap
msgid "\\e(rb Ta \\(rb Ta bottom-right hooked brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:380
#, no-wrap
msgid "\\e[bracerightbt] Ta \\[bracerightbt] Ta bottom-right hooked brace"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:381
#, no-wrap
msgid "\\e[bracerightex] Ta \\[bracerightex] Ta right hooked brace extension"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:382
#, no-wrap
msgid "\\e[parenlefttp] Ta \\[parenlefttp] Ta top-left hooked parenthesis"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:383
#, no-wrap
msgid "\\e[parenleftbt] Ta \\[parenleftbt] Ta bottom-left hooked parenthesis"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:384
#, no-wrap
msgid "\\e[parenleftex] Ta \\[parenleftex] Ta left hooked parenthesis extension"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:385
#, no-wrap
msgid "\\e[parenrighttp] Ta \\[parenrighttp] Ta top-right hooked parenthesis"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:386
#, no-wrap
msgid "\\e[parenrightbt] Ta \\[parenrightbt] Ta bottom-right hooked parenthesis"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:387
#, no-wrap
msgid "\\e[parenrightex] Ta \\[parenrightex] Ta right hooked parenthesis extension"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:391
msgid "Arrows:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:393
#, no-wrap
msgid "\\e(E<lt>- Ta \\(E<lt>- Ta left arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:394
#, no-wrap
msgid "\\e(-E<gt> Ta \\(-E<gt> Ta right arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:395
#, no-wrap
msgid "\\e(E<lt>E<gt> Ta \\(E<lt>E<gt> Ta left-right arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:396
#, no-wrap
msgid "\\e(da Ta \\(da Ta down arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:397
#, no-wrap
msgid "\\e(ua Ta \\(ua Ta up arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:398
#, no-wrap
msgid "\\e(va Ta \\(va Ta up-down arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:399
#, no-wrap
msgid "\\e(lA Ta \\(lA Ta left double-arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:400
#, no-wrap
msgid "\\e(rA Ta \\(rA Ta right double-arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:401
#, no-wrap
msgid "\\e(hA Ta \\(hA Ta left-right double-arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:402
#, no-wrap
msgid "\\e(uA Ta \\(uA Ta up double-arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:403
#, no-wrap
msgid "\\e(dA Ta \\(dA Ta down double-arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:404
#, no-wrap
msgid "\\e(vA Ta \\(vA Ta up-down double-arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:405
#, no-wrap
msgid "\\e(an Ta \\(an Ta horizontal arrow extension"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:409
msgid "Logical:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:411
#, no-wrap
msgid "\\e(AN Ta \\(AN Ta logical and"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:412
#, no-wrap
msgid "\\e(OR Ta \\(OR Ta logical or"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:413
#, no-wrap
msgid "\\e[tno] Ta \\[tno] Ta logical not (text font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:414
#, no-wrap
msgid "\\e(no Ta \\(no Ta logical not (special font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:415
#, no-wrap
msgid "\\e(te Ta \\(te Ta existential quantifier"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:416
#, no-wrap
msgid "\\e(fa Ta \\(fa Ta universal quantifier"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:417
#, no-wrap
msgid "\\e(st Ta \\(st Ta such that"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:418
#, no-wrap
msgid "\\e(tf Ta \\(tf Ta therefore"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:419
#, no-wrap
msgid "\\e(3d Ta \\(3d Ta therefore"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:420
#, no-wrap
msgid "\\e(or Ta \\(or Ta bitwise or"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:424
msgid "Mathematical:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:426
#, no-wrap
msgid "\\e- Ta \\- Ta minus (text font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:427
#, no-wrap
msgid "\\e(mi Ta \\(mi Ta minus (special font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:428
#, no-wrap
msgid "+ Ta + Ta plus (text font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:429
#, no-wrap
msgid "\\e(pl Ta \\(pl Ta plus (special font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:430
#, no-wrap
msgid "\\e(-+ Ta \\(-+ Ta minus-plus"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:431
#, no-wrap
msgid "\\e[t+-] Ta \\[t+-] Ta plus-minus (text font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:432
#, no-wrap
msgid "\\e(+- Ta \\(+- Ta plus-minus (special font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:433
#, no-wrap
msgid "\\e(pc Ta \\(pc Ta center-dot"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:434
#, no-wrap
msgid "\\e[tmu] Ta \\[tmu] Ta multiply (text font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:435
#, no-wrap
msgid "\\e(mu Ta \\(mu Ta multiply (special font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:436
#, no-wrap
msgid "\\e(c* Ta \\(c* Ta circle-multiply"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:437
#, no-wrap
msgid "\\e(c+ Ta \\(c+ Ta circle-plus"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:438
#, no-wrap
msgid "\\e[tdi] Ta \\[tdi] Ta divide (text font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:439
#, no-wrap
msgid "\\e(di Ta \\(di Ta divide (special font)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:440
#, no-wrap
msgid "\\e(f/ Ta \\(f/ Ta fraction"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:441
#, no-wrap
msgid "\\e(** Ta \\(** Ta asterisk"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:442
#, no-wrap
msgid "\\e(E<lt>= Ta \\(E<lt>= Ta less-than-equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:443
#, no-wrap
msgid "\\e(E<gt>= Ta \\(E<gt>= Ta greater-than-equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:444
#, no-wrap
msgid "\\e(E<lt>E<lt> Ta \\(E<lt>E<lt> Ta much less"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:445
#, no-wrap
msgid "\\e(E<gt>E<gt> Ta \\(E<gt>E<gt> Ta much greater"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:446
#, no-wrap
msgid "\\e(eq Ta \\(eq Ta equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:447
#, no-wrap
msgid "\\e(!= Ta \\(!= Ta not equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:448
#, no-wrap
msgid "\\e(== Ta \\(== Ta equivalent"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:449
#, no-wrap
msgid "\\e(ne Ta \\(ne Ta not equivalent"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:450
#, no-wrap
msgid "\\e(ap Ta \\(ap Ta tilde operator"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:451
#, no-wrap
msgid "\\e(|= Ta \\(|= Ta asymptotically equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:452
#, no-wrap
msgid "\\e(=\\(ti Ta \\(=~ Ta approximately equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:453
#, no-wrap
msgid "\\e(\\(ti\\(ti Ta \\(~~ Ta almost equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:454
#, no-wrap
msgid "\\e(\\(ti= Ta \\(~= Ta almost equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:455
#, no-wrap
msgid "\\e(pt Ta \\(pt Ta proportionate"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:456
#, no-wrap
msgid "\\e(es Ta \\(es Ta empty set"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:457
#, no-wrap
msgid "\\e(mo Ta \\(mo Ta element"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:458
#, no-wrap
msgid "\\e(nm Ta \\(nm Ta not element"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:459
#, no-wrap
msgid "\\e(sb Ta \\(sb Ta proper subset"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:460
#, no-wrap
msgid "\\e(nb Ta \\(nb Ta not subset"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:461
#, no-wrap
msgid "\\e(sp Ta \\(sp Ta proper superset"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:462
#, no-wrap
msgid "\\e(nc Ta \\(nc Ta not superset"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:463
#, no-wrap
msgid "\\e(ib Ta \\(ib Ta reflexive subset"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:464
#, no-wrap
msgid "\\e(ip Ta \\(ip Ta reflexive superset"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:465
#, no-wrap
msgid "\\e(ca Ta \\(ca Ta intersection"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:466
#, no-wrap
msgid "\\e(cu Ta \\(cu Ta union"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:467
#, no-wrap
msgid "\\e(/_ Ta \\(/_ Ta angle"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:468
#, no-wrap
msgid "\\e(pp Ta \\(pp Ta perpendicular"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:469
#, no-wrap
msgid "\\e(is Ta \\(is Ta integral"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:470
#, no-wrap
msgid "\\e[integral] Ta \\[integral] Ta integral"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:471
#, no-wrap
msgid "\\e[sum] Ta \\[sum] Ta summation"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:472
#, no-wrap
msgid "\\e[product] Ta \\[product] Ta product"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:473
#, no-wrap
msgid "\\e[coproduct] Ta \\[coproduct] Ta coproduct"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:474
#, no-wrap
msgid "\\e(gr Ta \\(gr Ta gradient"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:475
#, no-wrap
msgid "\\e(sr Ta \\(sr Ta square root"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:476
#, no-wrap
msgid "\\e[sqrt] Ta \\[sqrt] Ta square root"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:477
#, no-wrap
msgid "\\e(lc Ta \\(lc Ta left-ceiling"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:478
#, no-wrap
msgid "\\e(rc Ta \\(rc Ta right-ceiling"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:479
#, no-wrap
msgid "\\e(lf Ta \\(lf Ta left-floor"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:480
#, no-wrap
msgid "\\e(rf Ta \\(rf Ta right-floor"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:481
#, no-wrap
msgid "\\e(if Ta \\(if Ta infinity"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:482
#, no-wrap
msgid "\\e(Ah Ta \\(Ah Ta aleph"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:483
#, no-wrap
msgid "\\e(Im Ta \\(Im Ta imaginary"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:484
#, no-wrap
msgid "\\e(Re Ta \\(Re Ta real"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:485
#, no-wrap
msgid "\\e(wp Ta \\(wp Ta Weierstrass p"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:486
#, no-wrap
msgid "\\e(pd Ta \\(pd Ta partial differential"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:487
#, no-wrap
msgid "\\e(-h Ta \\(-h Ta Planck constant over 2\\(*p"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:488
#, no-wrap
msgid "\\e[hbar] Ta \\[hbar] Ta Planck constant over 2\\(*p"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:489
#, no-wrap
msgid "\\e(12 Ta \\(12 Ta one-half"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:490
#, no-wrap
msgid "\\e(14 Ta \\(14 Ta one-fourth"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:491
#, no-wrap
msgid "\\e(34 Ta \\(34 Ta three-fourths"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:492
#, no-wrap
msgid "\\e(18 Ta \\(18 Ta one-eighth"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:493
#, no-wrap
msgid "\\e(38 Ta \\(38 Ta three-eighths"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:494
#, no-wrap
msgid "\\e(58 Ta \\(58 Ta five-eighths"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:495
#, no-wrap
msgid "\\e(78 Ta \\(78 Ta seven-eighths"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:496
#, no-wrap
msgid "\\e(S1 Ta \\(S1 Ta superscript 1"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:497
#, no-wrap
msgid "\\e(S2 Ta \\(S2 Ta superscript 2"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:498
#, no-wrap
msgid "\\e(S3 Ta \\(S3 Ta superscript 3"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:502
msgid "Ligatures:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:504
#, no-wrap
msgid "\\e(ff Ta \\(ff Ta ff ligature"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:505
#, no-wrap
msgid "\\e(fi Ta \\(fi Ta fi ligature"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:506
#, no-wrap
msgid "\\e(fl Ta \\(fl Ta fl ligature"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:507
#, no-wrap
msgid "\\e(Fi Ta \\(Fi Ta ffi ligature"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:508
#, no-wrap
msgid "\\e(Fl Ta \\(Fl Ta ffl ligature"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:509
#, no-wrap
msgid "\\e(AE Ta \\(AE Ta AE"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:510
#, no-wrap
msgid "\\e(ae Ta \\(ae Ta ae"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:511
#, no-wrap
msgid "\\e(OE Ta \\(OE Ta OE"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:512
#, no-wrap
msgid "\\e(oe Ta \\(oe Ta oe"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:513
#, no-wrap
msgid "\\e(ss Ta \\(ss Ta German eszett"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:514
#, no-wrap
msgid "\\e(IJ Ta \\(IJ Ta IJ ligature"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:515
#, no-wrap
msgid "\\e(ij Ta \\(ij Ta ij ligature"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:519
msgid "Accents:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:521
#, no-wrap
msgid "\\e(a\" Ta \\(a\" Ta Hungarian umlaut"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:522
#, no-wrap
msgid "\\e(a- Ta \\(a- Ta macron"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:523
#, no-wrap
msgid "\\e(a. Ta \\(a. Ta dotted"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:524
#, no-wrap
msgid "\\e(a^ Ta \\(a^ Ta circumflex"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:525
#, no-wrap
msgid "\\e(aa Ta \\(aa Ta acute"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:526
#, no-wrap
msgid "\\e\\(aq Ta \\' Ta acute"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:527
#, no-wrap
msgid "\\e(ga Ta \\(ga Ta grave"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:528
#, no-wrap
msgid "\\e\\(ga Ta \\` Ta grave"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:529
#, no-wrap
msgid "\\e(ab Ta \\(ab Ta breve"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:530
#, no-wrap
msgid "\\e(ac Ta \\(ac Ta cedilla"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:531
#, no-wrap
msgid "\\e(ad Ta \\(ad Ta dieresis"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:532
#, no-wrap
msgid "\\e(ah Ta \\(ah Ta caron"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:533
#, no-wrap
msgid "\\e(ao Ta \\(ao Ta ring"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:534
#, no-wrap
msgid "\\e(a\\(ti Ta \\(a~ Ta tilde"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:535
#, no-wrap
msgid "\\e(ho Ta \\(ho Ta ogonek"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:536
#, no-wrap
msgid "\\e(ha Ta \\(ha Ta hat (ASCII character)"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:537
#, no-wrap
msgid "\\e(ti Ta \\(ti Ta tilde (ASCII character)"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:541
msgid "Accented letters:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:543
#, no-wrap
msgid "\\e(\\(aqA Ta \\('A Ta acute A"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:544
#, no-wrap
msgid "\\e(\\(aqE Ta \\('E Ta acute E"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:545
#, no-wrap
msgid "\\e(\\(aqI Ta \\('I Ta acute I"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:546
#, no-wrap
msgid "\\e(\\(aqO Ta \\('O Ta acute O"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:547
#, no-wrap
msgid "\\e(\\(aqU Ta \\('U Ta acute U"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:548
#, no-wrap
msgid "\\e(\\(aqY Ta \\('Y Ta acute Y"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:549
#, no-wrap
msgid "\\e(\\(aqa Ta \\('a Ta acute a"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:550
#, no-wrap
msgid "\\e(\\(aqe Ta \\('e Ta acute e"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:551
#, no-wrap
msgid "\\e(\\(aqi Ta \\('i Ta acute i"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:552
#, no-wrap
msgid "\\e(\\(aqo Ta \\('o Ta acute o"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:553
#, no-wrap
msgid "\\e(\\(aqu Ta \\('u Ta acute u"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:554
#, no-wrap
msgid "\\e(\\(aqy Ta \\('y Ta acute y"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:555
#, no-wrap
msgid "\\e(\\(gaA Ta \\(`A Ta grave A"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:556
#, no-wrap
msgid "\\e(\\(gaE Ta \\(`E Ta grave E"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:557
#, no-wrap
msgid "\\e(\\(gaI Ta \\(`I Ta grave I"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:558
#, no-wrap
msgid "\\e(\\(gaO Ta \\(`O Ta grave O"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:559
#, no-wrap
msgid "\\e(\\(gaU Ta \\(`U Ta grave U"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:560
#, no-wrap
msgid "\\e(\\(gaa Ta \\(`a Ta grave a"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:561
#, no-wrap
msgid "\\e(\\(gae Ta \\(`e Ta grave e"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:562
#, no-wrap
msgid "\\e(\\(gai Ta \\(`i Ta grave i"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:563
#, no-wrap
msgid "\\e(\\(gao Ta \\(`i Ta grave o"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:564
#, no-wrap
msgid "\\e(\\(gau Ta \\(`u Ta grave u"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:565
#, no-wrap
msgid "\\e(\\(tiA Ta \\(~A Ta tilde A"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:566
#, no-wrap
msgid "\\e(\\(tiN Ta \\(~N Ta tilde N"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:567
#, no-wrap
msgid "\\e(\\(tiO Ta \\(~O Ta tilde O"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:568
#, no-wrap
msgid "\\e(\\(tia Ta \\(~a Ta tilde a"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:569
#, no-wrap
msgid "\\e(\\(tin Ta \\(~n Ta tilde n"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:570
#, no-wrap
msgid "\\e(\\(tio Ta \\(~o Ta tilde o"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:571
#, no-wrap
msgid "\\e(:A Ta \\(:A Ta dieresis A"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:572
#, no-wrap
msgid "\\e(:E Ta \\(:E Ta dieresis E"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:573
#, no-wrap
msgid "\\e(:I Ta \\(:I Ta dieresis I"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:574
#, no-wrap
msgid "\\e(:O Ta \\(:O Ta dieresis O"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:575
#, no-wrap
msgid "\\e(:U Ta \\(:U Ta dieresis U"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:576
#, no-wrap
msgid "\\e(:a Ta \\(:a Ta dieresis a"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:577
#, no-wrap
msgid "\\e(:e Ta \\(:e Ta dieresis e"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:578
#, no-wrap
msgid "\\e(:i Ta \\(:i Ta dieresis i"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:579
#, no-wrap
msgid "\\e(:o Ta \\(:o Ta dieresis o"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:580
#, no-wrap
msgid "\\e(:u Ta \\(:u Ta dieresis u"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:581
#, no-wrap
msgid "\\e(:y Ta \\(:y Ta dieresis y"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:582
#, no-wrap
msgid "\\e(^A Ta \\(^A Ta circumflex A"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:583
#, no-wrap
msgid "\\e(^E Ta \\(^E Ta circumflex E"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:584
#, no-wrap
msgid "\\e(^I Ta \\(^I Ta circumflex I"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:585
#, no-wrap
msgid "\\e(^O Ta \\(^O Ta circumflex O"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:586
#, no-wrap
msgid "\\e(^U Ta \\(^U Ta circumflex U"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:587
#, no-wrap
msgid "\\e(^a Ta \\(^a Ta circumflex a"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:588
#, no-wrap
msgid "\\e(^e Ta \\(^e Ta circumflex e"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:589
#, no-wrap
msgid "\\e(^i Ta \\(^i Ta circumflex i"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:590
#, no-wrap
msgid "\\e(^o Ta \\(^o Ta circumflex o"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:591
#, no-wrap
msgid "\\e(^u Ta \\(^u Ta circumflex u"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:592
#, no-wrap
msgid "\\e(,C Ta \\(,C Ta cedilla C"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:593
#, no-wrap
msgid "\\e(,c Ta \\(,c Ta cedilla c"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:594
#, no-wrap
msgid "\\e(/L Ta \\(/L Ta stroke L"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:595
#, no-wrap
msgid "\\e(/l Ta \\(/l Ta stroke l"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:596
#, no-wrap
msgid "\\e(/O Ta \\(/O Ta stroke O"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:597
#, no-wrap
msgid "\\e(/o Ta \\(/o Ta stroke o"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:598
#, no-wrap
msgid "\\e(oA Ta \\(oA Ta ring A"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:599
#, no-wrap
msgid "\\e(oa Ta \\(oa Ta ring a"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:603
msgid "Special letters:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:605
#, no-wrap
msgid "\\e(-D Ta \\(-D Ta Eth"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:606
#, no-wrap
msgid "\\e(Sd Ta \\(Sd Ta eth"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:607
#, no-wrap
msgid "\\e(TP Ta \\(TP Ta Thorn"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:608
#, no-wrap
msgid "\\e(Tp Ta \\(Tp Ta thorn"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:609
#, no-wrap
msgid "\\e(.i Ta \\(.i Ta dotless i"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:610
#, no-wrap
msgid "\\e(.j Ta \\(.j Ta dotless j"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:614
msgid "Currency:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:616
#, no-wrap
msgid "\\e(Do Ta \\(Do Ta dollar"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:617
#, no-wrap
msgid "\\e(ct Ta \\(ct Ta cent"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:618
#, no-wrap
msgid "\\e(Eu Ta \\(Eu Ta Euro symbol"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:619
#, no-wrap
msgid "\\e(eu Ta \\(eu Ta Euro symbol"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:620
#, no-wrap
msgid "\\e(Ye Ta \\(Ye Ta yen"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:621
#, no-wrap
msgid "\\e(Po Ta \\(Po Ta pound"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:622
#, no-wrap
msgid "\\e(Cs Ta \\(Cs Ta Scandinavian"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:623
#, no-wrap
msgid "\\e(Fn Ta \\(Fn Ta florin"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:627
msgid "Units:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:629
#, no-wrap
msgid "\\e(de Ta \\(de Ta degree"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:630
#, no-wrap
msgid "\\e(%0 Ta \\(%0 Ta per-thousand"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:631
#, no-wrap
msgid "\\e(fm Ta \\(fm Ta minute"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:632
#, no-wrap
msgid "\\e(sd Ta \\(sd Ta second"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:633
#, no-wrap
msgid "\\e(mc Ta \\(mc Ta micro"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:634
#, no-wrap
msgid "\\e(Of Ta \\(Of Ta Spanish female ordinal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:635
#, no-wrap
msgid "\\e(Om Ta \\(Om Ta Spanish masculine ordinal"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:639
msgid "Greek letters:"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:641
#, no-wrap
msgid "\\e(*A Ta \\(*A Ta Alpha"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:642
#, no-wrap
msgid "\\e(*B Ta \\(*B Ta Beta"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:643
#, no-wrap
msgid "\\e(*G Ta \\(*G Ta Gamma"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:644
#, no-wrap
msgid "\\e(*D Ta \\(*D Ta Delta"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:645
#, no-wrap
msgid "\\e(*E Ta \\(*E Ta Epsilon"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:646
#, no-wrap
msgid "\\e(*Z Ta \\(*Z Ta Zeta"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:647
#, no-wrap
msgid "\\e(*Y Ta \\(*Y Ta Eta"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:648
#, no-wrap
msgid "\\e(*H Ta \\(*H Ta Theta"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:649
#, no-wrap
msgid "\\e(*I Ta \\(*I Ta Iota"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:650
#, no-wrap
msgid "\\e(*K Ta \\(*K Ta Kappa"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:651
#, no-wrap
msgid "\\e(*L Ta \\(*L Ta Lambda"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:652
#, no-wrap
msgid "\\e(*M Ta \\(*M Ta Mu"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:653
#, no-wrap
msgid "\\e(*N Ta \\(*N Ta Nu"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:654
#, no-wrap
msgid "\\e(*C Ta \\(*C Ta Xi"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:655
#, no-wrap
msgid "\\e(*O Ta \\(*O Ta Omicron"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:656
#, no-wrap
msgid "\\e(*P Ta \\(*P Ta Pi"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:657
#, no-wrap
msgid "\\e(*R Ta \\(*R Ta Rho"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:658
#, no-wrap
msgid "\\e(*S Ta \\(*S Ta Sigma"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:659
#, no-wrap
msgid "\\e(*T Ta \\(*T Ta Tau"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:660
#, no-wrap
msgid "\\e(*U Ta \\(*U Ta Upsilon"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:661
#, no-wrap
msgid "\\e(*F Ta \\(*F Ta Phi"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:662
#, no-wrap
msgid "\\e(*X Ta \\(*X Ta Chi"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:663
#, no-wrap
msgid "\\e(*Q Ta \\(*Q Ta Psi"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:664
#, no-wrap
msgid "\\e(*W Ta \\(*W Ta Omega"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:665
#, no-wrap
msgid "\\e(*a Ta \\(*a Ta alpha"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:666
#, no-wrap
msgid "\\e(*b Ta \\(*b Ta beta"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:667
#, no-wrap
msgid "\\e(*g Ta \\(*g Ta gamma"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:668
#, no-wrap
msgid "\\e(*d Ta \\(*d Ta delta"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:669
#, no-wrap
msgid "\\e(*e Ta \\(*e Ta epsilon"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:670
#, no-wrap
msgid "\\e(*z Ta \\(*z Ta zeta"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:671
#, no-wrap
msgid "\\e(*y Ta \\(*y Ta eta"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:672
#, no-wrap
msgid "\\e(*h Ta \\(*h Ta theta"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:673
#, no-wrap
msgid "\\e(*i Ta \\(*i Ta iota"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:674
#, no-wrap
msgid "\\e(*k Ta \\(*k Ta kappa"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:675
#, no-wrap
msgid "\\e(*l Ta \\(*l Ta lambda"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:676
#, no-wrap
msgid "\\e(*m Ta \\(*m Ta mu"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:677
#, no-wrap
msgid "\\e(*n Ta \\(*n Ta nu"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:678
#, no-wrap
msgid "\\e(*c Ta \\(*c Ta xi"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:679
#, no-wrap
msgid "\\e(*o Ta \\(*o Ta omicron"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:680
#, no-wrap
msgid "\\e(*p Ta \\(*p Ta pi"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:681
#, no-wrap
msgid "\\e(*r Ta \\(*r Ta rho"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:682
#, no-wrap
msgid "\\e(*s Ta \\(*s Ta sigma"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:683
#, no-wrap
msgid "\\e(*t Ta \\(*t Ta tau"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:684
#, no-wrap
msgid "\\e(*u Ta \\(*u Ta upsilon"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:685
#, no-wrap
msgid "\\e(*f Ta \\(*f Ta phi"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:686
#, no-wrap
msgid "\\e(*x Ta \\(*x Ta chi"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:687
#, no-wrap
msgid "\\e(*q Ta \\(*q Ta psi"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:688
#, no-wrap
msgid "\\e(*w Ta \\(*w Ta omega"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:689
#, no-wrap
msgid "\\e(+h Ta \\(+h Ta theta variant"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:690
#, no-wrap
msgid "\\e(+f Ta \\(+f Ta phi variant"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:691
#, no-wrap
msgid "\\e(+p Ta \\(+p Ta pi variant"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:692
#, no-wrap
msgid "\\e(+e Ta \\(+e Ta epsilon variant"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:693
#, no-wrap
msgid "\\e(ts Ta \\(ts Ta sigma terminal"
msgstr ""

#. type: Sh
#: /usr/src/contrib/mandoc/mandoc_char.7:695
#, no-wrap
msgid "PREDEFINED STRINGS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:703
msgid ""
"Predefined strings are inherited from the macro packages of historical troff "
"implementations.  They are E<.Em not recommended> for use, as they differ "
"across implementations.  Manuals using these predefined strings are almost "
"certainly not portable."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:717
msgid ""
"Their syntax is similar to special characters, using E<.Sq \\e*X> E<.Pq for "
"a one-character escape>, E<.Sq \\e*(XX> E<.Pq two-character>, and E<.Sq "
"\\e*[N]> E<.Pq N-character>.  For details, see the E<.Em Predefined Strings> "
"subsection of the E<.Xr roff 7> manual."
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:719
#, no-wrap
msgid "\\e*(Ba Ta \\*(Ba Ta vertical bar"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:720
#, no-wrap
msgid "\\e*(Ne Ta \\*(Ne Ta not equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:721
#, no-wrap
msgid "\\e*(Ge Ta \\*(Ge Ta greater-than-equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:722
#, no-wrap
msgid "\\e*(Le Ta \\*(Le Ta less-than-equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:723
#, no-wrap
msgid "\\e*(Gt Ta \\*(Gt Ta greater-than"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:724
#, no-wrap
msgid "\\e*(Lt Ta \\*(Lt Ta less-than"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:725
#, no-wrap
msgid "\\e*(Pm Ta \\*(Pm Ta plus-minus"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:726
#, no-wrap
msgid "\\e*(If Ta \\*(If Ta infinity"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:727
#, no-wrap
msgid "\\e*(Pi Ta \\*(Pi Ta pi"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:728
#, no-wrap
msgid "\\e*(Na Ta \\*(Na Ta NaN"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:729
#, no-wrap
msgid "\\e*(Am Ta \\*(Am Ta ampersand"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:730
#, no-wrap
msgid "\\e*R Ta \\*R Ta restricted mark"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:731
#, no-wrap
msgid "\\e*(Tm Ta \\*(Tm Ta trade mark"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:732
#, no-wrap
msgid "\\e*q Ta \\*q Ta double-quote"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:733
#, no-wrap
msgid "\\e*(Rq Ta \\*(Rq Ta right-double-quote"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:734
#, no-wrap
msgid "\\e*(Lq Ta \\*(Lq Ta left-double-quote"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:735
#, no-wrap
msgid "\\e*(lp Ta \\*(lp Ta right-parenthesis"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:736
#, no-wrap
msgid "\\e*(rp Ta \\*(rp Ta left-parenthesis"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:737
#, no-wrap
msgid "\\e*(lq Ta \\*(lq Ta left double-quote"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:738
#, no-wrap
msgid "\\e*(rq Ta \\*(rq Ta right double-quote"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:739
#, no-wrap
msgid "\\e*(ua Ta \\*(ua Ta up arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:740
#, no-wrap
msgid "\\e*(va Ta \\*(va Ta up-down arrow"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:741
#, no-wrap
msgid "\\e*(E<lt>= Ta \\*(E<lt>= Ta less-than-equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:742
#, no-wrap
msgid "\\e*(E<gt>= Ta \\*(E<gt>= Ta greater-than-equal"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:743
#, no-wrap
msgid "\\e*(aa Ta \\*(aa Ta acute"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:744
#, no-wrap
msgid "\\e*(ga Ta \\*(ga Ta grave"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:745
#, no-wrap
msgid "\\e*(Px Ta \\*(Px Ta POSIX standard name"
msgstr ""

#. type: It
#: /usr/src/contrib/mandoc/mandoc_char.7:746
#, no-wrap
msgid "\\e*(Ai Ta \\*(Ai Ta ANSI standard name"
msgstr ""

#. type: Sh
#: /usr/src/contrib/mandoc/mandoc_char.7:748
#, no-wrap
msgid "UNICODE CHARACTERS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:750
msgid "The escape sequences"
msgstr ""

#. type: Dl
#: /usr/src/contrib/mandoc/mandoc_char.7:751
#, no-wrap
msgid "\\e[uXXXX] and \\eC\\(aquXXXX\\(aq"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:763
msgid ""
"are interpreted as Unicode codepoints.  The codepoint must be in the range "
"above U+0080 and less than U+10FFFF.  For compatibility, the hexadecimal "
"digits E<.Sq A> to E<.Sq F> must be given as uppercase characters, and "
"points must be zero-padded to four characters; if greater than four "
"characters, no zero padding is allowed.  Unicode surrogates are not allowed."
msgstr ""

#. type: Sh
#: /usr/src/contrib/mandoc/mandoc_char.7:763
#, no-wrap
msgid "NUMBERED CHARACTERS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:767
msgid ""
"For backward compatibility with existing manuals, E<.Xr mandoc 1> also "
"supports the"
msgstr ""

#. type: Dl
#: /usr/src/contrib/mandoc/mandoc_char.7:768
#, no-wrap
msgid "\\eN\\(aq Ns Ar number Ns \\(aq and \\e[ Ns Cm char Ns Ar number ]"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:780
msgid ""
"escape sequences, inserting the character E<.Ar number> from the current "
"character set into the output.  Of course, this is inherently non-portable "
"and is already marked as deprecated in the Heirloom roff manual; on top of "
"that, the second form is a GNU extension.  For example, do not use "
"\\eN\\(aq34\\(aq or \\e[char34], use \\e(dq, or even the plain E<.Sq \\(dq> "
"character where possible."
msgstr ""

#. type: Sh
#: /usr/src/contrib/mandoc/mandoc_char.7:780
#, no-wrap
msgid "COMPATIBILITY"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:784
msgid ""
"This section documents compatibility between mandoc and other troff "
"implementations, at this time limited to GNU troff E<.Pq Qq groff>."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:789
msgid ""
"The \\eN\\(aq\\(aq escape sequence is limited to printable characters; in "
"groff, it accepts arbitrary character numbers."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:796
msgid ""
"In E<.Fl T Ns Cm ascii>, the \\e(ss, \\e(nm, \\e(nb, \\e(nc, \\e(ib, \\e(ip, "
"\\e(pp, \\e[sum], \\e[product], \\e[coproduct], \\e(gr, \\e(-h, and "
"\\e(a. special characters render differently between mandoc and groff."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:801
msgid ""
"In E<.Fl T Ns Cm html>, the \\e(\\(ti=, \\e(nb, and \\e(nc special "
"characters render differently between mandoc and groff."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:809
msgid ""
"The E<.Fl T Ns Cm ps> and E<.Fl T Ns Cm pdf> modes format like E<.Fl T Ns Cm "
"ascii> instead of rendering glyphs as in groff."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:813
msgid ""
"The \\e[radicalex], \\e[sqrtex], and \\e(ru special characters have been "
"omitted from mandoc either because they are poorly documented or they have "
"no known representation."
msgstr ""

#. type: Sh
#: /usr/src/contrib/mandoc/mandoc_char.7:814
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:819
msgid "E<.Xr mandoc 1>, E<.Xr man 7>, E<.Xr mdoc 7>, E<.Xr roff 7>"
msgstr ""

#. type: Sh
#: /usr/src/contrib/mandoc/mandoc_char.7:819
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:824
msgid ""
"The E<.Nm> manual page was written by E<.An Kristaps Dzonsons Aq Mt "
"kristaps@bsd.lv>."
msgstr ""

#. type: Sh
#: /usr/src/contrib/mandoc/mandoc_char.7:824
#, no-wrap
msgid "CAVEATS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/mandoc/mandoc_char.7:834
msgid ""
"The predefined string E<.Sq \\e*(Ba> mimics the behaviour of the E<.Sq \\&|> "
"character in E<.Xr mdoc 7>; thus, if you wish to render a vertical bar with "
"no side effects, use the E<.Sq \\e(ba> escape."
msgstr ""
