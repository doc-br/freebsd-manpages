# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man4/ng_ether.4:37
#, no-wrap
msgid "June 23, 2011"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man4/ng_ether.4:38
#, no-wrap
msgid "NG_ETHER 4"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ng_ether.4:40
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:42
msgid "E<.Nm ng_ether>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man4/ng_ether.4:42
#, no-wrap
msgid "Ethernet netgraph node type"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ng_ether.4:43
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man4/ng_ether.4:44
#, no-wrap
msgid "netgraph/ng_ether.h"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ng_ether.4:45
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:58
msgid ""
"The E<.Nm ether> netgraph node type allows Ethernet interfaces to interact "
"with the E<.Xr netgraph 4> networking subsystem.  Once the E<.Nm> module is "
"loaded into the kernel, a node is automatically created for each Ethernet "
"interface in the system.  Each node will attempt to name itself with the "
"same name as the associated interface."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:69
msgid ""
"Three hooks are supported: E<.Va lower , upper>, and E<.Va orphans>.  The "
"hook name E<.Va divert> may be used as an alias for E<.Va lower>, and is "
"provided for backward compatibility.  In reality, the two names represent "
"the same hook."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:80
msgid ""
"The E<.Va lower> hook is a connection to the raw Ethernet device.  When "
"connected, all incoming packets are forwarded to this hook, instead of being "
"passed to the kernel for upper layer processing.  Writing to this hook "
"results in a raw Ethernet frame being transmitted by the device.  Normal "
"outgoing packets are not affected by E<.Va lower> being connected."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:91
msgid ""
"The E<.Va upper> hook is a connection to the upper protocol layers.  When "
"connected, all outgoing packets are forwarded to this hook, instead of being "
"transmitted by the device.  Writing to this hook results in a raw Ethernet "
"frame being received by the kernel just as if it had come in over the wire.  "
"Normal incoming packets are not affected by E<.Va upper> being connected."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:103
msgid ""
"The E<.Va orphans> hook is equivalent to E<.Va lower>, except that only "
"unrecognized packets (that would otherwise be discarded)  are written to the "
"hook, while other normal incoming traffic is unaffected.  Unrecognized "
"packets written to E<.Va upper> will be forwarded back out to E<.Va orphans> "
"if connected."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:106
msgid ""
"In all cases, frames are raw Ethernet frames with the standard 14 byte "
"Ethernet header (but no checksum)."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:113
msgid ""
"When no hooks are connected, E<.Va upper> and E<.Va lower> are in effect "
"connected together, so that packets flow normally upwards and downwards."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ng_ether.4:113
#, no-wrap
msgid "HOOKS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:115
msgid "This node type supports the following hooks:"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:116
#, no-wrap
msgid "Va lower"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:118
msgid "Connection to the lower device link layer."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:118
#, no-wrap
msgid "Va upper"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:120
msgid "Connection to the upper protocol layers."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:120
#, no-wrap
msgid "Va orphans"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:124
msgid "Like E<.Va lower>, but only receives unrecognized packets."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ng_ether.4:125
#, no-wrap
msgid "CONTROL MESSAGES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:127
msgid "This node type supports the generic control messages, plus the following:"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:128
#, no-wrap
msgid "Dv NGM_ETHER_GET_IFNAME Pq Ic getifname"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:134
msgid ""
"Returns the name of the associated interface as a E<.Dv NUL Ns -terminated> "
"E<.Tn ASCII> string.  Normally this is the same as the name of the node."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:134
#, no-wrap
msgid "Dv NGM_ETHER_GET_IFINDEX Pq Ic getifindex"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:136
msgid "Returns the global index of the associated interface as a 32 bit integer."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:136
#, no-wrap
msgid "Dv NGM_ETHER_GET_ENADDR Pq Ic getenaddr"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:138
msgid "Returns the device's unique six byte Ethernet address."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:138
#, no-wrap
msgid "Dv NGM_ETHER_SET_ENADDR Pq Ic setenaddr"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:144
msgid ""
"Sets the device's unique six byte Ethernet address.  This control message is "
"equivalent to using the E<.Dv SIOCSIFLLADDR> E<.Xr ioctl 2> system call."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:144
#, no-wrap
msgid "Dv NGM_ETHER_SET_PROMISC Pq Ic setpromisc"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:149
msgid ""
"Enable or disable promiscuous mode.  This message includes a single 32 bit "
"integer flag that enables or disables promiscuous mode on the interface.  "
"Any non-zero value enables promiscuous mode."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:149
#, no-wrap
msgid "Dv NGM_ETHER_GET_PROMISC Pq Ic getpromisc"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:156
msgid ""
"Get the current value of the node's promiscuous flag.  The returned value is "
"always either one or zero.  Note that this flag reflects the node's own "
"promiscuous setting and does not necessarily reflect the promiscuous state "
"of the actual interface, which can be affected by other means (e.g., E<.Xr "
"bpf 4>)."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:156
#, no-wrap
msgid "Dv NGM_ETHER_SET_AUTOSRC Pq Ic setautosrc"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:164
msgid ""
"Sets the automatic source address override flag.  This message includes a "
"single 32 bit integer flag that causes all outgoing packets to have their "
"source Ethernet address field overwritten with the device's unique Ethernet "
"address.  If this flag is set to zero, the source address in outgoing "
"packets is not modified.  The default setting for this flag is disabled."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:164
#, no-wrap
msgid "Dv NGM_ETHER_GET_AUTOSRC Pq Ic getautosrc"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:167
msgid ""
"Get the current value of the node's source address override flag.  The "
"returned value is always either one or zero."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:167
#, no-wrap
msgid "Dv NGM_ETHER_ADD_MULTI Pq Ic addmulti"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:173
msgid ""
"Join Ethernet multicast group.  This control message is equivalent to using "
"the E<.Dv SIOCADDMULTI> E<.Xr ioctl 2> system call."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:173
#, no-wrap
msgid "Dv NGM_ETHER_DEL_MULTI Pq Ic delmulti"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:179
msgid ""
"Leave Ethernet multicast group.  This control message is equivalent to using "
"the E<.Dv SIOCDELMULTI> E<.Xr ioctl 2> system call."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ng_ether.4:179
#, no-wrap
msgid "Dv NGM_ETHER_DETACH Pq Ic detach"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:181
msgid "Detach from underlying Ethernet interface and shut down node."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ng_ether.4:182
#, no-wrap
msgid "SHUTDOWN"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:192
msgid ""
"Upon receipt of the E<.Dv NGM_SHUTDOWN> control message, all hooks are "
"disconnected, promiscuous mode is disabled, but the node is not removed.  "
"Node can be shut down only using E<.Dv NGM_ETHER_DETACH> control message.  "
"If the interface itself is detached (e.g., because of PC Card removal), the "
"node disappears as well."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ng_ether.4:192
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:197
msgid ""
"This command dumps all unrecognized packets received by the E<.Dq Li fxp0> "
"interface to standard output decoded in hex and E<.Tn ASCII>:"
msgstr ""

#. type: Dl
#: /usr/src/share/man/man4/ng_ether.4:198
#, no-wrap
msgid "nghook -a fxp0: orphans"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:204
msgid ""
"This command sends the contents of E<.Pa sample.pkt> out the interface E<.Dq "
"Li fxp0>:"
msgstr ""

#. type: Dl
#: /usr/src/share/man/man4/ng_ether.4:205
#, no-wrap
msgid "cat sample.pkt | nghook fxp0: orphans"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:215
msgid ""
"These commands insert an E<.Xr ng_tee 4> node between the E<.Va lower> and "
"E<.Va upper> protocol layers, which can be used for tracing packet flow, "
"statistics, etc.:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:218
#, no-wrap
msgid ""
"ngctl mkpeer fxp0: tee lower right\n"
"ngctl connect fxp0: lower upper left\n"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ng_ether.4:219
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:226
msgid ""
"E<.Xr arp 4>, E<.Xr netgraph 4>, E<.Xr netintro 4>, E<.Xr ifconfig 8>, E<.Xr "
"ngctl 8>, E<.Xr nghook 8>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ng_ether.4:226
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:229
msgid ""
"E<.An Julian Elischer Aq Mt julian@FreeBSD.org> E<.An Archie Cobbs Aq Mt "
"archie@FreeBSD.org>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ng_ether.4:229
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ng_ether.4:241
msgid ""
"The automatic KLD module loading mechanism that works for most other "
"Netgraph node types does not work for the E<.Nm ether> node type, because "
"E<.Nm ether> nodes are not created on demand; instead, they are created when "
"Ethernet interfaces are attached or when the KLD is first loaded.  "
"Therefore, if the KLD is not statically compiled into the kernel, it is "
"necessary to load the KLD manually in order to bring the E<.Nm ether> nodes "
"into existence."
msgstr ""
