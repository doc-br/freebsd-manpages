# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:32-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: /usr/src/contrib/ipfilter/man/ipl.4:3
#, no-wrap
msgid "IPL"
msgstr ""

#. type: SH
#: /usr/src/contrib/ipfilter/man/ipl.4:4
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:6
msgid "ipl - IP packet log device"
msgstr ""

#. type: SH
#: /usr/src/contrib/ipfilter/man/ipl.4:6
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:14
msgid ""
"The B<ipl> pseudo device's purpose is to provide an easy way to gather "
"packet headers of packets you wish to log.  If a packet header is to be "
"logged, the entire header is logged (including any IP options - TCP/UDP "
"options are not included when it calculates header size) or not at all.  The "
"packet contents are also logged after the header.  If the log reader is busy "
"or otherwise unable to read log records, up to IPLLOGSIZE (8192 is the "
"default) bytes of data are stored."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:18
msgid ""
"Prepending every packet header logged is a structure containing information "
"relevant to the packet following and why it was logged.  The structure's "
"format is as follows:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:33
#, no-wrap
msgid ""
"/*\n"
" * Log structure.  Each packet header logged is prepended by one of these.\n"
" * Following this in the log records read from the device will be an "
"ipflog\n"
" * structure which is then followed by any packet data.\n"
" */\n"
"typedef struct iplog    {\n"
"        u_long  ipl_sec;\n"
"        u_long  ipl_usec;\n"
"        u_int   ipl_len;\n"
"        u_int   ipl_count;\n"
"        size_t  ipl_dsize;\n"
"        struct  iplog   *ipl_next;\n"
"} iplog_t;\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:47
#, no-wrap
msgid ""
"typedef struct  ipflog  {\n"
"#if (defined(NetBSD) && (NetBSD E<lt>= 1991011) && (NetBSD E<gt>= 199603))\n"
"        u_char  fl_ifname[IFNAMSIZ];\n"
"#else\n"
"        u_int   fl_unit;\n"
"        u_char  fl_ifname[4];\n"
"#endif\n"
"        u_char  fl_plen;        /* extra data after hlen */\n"
"        u_char  fl_hlen;        /* length of IP headers saved */\n"
"        u_short fl_rule;        /* assume never more than 64k rules, total "
"*/\n"
"        u_32_t  fl_flags;\n"
"} ipflog_t;\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:53
msgid ""
"When reading from the B<ipl> device, it is necessary to call read(2) with a "
"buffer big enough to hold at least 1 complete log record - reading of "
"partial log records is not supported."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:56
msgid ""
"If the packet contents are more than 128 bytes when B<log body> is used, "
"then only 128 bytes of the packet contents are logged."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:59
msgid ""
"Although it is only possible to read from the B<ipl> device, opening it for "
"writing is required when using an ioctl which changes any kernel data."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:62
msgid ""
"The ioctls which are loaded with this device can be found under B<ipf(4)>.  "
"The ioctls which are for use with logging and don't affect the filter are:"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:66
#, no-wrap
msgid ""
"        ioctl(fd, SIOCIPFFB, int *)\n"
"        ioctl(fd, FIONREAD, int *)\n"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:72
msgid ""
"The SIOCIPFFB ioctl flushes the log buffer and returns the number of bytes "
"flushed.  FIONREAD returns the number of bytes currently used for storing "
"log data.  If IPFILTER_LOG is not defined when compiling, SIOCIPFFB is not "
"available and FIONREAD will return but not do anything."
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:76
msgid ""
"There is currently no support for non-blocking IO with this device, meaning "
"all read operations should be considered blocking in nature (if there is no "
"data to read, it will sleep until some is made available)."
msgstr ""

#. type: SH
#: /usr/src/contrib/ipfilter/man/ipl.4:76
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:78
msgid "ipf(4)"
msgstr ""

#. type: SH
#: /usr/src/contrib/ipfilter/man/ipl.4:78
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:80
msgid "Packet headers are dropped when the internal buffer (static size) fills."
msgstr ""

#. type: SH
#: /usr/src/contrib/ipfilter/man/ipl.4:80
#, no-wrap
msgid "FILES"
msgstr ""

#. type: Plain text
#: /usr/src/contrib/ipfilter/man/ipl.4:81
msgid "/dev/ipl0"
msgstr ""
