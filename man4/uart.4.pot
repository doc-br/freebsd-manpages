# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:27-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man4/uart.4:28
#, no-wrap
msgid "April 26, 2017"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man4/uart.4:29
#, no-wrap
msgid "UART 4"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/uart.4:31
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:33
msgid "E<.Nm uart>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man4/uart.4:33
#, no-wrap
msgid "driver for Universal Asynchronous Receiver/Transmitter (UART) devices"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/uart.4:34
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:36
msgid "E<.Cd \"device uart\">"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:39
msgid "E<.Cd \"device puc\"> E<.Cd \"device uart\">"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:42
msgid "E<.Cd \"device scc\"> E<.Cd \"device uart\">"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:49
msgid ""
"In E<.Pa /boot/device.hints>: E<.Cd hint.uart.0.disabled=\"1\"> E<.Cd "
"hint.uart.0.baud=\"38400\"> E<.Cd hint.uart.0.port=\"0x3f8\"> E<.Cd "
"hint.uart.0.flags=\"0x10\">"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:53
msgid "With E<.Ar flags> encoded as:"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:54
#, no-wrap
msgid "0x00010"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:56
msgid "device is potential system console"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:56
#, no-wrap
msgid "0x00080"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:58
msgid "use this port for remote kernel debugging"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:58
#, no-wrap
msgid "0x00100"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:60
msgid "set RX FIFO trigger level to ``low'' (NS8250 only)"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:60
#, no-wrap
msgid "0x00200"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:62
msgid "set RX FIFO trigger level to ``medium low'' (NS8250 only)"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:62
#, no-wrap
msgid "0x00400"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:64
msgid "set RX FIFO trigger level to ``medium high'' (default, NS8250 only)"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:64
#, no-wrap
msgid "0x00800"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:66
msgid "set RX FIFO trigger level to ``high'' (NS8250 only)"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/uart.4:68
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:99
msgid ""
"The E<.Nm> device driver provides support for various classes of UARTs "
"implementing the EIA RS-232C (CCITT V.24) serial communications interface.  "
"Each such interface is controlled by a separate and independent instance of "
"the E<.Nm> driver.  The primary support for devices that contain multiple "
"serial interfaces or that contain other functionality besides one or more "
"serial interfaces is provided by the E<.Xr puc 4>, or E<.Xr scc 4> device "
"drivers.  However, the serial interfaces of those devices that are managed "
"by the E<.Xr puc 4>, or E<.Xr scc 4> driver are each independently "
"controlled by the E<.Nm> driver.  As such, the E<.Xr puc 4>, or E<.Xr scc 4> "
"driver provides umbrella functionality for the E<.Nm> driver and hides the "
"complexities that are inherent when elementary components are packaged "
"together."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:108
msgid ""
"The E<.Nm> driver has a modular design to allow it to be used on differing "
"hardware and for various purposes.  In the following sections the components "
"are discussed in detail.  Options are described in the section that covers "
"the component to which each option applies."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/uart.4:108
#, no-wrap
msgid "CORE COMPONENT"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:114
msgid ""
"At the heart of the E<.Nm> driver is the core component.  It contains the "
"bus attachments and the low-level interrupt handler."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/uart.4:114
#, no-wrap
msgid "HARDWARE DRIVERS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:120
msgid ""
"The core component and the kernel interfaces talk to the hardware through "
"the hardware interface.  This interface serves as an abstraction of the "
"hardware and allows varying UARTs to be used for serial communications."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/uart.4:120
#, no-wrap
msgid "SYSTEM DEVICES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:129
msgid ""
"System devices are UARTs that have a special purpose by way of hardware "
"design or software setup.  For example, Sun UltraSparc machines use UARTs as "
"their keyboard interface.  Such an UART cannot be used for general purpose "
"communications.  Likewise, when the kernel is configured for a serial "
"console, the corresponding UART will in turn be a system device so that the "
"kernel can output boot messages early on in the boot process."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/uart.4:129
#, no-wrap
msgid "KERNEL INTERFACES"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:139
msgid ""
"The last but not least of the components is the kernel interface.  This "
"component ultimately determines how the UART is made visible to the kernel "
"in particular and to users in general.  The default kernel interface is the "
"TTY interface.  This allows the UART to be used for terminals, modems and "
"serial line IP applications.  System devices, with the notable exception of "
"serial consoles, generally have specialized kernel interfaces."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/uart.4:139
#, no-wrap
msgid "HARDWARE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:143
msgid "The E<.Nm> driver supports the following classes of UARTs:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:148
msgid ""
"NS8250: standard hardware based on the 8250, 16450, 16550, 16650, 16750 or "
"the 16950 UARTs."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:152
msgid ""
"SCC: serial communications controllers supported by the E<.Xr scc 4> device "
"driver."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/uart.4:154
#, no-wrap
msgid "Pulse Per Second (PPS) Timing Interface"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:167
msgid ""
"The E<.Nm> driver can capture PPS timing information as defined in RFC "
"2783.  The API, accessed via E<.Xr ioctl 2>, is available on the tty "
"device.  To use the PPS capture feature with E<.Xr ntpd 8>, symlink the tty "
"callout device E<.Va /dev/cuau?> to E<.Va /dev/pps0.>"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:180
msgid ""
"The E<.Va hw.uart.pps_mode> tunable configures the PPS capture mode for all "
"uart devices; it can be set in E<.Xr loader.conf 5>.  The E<.Va "
"dev.uart.0.pps_mode> sysctl configures the PPS capture mode for a specific "
"uart device; it can be set in E<.Xr loader.conf 5> or E<.Xr sysctl.conf 5>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:182
msgid "The following capture modes are available:"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:183
#, no-wrap
msgid "0x00"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:185
msgid "Capture disabled."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:185
#, no-wrap
msgid "0x01"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:187
msgid "Capture pulses on the CTS line."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:187
#, no-wrap
msgid "0x02"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:189
msgid "Capture pulses on the DCD line."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:193
msgid ""
"The following values may be ORed with the capture mode to configure capture "
"processing options:"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:194
#, no-wrap
msgid "0x10"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:196
msgid "Invert the pulse (RS-232 logic low = ASSERT, high = CLEAR)."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:196
#, no-wrap
msgid "0x20"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:198
msgid "Attempt to capture narrow pulses."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:213
msgid ""
"Add the narrow pulse option when the incoming PPS pulse width is small "
"enough to prevent reliable capture in normal mode.  In narrow mode the "
"driver uses the hardware's ability to latch a line state change; not all "
"hardware has this capability.  The hardware latch provides a reliable "
"indication that a pulse occurred, but prevents distinguishing between the "
"CLEAR and ASSERT edges of the pulse.  For each detected pulse, the driver "
"synthesizes both an ASSERT and a CLEAR event, using the same timestamp for "
"each.  To prevent spurious events when the hardware is intermittently able "
"to see both edges of a pulse, the driver will not generate a new pair of "
"events within a half second of the prior pair.  Both normal and narrow pulse "
"modes work with E<.Xr ntpd 8>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:228
msgid ""
"Add the invert option when the connection to the uart device uses TTL level "
"signals, or when the PPS source emits inverted pulses.  RFC 2783 defines an "
"ASSERT event as a higher-voltage line level, and a CLEAR event as a "
"lower-voltage line level, in the context of the RS-232 protocol.  The modem "
"control signals on a TTL-level connection are typically inverted from the "
"RS-232 levels.  For example, carrier presence is indicated by a high signal "
"on an RS-232 DCD line, and by a low signal on a TTL DCD line.  This is due "
"to the use of inverting line driver buffers to convert between TTL and "
"RS-232 line levels in most hardware designs.  Generally speaking, a "
"connection to a DB-9 style connector is an RS-232 level signal at up to 12 "
"volts.  A connection to header pins or an edge-connector on an embedded "
"board is typically a TTL signal at 3.3 or 5 volts."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/uart.4:228
#, no-wrap
msgid "Special Devices"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:240
msgid ""
"The E<.Nm> driver also supports an initial-state and a lock-state control "
"device for each of the callin and the callout \"data\" devices.  The termios "
"settings of a data device are copied from those of the corresponding "
"initial-state device on first opens and are not inherited from previous "
"opens.  Use E<.Xr stty 1> in the normal way on the initial-state devices to "
"program initial termios states suitable for your setup."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:254
msgid ""
"The lock termios state acts as flags to disable changing the termios state.  "
"E.g., to lock a flag variable such as CRTSCTS, use E<.Em stty crtscts> on "
"the lock-state device.  Speeds and special characters may be locked by "
"setting the corresponding value in the lock-state device to any nonzero "
"value.  E.g., to lock a speed to 115200, use E<.Dq Li stty 115200> on the "
"initial-state device and E<.Dq Li stty 1> on the lock-state device."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:274
msgid ""
"Correct programs talking to correctly wired external devices work with "
"almost arbitrary initial states and almost no locking, but other setups may "
"benefit from changing some of the default initial state and locking the "
"state.  In particular, the initial states for non (POSIX) standard flags "
"should be set to suit the devices attached and may need to be locked to "
"prevent buggy programs from changing them.  E.g., CRTSCTS should be locked "
"on for devices that support RTS/CTS handshaking at all times and off for "
"devices that do not support it at all.  CLOCAL should be locked on for "
"devices that do not support carrier.  HUPCL may be locked off if you do not "
"want to hang up for some reason.  In general, very bad things happen if "
"something is locked to the wrong state, and things should not be locked for "
"devices that support more than one setting.  The CLOCAL flag on callin ports "
"should be locked off for logins to avoid certain security holes, but this "
"needs to be done by getty if the callin port is used for anything else."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/uart.4:274
#, no-wrap
msgid "FILES"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:276
#, no-wrap
msgid "Pa /dev/ttyu?"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:278
msgid "for callin ports"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:278
#, no-wrap
msgid "Pa /dev/ttyu?.init"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:279
#, no-wrap
msgid "Pa /dev/ttyu?.lock"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:281
msgid "corresponding callin initial-state and lock-state devices"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:282
#, no-wrap
msgid "Pa /dev/cuau?"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:284
msgid "for callout ports"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:284
#, no-wrap
msgid "Pa /dev/cuau?.init"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/uart.4:285
#, no-wrap
msgid "Pa /dev/cuau?.lock"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:287
msgid "corresponding callout initial-state and lock-state devices"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/uart.4:288
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:292
msgid "E<.Xr puc 4>, E<.Xr scc 4>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/uart.4:292
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:297
msgid "The E<.Nm> device driver first appeared in E<.Fx 5.2>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/uart.4:297
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/uart.4:301
msgid ""
"The E<.Nm> device driver and this manual page were written by E<.An Marcel "
"Moolenaar Aq Mt marcel@xcllnt.net>."
msgstr ""
