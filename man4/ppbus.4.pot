# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man4/ppbus.4:27
#, no-wrap
msgid "March 1, 1998"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man4/ppbus.4:28
#, no-wrap
msgid "PPBUS 4"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ppbus.4:30
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:32
msgid "E<.Nm ppbus>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man4/ppbus.4:32
#, no-wrap
msgid "Parallel Port Bus system"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ppbus.4:33
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:35
msgid "E<.Cd \"device ppbus\">"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:37
msgid "E<.Cd \"device vpo\">"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:43
msgid ""
"E<.Cd \"device lpt\"> E<.Cd \"device plip\"> E<.Cd \"device ppi\"> E<.Cd "
"\"device pps\"> E<.Cd \"device lpbb\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ppbus.4:43
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:49
msgid ""
"The E<.Em ppbus> system provides a uniform, modular and "
"architecture-independent system for the implementation of drivers to control "
"various parallel devices, and to utilize different parallel port chipsets."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ppbus.4:49
#, no-wrap
msgid "DEVICE DRIVERS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:52
msgid ""
"In order to write new drivers or port existing drivers, the ppbus system "
"provides the following facilities:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:55
msgid "architecture-independent macros or functions to access parallel ports"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:57
msgid "mechanism to allow various devices to share the same parallel port"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:62
msgid ""
"a user interface named E<.Xr ppi 4> that allows parallel port access from "
"outside the kernel without conflicting with kernel-in drivers."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:63
#, no-wrap
msgid "Developing new drivers"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:66
msgid ""
"The ppbus system has been designed to support the development of standard "
"and non-standard software:"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ppbus.4:68 /usr/src/share/man/man4/ppbus.4:80
#, no-wrap
msgid "Em Driver Ta Em Description"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ppbus.4:69
#, no-wrap
msgid "Sy vpo Ta \"VPI0 parallel to Adaptec AIC-7110 SCSI controller driver\" ."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:71
msgid "It uses standard and non-standard parallel port accesses."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ppbus.4:71
#, no-wrap
msgid "Sy ppi Ta \"Parallel port interface for general I/O\""
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ppbus.4:72
#, no-wrap
msgid "Sy pps Ta \"Pulse per second Timing Interface\""
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ppbus.4:73
#, no-wrap
msgid "Sy lpbb Ta \"Philips official parallel port I2C bit-banging interface\""
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:75
#, no-wrap
msgid "Porting existing drivers"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:78
msgid ""
"Another approach to the ppbus system is to port existing drivers.  Various "
"drivers have already been ported:"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ppbus.4:81
#, no-wrap
msgid "Sy lpt Ta \"lpt printer driver\""
msgstr ""

#. type: It
#: /usr/src/share/man/man4/ppbus.4:82
#, no-wrap
msgid "Sy plip Ta \"lp parallel network interface driver\""
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:87
msgid ""
"ppbus should let you port any other software even from other operating "
"systems that provide similar services."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ppbus.4:87
#, no-wrap
msgid "PARALLEL PORT CHIPSETS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:90
msgid "Parallel port chipset support is provided by E<.Xr ppc 4>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:93
msgid ""
"The ppbus system provides functions and macros to allocate a new parallel "
"port bus, then initialize it and upper peripheral device drivers."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:96
msgid ""
"ppc makes chipset detection and initialization and then calls ppbus attach "
"functions to initialize the ppbus system."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ppbus.4:96
#, no-wrap
msgid "PARALLEL PORT MODEL"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:104
msgid ""
"The logical parallel port model chosen for the ppbus system is the PC's "
"parallel port model.  Consequently, for the i386 implementation of ppbus, "
"most of the services provided by ppc are macros for inb()  and outb() "
"calls.  But, for an other architecture, accesses to one of our logical "
"registers (data, status, control...) may require more than one I/O access."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:104
#, no-wrap
msgid "Description"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:106
msgid "The parallel port may operate in the following modes:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:109
msgid "compatible mode, also called Centronics mode"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:111
msgid "bidirectional 8/4-bits mode, also called NIBBLE mode"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:113
msgid "byte mode, also called PS/2 mode"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:115
msgid "Extended Capability Port mode, ECP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:117
msgid "Enhanced Parallel Port mode, EPP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:119
msgid "mixed ECP+EPP or ECP+PS/2 modes"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:120
#, no-wrap
msgid "Compatible mode"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:125
msgid ""
"This mode defines the protocol used by most PCs to transfer data to a "
"printer.  In this mode, data is placed on the port's data lines, the printer "
"status is checked for no errors and that it is not busy, and then a data "
"Strobe is generated by the software to clock the data to the printer."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:130
msgid ""
"Many I/O controllers have implemented a mode that uses a FIFO buffer to "
"transfer data with the Compatibility mode protocol.  This mode is referred "
"to as \"Fast Centronics\" or \"Parallel Port FIFO mode\"."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:130
#, no-wrap
msgid "Bidirectional mode"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:135
msgid ""
"The NIBBLE mode is the most common way to get reverse channel data from a "
"printer or peripheral.  Combined with the standard host to printer mode, it "
"provides a complete bidirectional channel."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:139
msgid ""
"In this mode, outputs are 8-bits long.  Inputs are accomplished by reading 4 "
"of the 8 bits of the status register."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:139
#, no-wrap
msgid "Byte mode"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:143
msgid ""
"In this mode, the data register is used either for outputs and inputs.  "
"Then, any transfer is 8-bits long."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:143
#, no-wrap
msgid "Extended Capability Port mode"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:149
msgid ""
"The ECP protocol was proposed as an advanced mode for communication with "
"printer and scanner type peripherals.  Like the EPP protocol, ECP mode "
"provides for a high performance bidirectional communication path between the "
"host adapter and the peripheral."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:151
msgid "ECP protocol features include:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:154
msgid "Run_Length_Encoding (RLE) data compression for host adapters"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:156
msgid "FIFOs for both the forward and reverse channels"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:158
msgid "DMA as well as programmed I/O for the host register interface."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:159
#, no-wrap
msgid "Enhanced Parallel Port mode"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:163
msgid ""
"The EPP protocol was originally developed as a means to provide a high "
"performance parallel port link that would still be compatible with the "
"standard parallel port."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:170
msgid ""
"The EPP mode has two types of cycle: address and data.  What makes the "
"difference at hardware level is the strobe of the byte placed on the data "
"lines.  Data are strobed with nAutofeed, addresses are strobed with "
"nSelectin signals."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:176
msgid ""
"A particularity of the ISA implementation of the EPP protocol is that an EPP "
"cycle fits in an ISA cycle.  In this fashion, parallel port peripherals can "
"operate at close to the same performance levels as an equivalent ISA plug-in "
"card."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:186
msgid ""
"At software level, you may implement the protocol you wish, using data and "
"address cycles as you want.  This is for the IEEE1284 compatible part.  "
"Then, peripheral vendors may implement protocol handshake with the following "
"status lines: PError, nFault and Select.  Try to know how these lines toggle "
"with your peripheral, allowing the peripheral to request more data, stop the "
"transfer and so on."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:189
msgid ""
"At any time, the peripheral may interrupt the host with the nAck signal "
"without disturbing the current transfer."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:189
#, no-wrap
msgid "Mixed modes"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:194
msgid ""
"Some manufacturers, like SMC, have implemented chipsets that support mixed "
"modes.  With such chipsets, mode switching is available at any time by "
"accessing the extended control register."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ppbus.4:194
#, no-wrap
msgid "IEEE1284-1994 Standard"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:195
#, no-wrap
msgid "Background"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:204
msgid ""
"This standard is also named \"IEEE Standard Signaling Method for a "
"Bidirectional Parallel Peripheral Interface for Personal Computers\".  It "
"defines a signaling method for asynchronous, fully interlocked, "
"bidirectional parallel communications between hosts and printers or other "
"peripherals.  It also specifies a format for a peripheral identification "
"string and a method of returning this string to the host outside of the "
"bidirectional data stream."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:210
msgid ""
"This standard is architecture independent and only specifies dialog "
"handshake at signal level.  One should refer to architecture specific "
"documentation in order to manipulate machine dependent registers, mapped "
"memory or other methods to control these signals."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:214
msgid ""
"The IEEE1284 protocol is fully oriented with all supported parallel port "
"modes.  The computer acts as master and the peripheral as slave."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:223
msgid ""
"Any transfer is defined as a finite state automaton.  It allows software to "
"properly manage the fully interlocked scheme of the signaling method.  The "
"compatible mode is supported \"as is\" without any negotiation because it is "
"compatible.  Any other mode must be firstly negotiated by the host to check "
"it is supported by the peripheral, then to enter one of the forward idle "
"states."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:232
msgid ""
"At any time, the slave may want to send data to the host.  This is only "
"possible from forward idle states (nibble, byte, ecp...).  So, the host must "
"have previously negotiated to permit the peripheral to request transfer.  "
"Interrupt lines may be dedicated to the requesting signals to prevent time "
"consuming polling methods."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:240
msgid ""
"But peripheral requests are only a hint to the master host.  If the host "
"accepts the transfer, it must firstly negotiate the reverse mode and then "
"starts the transfer.  At any time during reverse transfer, the host may "
"terminate the transfer or the slave may drive wires to signal that no more "
"data is available."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:240
#, no-wrap
msgid "Implementation"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:245
msgid ""
"IEEE1284 Standard support has been implemented at the top of the ppbus "
"system as a set of procedures that perform high level functions like "
"negotiation, termination, transfer in any mode without bothering you with "
"low level characteristics of the standard."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:251
msgid ""
"IEEE1284 interacts with the ppbus system as little as possible.  That means "
"you still have to request the ppbus when you want to access it, the "
"negotiate function does not do it for you.  And of course, release it later."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ppbus.4:251
#, no-wrap
msgid "ARCHITECTURE"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:252
#, no-wrap
msgid "adapter, ppbus and device layers"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:259
msgid ""
"First, there is the E<.Em adapter> layer, the lowest of the ppbus system.  "
"It provides chipset abstraction throw a set of low level functions that maps "
"the logical model to the underlying hardware."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:263
msgid "Secondly, there is the E<.Em ppbus> layer that provides functions to:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:266
msgid "share the parallel port bus among the daisy-chain like connected devices"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:268
msgid "manage devices linked to ppbus"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:270
msgid "propose an arch-independent interface to access the hardware layer."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:275
msgid ""
"Finally, the E<.Em device> layer gathers the parallel peripheral device "
"drivers."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:275
#, no-wrap
msgid "Parallel modes management"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:279
msgid ""
"We have to differentiate operating modes at various ppbus system layers.  "
"Actually, ppbus and adapter operating modes on one hands and for each one, "
"current and available modes are separated."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:285
msgid ""
"With this level of abstraction a particular chipset may commute from any "
"native mode to any other mode emulated with extended modes without "
"disturbing upper layers.  For example, most chipsets support NIBBLE mode as "
"native and emulated with ECP and/or EPP."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:287
msgid "This architecture should support IEEE1284-1994 modes."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ppbus.4:287
#, no-wrap
msgid "FEATURES"
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:288
#, no-wrap
msgid "The boot process"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:295
msgid ""
"The boot process starts with the probe stage of the E<.Xr ppc 4> driver "
"during ISA bus (PC architecture) initialization.  During attachment of the "
"ppc driver, a new ppbus structure is allocated, then probe and attachment "
"for this new bus node are called."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:300
msgid ""
"ppbus attachment tries to detect any PnP parallel peripheral (according to "
"E<.%T \"Plug and Play Parallel Port Devices\"> draft from (c)1993-4 "
"Microsoft Corporation)  then probes and attaches known device drivers."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:305
msgid ""
"During probe, device drivers are supposed to request the ppbus and try to "
"set their operating mode.  This mode will be saved in the context structure "
"and returned each time the driver requests the ppbus."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:305
#, no-wrap
msgid "Bus allocation and interrupts"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:310
msgid ""
"ppbus allocation is mandatory not to corrupt I/O of other devices.  Another "
"usage of ppbus allocation is to reserve the port and receive incoming "
"interrupts."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:323
msgid ""
"High level interrupt handlers are connected to the ppbus system thanks to "
"the newbus E<.Fn BUS_SETUP_INTR> and E<.Fn BUS_TEARDOWN_INTR> functions.  "
"But, in order to attach a handler, drivers must own the bus.  Consequently, "
"a ppbus request is mandatory in order to call the above functions (see "
"existing drivers for more info).  Note that the interrupt handler is "
"automatically released when the ppbus is released."
msgstr ""

#. type: Ss
#: /usr/src/share/man/man4/ppbus.4:323
#, no-wrap
msgid "Microsequences"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:332
msgid ""
"E<.Em Microsequences> is a general purpose mechanism to allow fast low-level "
"manipulation of the parallel port.  Microsequences may be used to do either "
"standard (in IEEE1284 modes) or non-standard transfers.  The philosophy of "
"microsequences is to avoid the overhead of the ppbus layer and do most of "
"the job at adapter level."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:339
msgid ""
"A microsequence is an array of opcodes and parameters.  Each opcode codes an "
"operation (opcodes are described in E<.Xr microseq 9>).  Standard I/O "
"operations are implemented at ppbus level whereas basic I/O operations and "
"microseq language are coded at adapter level for efficiency."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:343
msgid "As an example, the E<.Xr vpo 4> driver uses microsequences to implement:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:346
msgid "a modified version of the NIBBLE transfer mode"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:348
msgid "various I/O sequences to initialize, select and allocate the peripheral"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ppbus.4:349
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:355
msgid "E<.Xr lpt 4>, E<.Xr plip 4>, E<.Xr ppc 4>, E<.Xr ppi 4>, E<.Xr vpo 4>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ppbus.4:355
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:360
msgid "The E<.Nm> manual page first appeared in E<.Fx 3.0>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/ppbus.4:360
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/ppbus.4:363
msgid "This manual page was written by E<.An Nicolas Souchu>."
msgstr ""
