# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man4/route.4:31
#, no-wrap
msgid "November 4, 2004"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man4/route.4:32
#, no-wrap
msgid "ROUTE 4"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/route.4:34
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:36
msgid "E<.Nm route>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man4/route.4:36
#, no-wrap
msgid "kernel packet forwarding database"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/route.4:37
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: /usr/src/share/man/man4/route.4:38
#, no-wrap
msgid "sys/types.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man4/route.4:39
#, no-wrap
msgid "sys/time.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man4/route.4:40
#, no-wrap
msgid "sys/socket.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man4/route.4:41
#, no-wrap
msgid "net/if.h"
msgstr ""

#. type: In
#: /usr/src/share/man/man4/route.4:42
#, no-wrap
msgid "net/route.h"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:45
msgid "E<.Ft int> E<.Fn socket PF_ROUTE SOCK_RAW \"int family\">"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/route.4:45
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:51
msgid ""
"E<.Fx> provides some packet routing facilities.  The kernel maintains a "
"routing information database, which is used in selecting the appropriate "
"network interface when transmitting packets."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:59
msgid ""
"A user process (or possibly multiple co-operating processes)  maintains this "
"database by sending messages over a special kind of socket.  This supplants "
"fixed size E<.Xr ioctl 2 Ns 's> used in earlier releases.  Routing table "
"changes may only be carried out by the super user."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:64
msgid ""
"The operating system may spontaneously emit routing messages in response to "
"external events, such as receipt of a re-direct, or failure to locate a "
"suitable route for a request.  The message types are described in greater "
"detail below."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:70
msgid ""
"Routing database entries come in two flavors: for a specific host, or for "
"all hosts on a generic subnetwork (as specified by a bit mask and value "
"under the mask.  The effect of wildcard or default route may be achieved by "
"using a mask of all zeros, and there may be hierarchical routes."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:85
msgid ""
"When the system is booted and addresses are assigned to the network "
"interfaces, each protocol family installs a routing table entry for each "
"interface when it is ready for traffic.  Normally the protocol specifies the "
"route through each interface as a E<.Dq direct> connection to the "
"destination host or network.  If the route is direct, the transport layer of "
"a protocol family usually requests the packet be sent to the same host "
"specified in the packet.  Otherwise, the interface is requested to address "
"the packet to the gateway listed in the routing entry (i.e., the packet is "
"forwarded)."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:96
msgid ""
"When routing a packet, the kernel will attempt to find the most specific "
"route matching the destination.  (If there are two different mask and "
"value-under-the-mask pairs that match, the more specific is the one with "
"more bits in the mask.  A route to a host is regarded as being supplied with "
"a mask of as many ones as there are bits in the destination).  If no entry "
"is found, the destination is declared to be unreachable, and a routing-miss "
"message is generated if there are any listeners on the routing control "
"socket described below."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:105
msgid ""
"A wildcard routing entry is specified with a zero destination address value, "
"and a mask of all zeroes.  Wildcard routes will be used when the system "
"fails to find other routes matching the destination.  The combination of "
"wildcard routes and routing redirects can provide an economical mechanism "
"for routing traffic."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:108
msgid ""
"One opens the channel for passing routing control messages by using the "
"socket call shown in the synopsis above:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:117
msgid ""
"The E<.Fa family> parameter may be E<.Dv AF_UNSPEC> which will provide "
"routing information for all address families, or can be restricted to a "
"specific address family by specifying which one is desired.  There can be "
"more than one routing socket open per system."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:131
msgid ""
"Messages are formed by a header followed by a small number of sockaddrs (now "
"variable length particularly in the E<.Tn ISO> case), interpreted by "
"position, and delimited by the new length entry in the sockaddr.  An example "
"of a message with four addresses might be an E<.Tn ISO> redirect: "
"Destination, Netmask, Gateway, and Author of the redirect.  The "
"interpretation of which address are present is given by a bit mask within "
"the header, and the sequence is least significant to most significant bit "
"within the vector."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:138
msgid ""
"Any messages sent to the kernel are returned, and copies are sent to all "
"interested listeners.  The kernel will provide the process ID for the "
"sender, and the sender may use an additional sequence field to distinguish "
"between outstanding messages.  However, message replies may be lost when "
"kernel buffers are exhausted."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:160
msgid ""
"The kernel may reject certain messages, and will indicate this by filling in "
"the E<.Ar rtm_errno> field.  The routing code returns E<.Er EEXIST> if "
"requested to duplicate an existing entry, E<.Er ESRCH> if requested to "
"delete a non-existent entry, or E<.Er ENOBUFS> if insufficient resources "
"were available to install a new route.  In the current implementation, all "
"routing processes run locally, and the values for E<.Ar rtm_errno> are "
"available through the normal E<.Em errno> mechanism, even if the routing "
"reply message is lost."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:174
msgid ""
"A process may avoid the expense of reading replies to its own messages by "
"issuing a E<.Xr setsockopt 2> call indicating that the E<.Dv SO_USELOOPBACK> "
"option at the E<.Dv SOL_SOCKET> level is to be turned off.  A process may "
"ignore all messages from the routing socket by doing a E<.Xr shutdown 2> "
"system call for further input."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:184
msgid ""
"If a route is in use when it is deleted, the routing entry will be marked "
"down and removed from the routing table, but the resources associated with "
"it will not be reclaimed until all references to it are released.  User "
"processes can obtain information about the routing entry to a specific "
"destination by using a E<.Dv RTM_GET> message, or by calling E<.Xr sysctl "
"3>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:186
msgid "Messages include:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:203
#, no-wrap
msgid ""
"#define\tRTM_ADD\t\t0x1    /* Add Route */\n"
"#define\tRTM_DELETE\t0x2    /* Delete Route */\n"
"#define\tRTM_CHANGE\t0x3    /* Change Metrics, Flags, or Gateway */\n"
"#define\tRTM_GET\t\t0x4    /* Report Information */\n"
"#define\tRTM_LOSING\t0x5    /* Kernel Suspects Partitioning */\n"
"#define\tRTM_REDIRECT\t0x6    /* Told to use different route */\n"
"#define\tRTM_MISS\t0x7    /* Lookup failed on this address */\n"
"#define\tRTM_LOCK\t0x8    /* fix specified metrics */\n"
"#define\tRTM_RESOLVE\t0xb    /* request to resolve dst to LL addr - unused "
"*/\n"
"#define\tRTM_NEWADDR\t0xc    /* address being added to iface */\n"
"#define\tRTM_DELADDR\t0xd    /* address being removed from iface */\n"
"#define\tRTM_IFINFO\t0xe    /* iface going up/down etc. */\n"
"#define\tRTM_NEWMADDR\t0xf    /* mcast group membership being added to if "
"*/\n"
"#define\tRTM_DELMADDR\t0x10   /* mcast group membership being deleted */\n"
"#define\tRTM_IFANNOUNCE\t0x11   /* iface arrival/departure */\n"
"#define\tRTM_IEEE80211\t0x12   /* IEEE80211 wireless event */\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:206
msgid "A message header consists of one of the following:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:221
#, no-wrap
msgid ""
"struct rt_msghdr {\n"
"    u_short rtm_msglen;         /* to skip over non-understood messages */\n"
"    u_char  rtm_version;        /* future binary compatibility */\n"
"    u_char  rtm_type;           /* message type */\n"
"    u_short rtm_index;          /* index for associated ifp */\n"
"    int     rtm_flags;          /* flags, incl. kern & message, e.g. DONE "
"*/\n"
"    int     rtm_addrs;          /* bitmask identifying sockaddrs in msg */\n"
"    pid_t   rtm_pid;            /* identify sender */\n"
"    int     rtm_seq;            /* for sender to identify action */\n"
"    int     rtm_errno;          /* why failed */\n"
"    int     rtm_fmask;          /* bitmask used in RTM_CHANGE message */\n"
"    u_long  rtm_inits;          /* which metrics we are initializing */\n"
"    struct  rt_metrics rtm_rmx;\t/* metrics themselves */\n"
"};\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:231
#, no-wrap
msgid ""
"struct if_msghdr {\n"
"    u_short ifm_msglen;         /* to skip over non-understood messages */\n"
"    u_char  ifm_version;        /* future binary compatibility */\n"
"    u_char  ifm_type;           /* message type */\n"
"    int     ifm_addrs;          /* like rtm_addrs */\n"
"    int     ifm_flags;          /* value of if_flags */\n"
"    u_short ifm_index;          /* index for associated ifp */\n"
"    struct  if_data ifm_data;   /* statistics and other data about if */\n"
"};\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:241
#, no-wrap
msgid ""
"struct ifa_msghdr {\n"
"    u_short ifam_msglen;        /* to skip over non-understood messages */\n"
"    u_char  ifam_version;       /* future binary compatibility */\n"
"    u_char  ifam_type;          /* message type */\n"
"    int     ifam_addrs;         /* like rtm_addrs */\n"
"    int     ifam_flags;         /* value of ifa_flags */\n"
"    u_short ifam_index;         /* index for associated ifp */\n"
"    int     ifam_metric;        /* value of ifa_metric */\n"
"};\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:250
#, no-wrap
msgid ""
"struct ifma_msghdr {\n"
"    u_short ifmam_msglen;       /* to skip over non-understood messages */\n"
"    u_char  ifmam_version;      /* future binary compatibility */\n"
"    u_char  ifmam_type;         /* message type */\n"
"    int     ifmam_addrs;        /* like rtm_addrs */\n"
"    int     ifmam_flags;        /* value of ifa_flags */\n"
"    u_short ifmam_index;        /* index for associated ifp */\n"
"};\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:259
#, no-wrap
msgid ""
"struct if_announcemsghdr {\n"
"\tu_short\tifan_msglen;\t/* to skip over non-understood messages */\n"
"\tu_char\tifan_version;\t/* future binary compatibility */\n"
"\tu_char\tifan_type;\t/* message type */\n"
"\tu_short\tifan_index;\t/* index for associated ifp */\n"
"\tchar\tifan_name[IFNAMSIZ]; /* if name, e.g. \"en0\" */\n"
"\tu_short\tifan_what;\t/* what type of announcement */\n"
"};\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:285
msgid ""
"The E<.Dv RTM_IFINFO> message uses a E<.Ar if_msghdr> header, the E<.Dv "
"RTM_NEWADDR> and E<.Dv RTM_DELADDR> messages use a E<.Ar ifa_msghdr> header, "
"the E<.Dv RTM_NEWMADDR> and E<.Dv RTM_DELMADDR> messages use a E<.Vt "
"ifma_msghdr> header, the E<.Dv RTM_IFANNOUNCE> message uses a E<.Vt "
"if_announcemsghdr> header, and all other messages use the E<.Ar rt_msghdr> "
"header."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:290
msgid ""
"The E<.Dq Li \"struct rt_metrics\"> and the flag bits are as defined in "
"E<.Xr rtentry 9>."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:292
msgid "Specifiers for metric values in rmx_locks and rtm_inits are:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:302
#, no-wrap
msgid ""
"#define\tRTV_MTU       0x1    /* init or lock _mtu */\n"
"#define\tRTV_HOPCOUNT  0x2    /* init or lock _hopcount */\n"
"#define\tRTV_EXPIRE    0x4    /* init or lock _expire */\n"
"#define\tRTV_RPIPE     0x8    /* init or lock _recvpipe */\n"
"#define\tRTV_SPIPE     0x10   /* init or lock _sendpipe */\n"
"#define\tRTV_SSTHRESH  0x20   /* init or lock _ssthresh */\n"
"#define\tRTV_RTT       0x40   /* init or lock _rtt */\n"
"#define\tRTV_RTTVAR    0x80   /* init or lock _rttvar */\n"
"#define\tRTV_WEIGHT    0x100  /* init or lock _weight */\n"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:305
msgid "Specifiers for which addresses are present in the messages are:"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:314
#, no-wrap
msgid ""
"#define RTA_DST       0x1    /* destination sockaddr present */\n"
"#define RTA_GATEWAY   0x2    /* gateway sockaddr present */\n"
"#define RTA_NETMASK   0x4    /* netmask sockaddr present */\n"
"#define RTA_GENMASK   0x8    /* cloning mask sockaddr present - unused */\n"
"#define RTA_IFP       0x10   /* interface name sockaddr present */\n"
"#define RTA_IFA       0x20   /* interface addr sockaddr present */\n"
"#define RTA_AUTHOR    0x40   /* sockaddr for author of redirect */\n"
"#define RTA_BRD       0x80   /* for NEWADDR, broadcast or p-p dest addr */\n"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/route.4:315
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:319
msgid "E<.Xr sysctl 3>, E<.Xr route 8>, E<.Xr rtentry 9>"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:325
msgid ""
"The constants for the E<.Va rtm_flags> field are documented in the manual "
"page for the E<.Xr route 8> utility."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/route.4:325
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/route.4:329
msgid "A E<.Dv PF_ROUTE> protocol family first appeared in E<.Bx 4.3 reno>."
msgstr ""
