# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:27-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man4/tap.4:4
#, no-wrap
msgid "April 29, 2019"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man4/tap.4:5
#, no-wrap
msgid "TAP 4"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/tap.4:7
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:9
msgid "E<.Nm tap>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man4/tap.4:9
#, no-wrap
msgid "Ethernet tunnel software network interface"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/tap.4:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:12
msgid "E<.Cd device tuntap>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/tap.4:12
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:23
msgid ""
"The E<.Nm> interface is a software loopback mechanism that can be loosely "
"described as the network interface analog of the E<.Xr pty 4>, that is, "
"E<.Nm> does for network interfaces what the E<.Xr pty 4> driver does for "
"terminals."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:48
msgid ""
"The E<.Nm> driver, like the E<.Xr pty 4> driver, provides two interfaces: an "
"interface like the usual facility it is simulating (an Ethernet network "
"interface in the case of E<.Nm>, or a terminal for E<.Xr pty 4>), and a "
"character-special device E<.Dq control> interface.  A client program "
"transfers Ethernet frames to or from the E<.Nm> E<.Dq control> interface.  "
"The E<.Xr tun 4> interface provides similar functionality at the network "
"layer: a client will transfer IP (by default) packets to or from a E<.Xr tun "
"4> E<.Dq control> interface."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:56
msgid ""
"The network interfaces are named E<.Dq Li tap0>, E<.Dq Li tap1>, etc., one "
"for each control device that has been opened.  These Ethernet network "
"interfaces persist until E<.Pa if_tuntap.ko> module is unloaded, or until "
"removed with \"ifconfig destroy\" (see below)."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:69
msgid ""
"E<.Nm> devices are created using interface cloning.  This is done using the "
"E<.Dq ifconfig tap Ns Sy N No create> command.  This is the preferred method "
"of creating E<.Nm> devices.  The same method allows removal of interfaces.  "
"For this, use the E<.Dq ifconfig tap Ns Sy N No destroy> command."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:86
msgid ""
"If the E<.Xr sysctl 8> variable E<.Va net.link.tap.devfs_cloning> is "
"non-zero, the E<.Nm> interface permits opens on the special control device "
"E<.Pa /dev/tap>.  When this device is opened, E<.Nm> will return a handle "
"for the lowest unused E<.Nm> device (use E<.Xr devname 3> to determine "
"which)."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:97
msgid ""
"E<.Bf Em> Disabling the legacy devfs cloning functionality may break "
"existing applications which use E<.Nm>, such as E<.Tn VMware> and E<.Xr ssh "
"1>.  It therefore defaults to being enabled until further notice.  E<.Ef>"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:101
msgid ""
"Control devices (once successfully opened) persist until E<.Pa if_tuntap.ko> "
"is unloaded or the interface is destroyed."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:117
msgid ""
"Each interface supports the usual Ethernet network interface E<.Xr ioctl 2 "
"Ns s> and thus can be used with E<.Xr ifconfig 8> like any other Ethernet "
"interface.  When the system chooses to transmit an Ethernet frame on the "
"network interface, the frame can be read from the control device (it appears "
"as E<.Dq input> there); writing an Ethernet frame to the control device "
"generates an input frame on the network interface, as if the (non-existent)  "
"hardware had just received it."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:150
msgid ""
"The Ethernet tunnel device, normally E<.Pa /dev/tap Ns Sy N>, is "
"exclusive-open (it cannot be opened if it is already open)  and is "
"restricted to the super-user, unless the E<.Xr sysctl 8> variable E<.Va "
"net.link.tap.user_open> is non-zero.  If the E<.Xr sysctl 8> variable E<.Va "
"net.link.tap.up_on_open> is non-zero, the tunnel device will be marked E<.Dq "
"up> when the control device is opened.  A E<.Fn read> call will return an "
"error E<.Pq Er EHOSTDOWN> if the interface is not E<.Dq ready>.  Once the "
"interface is ready, E<.Fn read> will return an Ethernet frame if one is "
"available; if not, it will either block until one is or return E<.Er "
"EWOULDBLOCK>, depending on whether non-blocking I/O has been enabled.  If "
"the frame is longer than is allowed for in the buffer passed to E<.Fn read>, "
"the extra data will be silently dropped."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:171
msgid ""
"A E<.Xr write 2> call passes an Ethernet frame in to be E<.Dq received> on "
"the pseudo-interface.  Each E<.Fn write> call supplies exactly one frame; "
"the frame length is taken from the amount of data provided to E<.Fn write>.  "
"Writes will not block; if the frame cannot be accepted for a transient "
"reason (e.g., no buffer space available), it is silently dropped; if the "
"reason is not transient (e.g., frame too large), an error is returned.  The "
"following E<.Xr ioctl 2> calls are supported (defined in"
msgstr ""

#. type: In
#: /usr/src/share/man/man4/tap.4:171
#, no-wrap
msgid "net/if_tap.h ) :"
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:173
#, no-wrap
msgid "Dv TAPSIFINFO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:184
msgid ""
"Set network interface information (line speed and MTU).  The type must be "
"the same as returned by E<.Dv TAPGIFINFO> or set to E<.Dv IFT_ETHER> else "
"the E<.Xr ioctl 2> call will fail.  The argument should be a pointer to a "
"E<.Va struct tapinfo>."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:184
#, no-wrap
msgid "Dv TAPGIFINFO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:188
msgid ""
"Retrieve network interface information (line speed, MTU and type).  The "
"argument should be a pointer to a E<.Va struct tapinfo>."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:188
#, no-wrap
msgid "Dv TAPSDEBUG"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:195
msgid ""
"The argument should be a pointer to an E<.Va int>; this sets the internal "
"debugging variable to that value.  What, if anything, this variable controls "
"is not documented here; see the source code."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:195
#, no-wrap
msgid "Dv TAPGDEBUG"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:199
msgid ""
"The argument should be a pointer to an E<.Va int>; this stores the internal "
"debugging variable's value into it."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:199
#, no-wrap
msgid "Dv TAPGIFNAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:206
msgid ""
"Retrieve network interface name.  The argument should be a pointer to a "
"E<.Va struct ifreq>.  The interface name will be returned in the E<.Va "
"ifr_name> field."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:206
#, no-wrap
msgid "Dv FIONBIO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:211
msgid ""
"Turn non-blocking I/O for reads off or on, according as the argument E<.Va "
"int Ns 's> value is or is not zero (Writes are always nonblocking)."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:211
#, no-wrap
msgid "Dv FIOASYNC"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:219
msgid ""
"Turn asynchronous I/O for reads (i.e., generation of E<.Dv SIGIO> when data "
"is available to be read)  off or on, according as the argument E<.Va int Ns "
"'s> value is or is not zero."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:219
#, no-wrap
msgid "Dv FIONREAD"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:223
msgid ""
"If any frames are queued to be read, store the size of the first one into "
"the argument E<.Va int>; otherwise, store zero."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:223
#, no-wrap
msgid "Dv TIOCSPGRP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:229
msgid ""
"Set the process group to receive E<.Dv SIGIO> signals, when asynchronous I/O "
"is enabled, to the argument E<.Va int> value."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:229
#, no-wrap
msgid "Dv TIOCGPGRP"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:235
msgid ""
"Retrieve the process group value for E<.Dv SIGIO> signals into the argument "
"E<.Va int> value."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:235
#, no-wrap
msgid "Dv SIOCGIFADDR"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:262
msgid ""
"Retrieve the Media Access Control E<.Pq Dv MAC> address of the E<.Dq remote> "
"side.  This command is used by the VMware port and expected to be executed "
"on descriptor, associated with control device (usually E<.Pa /dev/vmnet Ns "
"Sy N> or E<.Pa /dev/tap Ns Sy N>).  The E<.Va buffer>, which is passed as "
"the argument, is expected to have enough space to store the E<.Dv MAC> "
"address.  At the open time both E<.Dq local> and E<.Dq remote> E<.Dv MAC> "
"addresses are the same, so this command could be used to retrieve the E<.Dq "
"local> E<.Dv MAC> address."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:262
#, no-wrap
msgid "Dv SIOCSIFADDR"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:272
msgid ""
"Set the Media Access Control E<.Pq Dv MAC> address of the E<.Dq remote> "
"side.  This command is used by VMware port and expected to be executed on a "
"descriptor, associated with control device (usually E<.Pa /dev/vmnet Ns Sy "
"N>)."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:278
msgid ""
"The control device also supports E<.Xr select 2> for read; selecting for "
"write is pointless, and always succeeds, since writes are always "
"non-blocking."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:292
msgid ""
"On the last close of the data device, the interface is brought down (as if "
"with E<.Dq ifconfig tap Ns Sy N No down>)  unless the device is a E<.Em "
"VMnet> device, or has E<.Dv IFF_LINK0> flag set.  All queued frames are "
"thrown away.  If the interface is up when the data device is not open, "
"output frames are thrown away rather than letting them pile up."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:305
msgid ""
"The E<.Nm> device can also be used with the VMware port as a replacement for "
"the old E<.Em VMnet> device driver.  E<.Em VMnet> devices do not E<.Xr "
"ifconfig 8> themselves down when the control device is closed.  Everything "
"else is the same."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:309
msgid ""
"In addition to the above mentioned E<.Xr ioctl 2> calls, there is an "
"additional one for the VMware port."
msgstr ""

#. type: It
#: /usr/src/share/man/man4/tap.4:310
#, no-wrap
msgid "Dv VMIO_SIOCSIFFLAGS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:313
msgid "VMware E<.Dv SIOCSIFFLAGS>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/tap.4:314
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/tap.4:317
msgid "E<.Xr inet 4>, E<.Xr intro 4>, E<.Xr tun 4>"
msgstr ""
