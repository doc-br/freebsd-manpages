# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-05-18 14:28-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Dd
#: /usr/src/share/man/man4/altera_jtag_uart.4:32
#, no-wrap
msgid "August 18, 2012"
msgstr ""

#. type: Dt
#: /usr/src/share/man/man4/altera_jtag_uart.4:33
#, no-wrap
msgid "ALTERA_JTAG_UART 4"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/altera_jtag_uart.4:35
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/altera_jtag_uart.4:37
msgid "E<.Nm altera_jtag_uart>"
msgstr ""

#. type: Nd
#: /usr/src/share/man/man4/altera_jtag_uart.4:37
#, no-wrap
msgid "driver for the Altera JTAG UART Core"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/altera_jtag_uart.4:38
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/altera_jtag_uart.4:40
msgid "E<.Cd \"device altera_jtag_uart\">"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/altera_jtag_uart.4:50
msgid ""
"In E<.Pa /boot/device.hints>: E<.Cd hint.altera_jtag_uart.0.at=\"nexus0\"> "
"E<.Cd hint.altera_jtag_uart.0.maddr=0x7f000000> E<.Cd "
"hint.altera_jtag_uart.0.msize=0x40> E<.Cd hint.altera_jtag_uart.0.irq=0> "
"E<.Cd hint.altera_jtag_uart.1.at=\"nexus0\"> E<.Cd "
"hint.altera_jtag_uart.1.maddr=0x7f001000> E<.Cd "
"hint.altera_jtag_uart.1.msize=0x40>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/altera_jtag_uart.4:50
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/altera_jtag_uart.4:67
msgid ""
"The E<.Nm> device driver provides support for the Altera JTAG UART core, "
"which allows multiple UART-like streams to be carried over JTAG.  E<.Nm> "
"allows JTAG UART streams to be attached to both the low-level console "
"interface, used for direct kernel input and output, and the E<.Xr tty 4> "
"layer, to be used with E<.Xr ttys 5> and E<.Xr login 1>.  Sequential Altera "
"JTAG UART devices will appear as E<.Li ttyu0>, E<.Li ttyu1>, etc."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/altera_jtag_uart.4:67
#, no-wrap
msgid "HARDWARE"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/altera_jtag_uart.4:79
msgid ""
"Altera JTAG UART devices can be connected to using Altera's E<.Pa "
"nios2-terminal> program, with the instance selected using the E<.Li "
"--instance> argument on the management host.  E<.Nm> supports JTAG UART "
"cores with or without interrupt lines connected; if the E<.Li irq> portion "
"of the E<.Pa device.hints> entry is omitted, the driver will poll rather "
"than configure interrupts."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/altera_jtag_uart.4:79
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/altera_jtag_uart.4:89
msgid ""
"E<.Xr login 1>, E<.Xr tty 4>, E<.Xr ttys 5> E<.Rs> E<.%T Altera Embedded "
"Peripherals IP User Guide> E<.%D June 2011> E<.%I Altera Corporation> E<.%U "
"http://www.altera.com/literature/ug/ug_embedded_ip.pdf> E<.Re>"
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/altera_jtag_uart.4:89
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/altera_jtag_uart.4:94
msgid "The E<.Nm> device driver first appeared in E<.Fx 10.0>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/altera_jtag_uart.4:94
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/altera_jtag_uart.4:105
msgid ""
"The E<.Nm> device driver and this manual page were developed by SRI "
"International and the University of Cambridge Computer Laboratory under "
"DARPA/AFRL contract E<.Pq FA8750-10-C-0237> E<.Pq Do CTSRD Dc>, as part of "
"the DARPA CRASH research programme.  This device driver was written by E<.An "
"Robert N. M. Watson>."
msgstr ""

#. type: Sh
#: /usr/src/share/man/man4/altera_jtag_uart.4:105
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/altera_jtag_uart.4:118
msgid ""
"E<.Nm> must dynamically poll to detect when JTAG is present, in order to "
"disable flow control in the event that there is no receiving endpoint.  "
"Otherwise, the boot may hang waiting for the JTAG client to be attached, and "
"user processes attached to JTAG UART devices might block indefinitely.  "
"However, there is no way to flush the output buffer once JTAG is detected to "
"have disappeared; this means that a small amount of stale output data will "
"remain in the output buffer, being displayed by E<.Li nios2-terminal> when "
"it is connected.  Loss of JTAG will not generate a hang-up event, as that is "
"rarely the desired behaviour."
msgstr ""

#. type: Plain text
#: /usr/src/share/man/man4/altera_jtag_uart.4:121
msgid ""
"E<.Li nios2-terminal> does not place the client-side TTY in raw mode, and so "
"by default will not pass all control characters through to the UART."
msgstr ""
